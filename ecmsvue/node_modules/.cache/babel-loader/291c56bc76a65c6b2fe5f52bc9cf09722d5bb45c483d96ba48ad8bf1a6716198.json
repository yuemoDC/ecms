{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'ProductManagement',\n  data() {\n    return {\n      products: [],\n      isProductFormVisible: true,\n      // 控制对话框的显示\n      productForm: {\n        productName: '',\n        price: 0,\n        status: 'active',\n        merchantId: null // 添加商家ID\n      },\n      selectedProduct: null\n    };\n  },\n  methods: {\n    fetchProducts() {\n      console.log('Fetching products...');\n      axios.get('http://localhost:8080/api/products').then(response => {\n        console.log('Products fetched successfully:', response.data);\n        this.products = response.data;\n      }).catch(error => {\n        console.error('获取产品时出错:', error);\n      });\n    },\n    showProductForm() {\n      console.log('Showing product form...');\n      this.selectedProduct = null; // Reset selected product for adding new product\n      this.productForm = {\n        productName: '',\n        price: 0,\n        status: 'active',\n        merchantId: null // Reset merchant ID\n      };\n      this.isProductFormVisible = true; // 打开对话框\n    },\n    editProduct(product) {\n      console.log('Editing product:', product);\n      this.selectedProduct = product; // 记录选择的产品\n      this.productForm = {\n        productName: product.productName,\n        price: product.price,\n        status: product.status,\n        merchantId: product.merchantId // 确保将商家ID填入\n      };\n      this.isProductFormVisible = true; // 打开对话框\n    },\n    clearForm() {\n      console.log('Clearing form...');\n      this.selectedProduct = null;\n      this.productForm = {\n        productName: '',\n        price: 0,\n        status: 'active',\n        merchantId: null // Reset merchant ID\n      };\n      this.isProductFormVisible = false; // 关闭对话框\n    },\n    saveProduct() {\n      const url = this.selectedProduct ? `http://localhost:8080/api/products/${this.selectedProduct.productId}` : 'http://localhost:8080/api/products';\n      const method = this.selectedProduct ? 'put' : 'post';\n\n      // 确保包含所有必需字段\n      const productData = {\n        merchantId: this.productForm.merchantId,\n        // 确保商家ID不为null\n        productName: this.productForm.productName,\n        price: this.productForm.price,\n        stockQuantity: 0,\n        // 默认值，或从表单中获取\n        status: this.productForm.status\n      };\n      console.log(`Saving product... Method: ${method}, URL: ${url}, Data:`, productData);\n      axios[method](url, productData).then(() => {\n        console.log('Product saved successfully');\n        this.fetchProducts(); // 刷新产品列表\n        this.clearForm(); // 清空表单\n      }).catch(error => {\n        console.error('保存产品时出错:', error);\n      });\n    },\n    deleteProduct(productId) {\n      console.log('Deleting product with ID:', productId);\n      axios.delete(`http://localhost:8080/api/products/${productId}`).then(() => {\n        console.log('Product deleted successfully');\n        this.fetchProducts(); // 删除后刷新产品列表\n      }).catch(error => {\n        console.error('删除产品时出错:', error);\n      });\n    }\n  },\n  mounted() {\n    this.fetchProducts(); // 组件加载时获取产品列表\n  }\n};","map":{"version":3,"names":["axios","name","data","products","isProductFormVisible","productForm","productName","price","status","merchantId","selectedProduct","methods","fetchProducts","console","log","get","then","response","catch","error","showProductForm","editProduct","product","clearForm","saveProduct","url","productId","method","productData","stockQuantity","deleteProduct","delete","mounted"],"sources":["E:\\ecms\\ecmsvue\\src\\views\\Products.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>产品管理</h1>\r\n    <el-button type=\"primary\" @click=\"showProductForm\" style=\"margin-bottom: 20px;\">添加产品</el-button>\r\n\r\n    <!-- 产品表格 -->\r\n    <el-table :data=\"products\" style=\"width: 100%;\">\r\n      <el-table-column prop=\"productName\" label=\"产品名称\" />\r\n      <el-table-column prop=\"price\" label=\"价格\" />\r\n      <el-table-column prop=\"status\" label=\"状态\" />\r\n      <el-table-column label=\"操作\">\r\n        <template #default=\"scope\">\r\n          <el-button size=\"small\" @click=\"editProduct(scope.row)\">编辑</el-button>\r\n          <el-button size=\"small\" type=\"danger\" @click=\"deleteProduct(scope.row.productId)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 产品表单对话框 -->\r\n    <el-dialog v-model:visible=\"isProductFormVisible\" title=\"产品表单\" @close=\"clearForm\">\r\n      <el-form :model=\"productForm\" label-width=\"120px\" size=\"medium\">\r\n        <el-form-item label=\"产品名称\">\r\n          <el-input v-model=\"productForm.productName\" placeholder=\"请输入产品名称\" required />\r\n        </el-form-item>\r\n        <el-form-item label=\"价格\">\r\n          <el-input type=\"number\" v-model=\"productForm.price\" placeholder=\"请输入产品价格\" required />\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\">\r\n          <el-select v-model=\"productForm.status\" placeholder=\"选择状态\" required>\r\n            <el-option label=\"可用\" value=\"active\" />\r\n            <el-option label=\"不可用\" value=\"inactive\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"商家ID\">\r\n          <el-input type=\"number\" v-model=\"productForm.merchantId\" placeholder=\"请输入商家ID\" required />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"clearForm\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"saveProduct\">{{ selectedProduct ? '更新产品' : '添加产品' }}</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'ProductManagement',\r\n  data() {\r\n    return {\r\n      products: [],\r\n      isProductFormVisible: true, // 控制对话框的显示\r\n      productForm: {\r\n        productName: '',\r\n        price: 0,\r\n        status: 'active',\r\n        merchantId: null // 添加商家ID\r\n      },\r\n      selectedProduct: null\r\n    };\r\n  },\r\n  methods: {\r\n    fetchProducts() {\r\n      console.log('Fetching products...');\r\n      axios.get('http://localhost:8080/api/products')\r\n          .then(response => {\r\n            console.log('Products fetched successfully:', response.data);\r\n            this.products = response.data;\r\n          })\r\n          .catch(error => {\r\n            console.error('获取产品时出错:', error);\r\n          });\r\n    },\r\n    showProductForm() {\r\n      console.log('Showing product form...');\r\n      this.selectedProduct = null; // Reset selected product for adding new product\r\n      this.productForm = {\r\n        productName: '',\r\n        price: 0,\r\n        status: 'active',\r\n        merchantId: null // Reset merchant ID\r\n      };\r\n      this.isProductFormVisible = true; // 打开对话框\r\n    },\r\n    editProduct(product) {\r\n      console.log('Editing product:', product);\r\n      this.selectedProduct = product; // 记录选择的产品\r\n      this.productForm = {\r\n        productName: product.productName,\r\n        price: product.price,\r\n        status: product.status,\r\n        merchantId: product.merchantId // 确保将商家ID填入\r\n      };\r\n      this.isProductFormVisible = true; // 打开对话框\r\n    },\r\n    clearForm() {\r\n      console.log('Clearing form...');\r\n      this.selectedProduct = null;\r\n      this.productForm = {\r\n        productName: '',\r\n        price: 0,\r\n        status: 'active',\r\n        merchantId: null // Reset merchant ID\r\n      };\r\n      this.isProductFormVisible = false; // 关闭对话框\r\n    },\r\n    saveProduct() {\r\n      const url = this.selectedProduct\r\n          ? `http://localhost:8080/api/products/${this.selectedProduct.productId}`\r\n          : 'http://localhost:8080/api/products';\r\n\r\n      const method = this.selectedProduct ? 'put' : 'post';\r\n\r\n      // 确保包含所有必需字段\r\n      const productData = {\r\n        merchantId: this.productForm.merchantId, // 确保商家ID不为null\r\n        productName: this.productForm.productName,\r\n        price: this.productForm.price,\r\n        stockQuantity: 0, // 默认值，或从表单中获取\r\n        status: this.productForm.status\r\n      };\r\n\r\n      console.log(`Saving product... Method: ${method}, URL: ${url}, Data:`, productData);\r\n\r\n      axios[method](url, productData)\r\n          .then(() => {\r\n            console.log('Product saved successfully');\r\n            this.fetchProducts(); // 刷新产品列表\r\n            this.clearForm(); // 清空表单\r\n          })\r\n          .catch(error => {\r\n            console.error('保存产品时出错:', error);\r\n          });\r\n    },\r\n    deleteProduct(productId) {\r\n      console.log('Deleting product with ID:', productId);\r\n      axios.delete(`http://localhost:8080/api/products/${productId}`)\r\n          .then(() => {\r\n            console.log('Product deleted successfully');\r\n            this.fetchProducts(); // 删除后刷新产品列表\r\n          })\r\n          .catch(error => {\r\n            console.error('删除产品时出错:', error);\r\n          });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchProducts(); // 组件加载时获取产品列表\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.el-table {\r\n  width: 100%; /* 确保表格占满父容器 */\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}