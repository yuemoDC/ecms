{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport AppMerchantNavbar from '../components/MerchantNavbar.vue';\nimport AppAdminNavbar from '../components/AdminNavbar.vue';\nimport gsap from 'gsap'; // 导入GSAP\n\nexport default {\n  name: 'HomePage',\n  components: {\n    AppMerchantNavbar,\n    AppAdminNavbar\n  },\n  setup() {\n    // 使用组合式API重构组件\n    const title = ref(null);\n    const welcomeMsg = ref(null);\n    const timeMsg = ref(null);\n    const noticeBoard = ref(null);\n    const userInfo = ref(null);\n    const notice1 = ref(null);\n    const notice2 = ref(null);\n    const notice3 = ref(null);\n    const currentUser = ref(null);\n    const currentTime = ref('');\n\n    // 检查是否首次访问\n    const checkFirstVisit = () => {\n      const visited = sessionStorage.getItem('homeVisited');\n      if (!visited) {\n        sessionStorage.setItem('homeVisited', 'true');\n        return true;\n      }\n      return false;\n    };\n\n    // 获取当前用户信息\n    const getCurrentUser = () => {\n      const userData = localStorage.getItem('user');\n      if (userData) {\n        try {\n          const parsedUserData = JSON.parse(userData);\n          if (parsedUserData.success) {\n            currentUser.value = {\n              role: parsedUserData.role,\n              id: parsedUserData.userid,\n              token: parsedUserData.token,\n              username: parsedUserData.username\n            };\n          } else {\n            console.error('用户信息不正确:', parsedUserData);\n          }\n        } catch (e) {\n          console.error('解析用户信息失败:', e);\n        }\n      }\n    };\n\n    // 更新时间\n    const updateTime = () => {\n      const now = new Date();\n      currentTime.value = now.toLocaleString();\n    };\n\n    // 执行动画\n    const playEntranceAnimation = () => {\n      // 设置初始状态 - 所有元素隐藏\n      gsap.set([title.value, welcomeMsg.value, timeMsg.value, noticeBoard.value, userInfo.value], {\n        opacity: 0\n      });\n\n      // 设置各个元素的初始位置\n      gsap.set(title.value, {\n        y: -50\n      });\n      gsap.set(welcomeMsg.value, {\n        x: -50\n      });\n      gsap.set(timeMsg.value, {\n        x: 50\n      });\n      gsap.set(noticeBoard.value, {\n        scale: 0.8\n      });\n      gsap.set(userInfo.value, {\n        y: -30\n      });\n      gsap.set([notice1.value, notice2.value, notice3.value], {\n        x: 20,\n        opacity: 0\n      });\n\n      // 创建动画时间线\n      const tl = gsap.timeline();\n\n      // 添加动画序列\n      // 标题动画\n      tl.to(title.value, {\n        opacity: 1,\n        y: 0,\n        duration: 0.8,\n        ease: \"power3.out\"\n      });\n\n      // 欢迎消息动画\n      tl.to(welcomeMsg.value, {\n        opacity: 1,\n        x: 0,\n        duration: 0.6,\n        ease: \"power2.out\"\n      }, \"-=0.3\");\n\n      // 时间消息动画\n      tl.to(timeMsg.value, {\n        opacity: 1,\n        x: 0,\n        duration: 0.6,\n        ease: \"power2.out\"\n      }, \"-=0.4\");\n\n      // 用户信息标签动画\n      tl.to(userInfo.value, {\n        opacity: 1,\n        y: 0,\n        duration: 0.5,\n        ease: \"back.out(1.7)\"\n      }, \"-=0.5\");\n\n      // 公告栏动画\n      tl.to(noticeBoard.value, {\n        opacity: 1,\n        scale: 1,\n        duration: 0.8,\n        ease: \"back.out(1.2)\"\n      }, \"-=0.3\");\n\n      // 公告列表项动画\n      tl.to([notice1.value, notice2.value, notice3.value], {\n        opacity: 1,\n        x: 0,\n        duration: 0.5,\n        stagger: 0.15,\n        ease: \"power1.out\"\n      }, \"-=0.5\");\n    };\n    onMounted(() => {\n      getCurrentUser();\n      updateTime();\n      setInterval(updateTime, 1000);\n\n      // 检查是否首次访问并播放动画\n      const isFirstVisit = checkFirstVisit();\n      if (isFirstVisit) {\n        playEntranceAnimation();\n      } else {\n        // 非首次访问，设置所有元素为可见状态\n        gsap.set([title.value, welcomeMsg.value, timeMsg.value, noticeBoard.value, userInfo.value, notice1.value, notice2.value, notice3.value], {\n          opacity: 1\n        });\n      }\n    });\n\n    // 计算当前应该使用的导航栏组件\n    const navbarComponent = computed(() => {\n      if (currentUser.value && currentUser.value.role === 'admin') {\n        return 'AppAdminNavbar';\n      }\n      return 'AppMerchantNavbar';\n    });\n    return {\n      title,\n      welcomeMsg,\n      timeMsg,\n      noticeBoard,\n      userInfo,\n      notice1,\n      notice2,\n      notice3,\n      currentUser,\n      currentTime,\n      navbarComponent\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","AppMerchantNavbar","AppAdminNavbar","gsap","name","components","setup","title","welcomeMsg","timeMsg","noticeBoard","userInfo","notice1","notice2","notice3","currentUser","currentTime","checkFirstVisit","visited","sessionStorage","getItem","setItem","getCurrentUser","userData","localStorage","parsedUserData","JSON","parse","success","value","role","id","userid","token","username","console","error","e","updateTime","now","Date","toLocaleString","playEntranceAnimation","set","opacity","y","x","scale","tl","timeline","to","duration","ease","stagger","setInterval","isFirstVisit","navbarComponent","computed"],"sources":["D:\\code_new\\ecms\\ecmsvue\\src\\views\\Home.vue"],"sourcesContent":["<template>\n  <div>\n    <component :is=\"navbarComponent\" />\n    <div class=\"home-container\">\n      <!-- 添加了ref以便GSAP可以找到它们 -->\n      <h1 ref=\"title\" class=\"title\">欢迎来到首页!</h1>\n      <p ref=\"welcomeMsg\" class=\"welcome-msg\">\n        欢迎回来，{{ currentUser?.username || '用户' }}！\n      </p>\n      <p ref=\"timeMsg\" class=\"time-msg\">当前时间：{{ currentTime }}</p>\n\n      <!-- 公告栏 -->\n      <el-card ref=\"noticeBoard\" class=\"notice-board\" shadow=\"hover\">\n        <h3>📢 系统公告</h3>\n        <ul class=\"notice-list\">\n          <li ref=\"notice1\">🛠 系统维护时间：每周日凌晨 2:00 - 4:00</li>\n          <li ref=\"notice2\">📊 数据将在每天晚上自动备份</li>\n          <li ref=\"notice3\">📌 如遇页面问题，请刷新或重新登录</li>\n        </ul>\n      </el-card>\n\n      <div ref=\"userInfo\" class=\"user-info\">\n        <el-tag type=\"success\" v-if=\"currentUser\">\n          你好，你的{{ currentUser.role }}ID为: {{ currentUser.id }}\n        </el-tag>\n        <el-tag type=\"info\" v-else>\n          未登录\n        </el-tag>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport AppMerchantNavbar from '../components/MerchantNavbar.vue';\nimport AppAdminNavbar from '../components/AdminNavbar.vue';\nimport gsap from 'gsap'; // 导入GSAP\n\nexport default {\n  name: 'HomePage',\n  components: {\n    AppMerchantNavbar,\n    AppAdminNavbar\n  },\n  setup() {\n    // 使用组合式API重构组件\n    const title = ref(null);\n    const welcomeMsg = ref(null);\n    const timeMsg = ref(null);\n    const noticeBoard = ref(null);\n    const userInfo = ref(null);\n    const notice1 = ref(null);\n    const notice2 = ref(null);\n    const notice3 = ref(null);\n\n    const currentUser = ref(null);\n    const currentTime = ref('');\n\n    // 检查是否首次访问\n    const checkFirstVisit = () => {\n      const visited = sessionStorage.getItem('homeVisited');\n      if (!visited) {\n        sessionStorage.setItem('homeVisited', 'true');\n        return true;\n      }\n      return false;\n    };\n\n    // 获取当前用户信息\n    const getCurrentUser = () => {\n      const userData = localStorage.getItem('user');\n      if (userData) {\n        try {\n          const parsedUserData = JSON.parse(userData);\n          if (parsedUserData.success) {\n            currentUser.value = {\n              role: parsedUserData.role,\n              id: parsedUserData.userid,\n              token: parsedUserData.token,\n              username: parsedUserData.username\n            };\n          } else {\n            console.error('用户信息不正确:', parsedUserData);\n          }\n        } catch (e) {\n          console.error('解析用户信息失败:', e);\n        }\n      }\n    };\n\n    // 更新时间\n    const updateTime = () => {\n      const now = new Date();\n      currentTime.value = now.toLocaleString();\n    };\n\n    // 执行动画\n    const playEntranceAnimation = () => {\n      // 设置初始状态 - 所有元素隐藏\n      gsap.set([title.value, welcomeMsg.value, timeMsg.value, noticeBoard.value, userInfo.value], {\n        opacity: 0\n      });\n\n      // 设置各个元素的初始位置\n      gsap.set(title.value, { y: -50 });\n      gsap.set(welcomeMsg.value, { x: -50 });\n      gsap.set(timeMsg.value, { x: 50 });\n      gsap.set(noticeBoard.value, { scale: 0.8 });\n      gsap.set(userInfo.value, { y: -30 });\n      gsap.set([notice1.value, notice2.value, notice3.value], { x: 20, opacity: 0 });\n\n      // 创建动画时间线\n      const tl = gsap.timeline();\n\n      // 添加动画序列\n      // 标题动画\n      tl.to(title.value, {\n        opacity: 1,\n        y: 0,\n        duration: 0.8,\n        ease: \"power3.out\"\n      });\n\n      // 欢迎消息动画\n      tl.to(welcomeMsg.value, {\n        opacity: 1,\n        x: 0,\n        duration: 0.6,\n        ease: \"power2.out\"\n      }, \"-=0.3\");\n\n      // 时间消息动画\n      tl.to(timeMsg.value, {\n        opacity: 1,\n        x: 0,\n        duration: 0.6,\n        ease: \"power2.out\"\n      }, \"-=0.4\");\n\n      // 用户信息标签动画\n      tl.to(userInfo.value, {\n        opacity: 1,\n        y: 0,\n        duration: 0.5,\n        ease: \"back.out(1.7)\"\n      }, \"-=0.5\");\n\n      // 公告栏动画\n      tl.to(noticeBoard.value, {\n        opacity: 1,\n        scale: 1,\n        duration: 0.8,\n        ease: \"back.out(1.2)\"\n      }, \"-=0.3\");\n\n      // 公告列表项动画\n      tl.to([notice1.value, notice2.value, notice3.value], {\n        opacity: 1,\n        x: 0,\n        duration: 0.5,\n        stagger: 0.15,\n        ease: \"power1.out\"\n      }, \"-=0.5\");\n    };\n\n    onMounted(() => {\n      getCurrentUser();\n      updateTime();\n      setInterval(updateTime, 1000);\n\n      // 检查是否首次访问并播放动画\n      const isFirstVisit = checkFirstVisit();\n      if (isFirstVisit) {\n        playEntranceAnimation();\n      } else {\n        // 非首次访问，设置所有元素为可见状态\n        gsap.set([\n          title.value,\n          welcomeMsg.value,\n          timeMsg.value,\n          noticeBoard.value,\n          userInfo.value,\n          notice1.value,\n          notice2.value,\n          notice3.value\n        ], { opacity: 1 });\n      }\n    });\n\n    // 计算当前应该使用的导航栏组件\n    const navbarComponent = computed(() => {\n      if (currentUser.value && currentUser.value.role === 'admin') {\n        return 'AppAdminNavbar';\n      }\n      return 'AppMerchantNavbar';\n    });\n\n    return {\n      title,\n      welcomeMsg,\n      timeMsg,\n      noticeBoard,\n      userInfo,\n      notice1,\n      notice2,\n      notice3,\n      currentUser,\n      currentTime,\n      navbarComponent\n    };\n  }\n};\n</script>\n\n<style scoped>\n.home-container {\n  position: relative;\n  padding: 20px;\n  text-align: center;\n}\n\n.title {\n  font-size: 36px;\n  color: #409EFF;\n  margin-bottom: 20px;\n}\n\n.welcome-msg {\n  font-size: 20px;\n  margin: 10px 0;\n}\n\n.time-msg {\n  font-size: 16px;\n  color: #888;\n  margin-bottom: 30px;\n}\n\n.user-info {\n  position: absolute;\n  top: 20px;\n  right: 20px;\n}\n\n.notice-board {\n  max-width: 600px;\n  margin: 0 auto;\n  text-align: left;\n  padding: 20px;\n  border-left: 5px solid #409EFF;\n  transition: transform 0.3s ease;\n}\n\n.notice-board:hover {\n  transform: translateY(-5px);\n}\n\n.notice-list {\n  list-style: none;\n  padding-left: 0;\n  margin-top: 10px;\n}\n\n.notice-list li {\n  margin-bottom: 10px;\n  font-size: 16px;\n  color: #333;\n  padding: 5px 0;\n}\n\n/* 响应式优化 */\n@media (max-width: 768px) {\n  .user-info {\n    position: static;\n    margin-top: 20px;\n    text-align: center;\n  }\n\n  .notice-board {\n    width: 90%;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}