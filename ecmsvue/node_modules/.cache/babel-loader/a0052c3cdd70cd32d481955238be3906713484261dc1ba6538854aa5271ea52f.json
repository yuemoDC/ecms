{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport * as echarts from 'echarts';\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'MerchantDashboard',\n  data() {\n    return {\n      merchantId: '',\n      activeTab: 'dashboard',\n      activeReportTab: 'dailySales',\n      activeSearchTab: 'orders',\n      loading: {\n        salesTrend: false,\n        inventoryAlerts: false,\n        customerBehavior: false,\n        dailySalesReport: false,\n        monthlySalesReport: false,\n        productSalesReport: false,\n        inventoryReport: false,\n        orderSearch: false,\n        productSearch: false\n      },\n      salesTrend: null,\n      inventoryAlerts: null,\n      customerBehavior: null,\n      reports: {\n        dailySales: null,\n        monthlySales: null,\n        productSales: null,\n        inventory: null\n      },\n      searchResults: {\n        orders: [],\n        products: []\n      },\n      dateRange: {\n        dailySales: [],\n        productSales: []\n      },\n      selectedYear: new Date(),\n      searchParams: {\n        orders: {\n          customerId: '',\n          productId: '',\n          orderStatus: '',\n          minAmount: null,\n          maxAmount: null\n        },\n        products: {\n          productName: '',\n          minPrice: null,\n          maxPrice: null,\n          minStock: null,\n          maxStock: null\n        }\n      }\n    };\n  },\n  computed: {\n    customerSegmentData() {\n      if (!this.customerBehavior?.segmentStats) return [];\n      return Object.entries(this.customerBehavior.segmentStats).map(([segment, data]) => ({\n        segment,\n        count: data.count,\n        percentage: data.percentage\n      }));\n    }\n  },\n  methods: {\n    async fetchData() {\n      if (!this.merchantId) {\n        ElMessage.error('请输入商家ID');\n        return;\n      }\n      await this.loadDashboardData();\n    },\n    async loadDashboardData() {\n      await Promise.all([this.loadSalesTrend(), this.loadInventoryAlerts(), this.loadCustomerBehavior()]);\n    },\n    async loadSalesTrend() {\n      this.loading.salesTrend = true;\n      try {\n        const response = await axios.get(`http://localhost:8080//api/data-analysis/sales-trend/${this.merchantId}`);\n        this.salesTrend = response.data;\n        this.$nextTick(() => {\n          this.renderSalesChart();\n        });\n      } catch (error) {\n        ElMessage.error('获取销售趋势数据失败');\n      } finally {\n        this.loading.salesTrend = false;\n      }\n    },\n    async loadInventoryAlerts() {\n      this.loading.inventoryAlerts = true;\n      try {\n        const response = await axios.get(`http://localhost:8080//api/data-analysis/inventory-alerts/${this.merchantId}`);\n        this.inventoryAlerts = response.data;\n      } catch (error) {\n        ElMessage.error('获取库存预警数据失败');\n      } finally {\n        this.loading.inventoryAlerts = false;\n      }\n    },\n    async loadCustomerBehavior() {\n      this.loading.customerBehavior = true;\n      try {\n        const response = await axios.get(`http://localhost:8080//api/data-analysis/customer-behavior/${this.merchantId}`);\n        this.customerBehavior = response.data;\n      } catch (error) {\n        ElMessage.error('获取客户行为数据失败');\n      } finally {\n        this.loading.customerBehavior = false;\n      }\n    },\n    async loadDailySalesReport() {\n      if (!this.dateRange.dailySales || this.dateRange.dailySales.length !== 2) return;\n      this.loading.dailySalesReport = true;\n      try {\n        const [startDate, endDate] = this.dateRange.dailySales;\n        const response = await axios.get(`http://localhost:8080//api/reports/daily-sales/${this.merchantId}`, {\n          params: {\n            startDate: startDate.toISOString(),\n            endDate: endDate.toISOString()\n          }\n        });\n        this.reports.dailySales = response.data;\n        this.$nextTick(() => {\n          this.renderDailySalesChart();\n        });\n      } catch (error) {\n        ElMessage.error('获取日销售报表失败');\n      } finally {\n        this.loading.dailySalesReport = false;\n      }\n    },\n    async loadMonthlySalesReport() {\n      this.loading.monthlySalesReport = true;\n      try {\n        const response = await axios.get(`http://localhost:8080//api/reports/monthly-sales/${this.merchantId}`, {\n          params: {\n            year: this.selectedYear.getFullYear()\n          }\n        });\n        this.reports.monthlySales = response.data;\n        this.$nextTick(() => {\n          this.renderMonthlySalesChart();\n        });\n      } catch (error) {\n        ElMessage.error('获取月销售报表失败');\n      } finally {\n        this.loading.monthlySalesReport = false;\n      }\n    },\n    async loadProductSalesReport() {\n      if (!this.dateRange.productSales || this.dateRange.productSales.length !== 2) return;\n      this.loading.productSalesReport = true;\n      try {\n        const [startDate, endDate] = this.dateRange.productSales;\n        const response = await axios.get(`http://localhost:8080//api/reports/product-sales/${this.merchantId}`, {\n          params: {\n            startDate: startDate.toISOString(),\n            endDate: endDate.toISOString()\n          }\n        });\n        this.reports.productSales = response.data;\n      } catch (error) {\n        ElMessage.error('获取产品销售报表失败');\n      } finally {\n        this.loading.productSalesReport = false;\n      }\n    },\n    async loadInventoryReport() {\n      this.loading.inventoryReport = true;\n      try {\n        const response = await axios.get(`http://localhost:8080//api/reports/inventory/${this.merchantId}`);\n        this.reports.inventory = response.data;\n      } catch (error) {\n        ElMessage.error('获取库存报表失败');\n      } finally {\n        this.loading.inventoryReport = false;\n      }\n    },\n    async searchOrders() {\n      this.loading.orderSearch = true;\n      try {\n        const response = await axios.get('http://localhost:8080//api/advanced-search/orders', {\n          params: {\n            merchantId: this.merchantId,\n            ...this.searchParams.orders\n          }\n        });\n        this.searchResults.orders = response.data.content;\n      } catch (error) {\n        ElMessage.error('订单搜索失败');\n      } finally {\n        this.loading.orderSearch = false;\n      }\n    },\n    async searchProducts() {\n      this.loading.productSearch = true;\n      try {\n        const response = await axios.get('http://localhost:8080//api/advanced-search/products', {\n          params: {\n            merchantId: this.merchantId,\n            ...this.searchParams.products\n          }\n        });\n        this.searchResults.products = response.data.content;\n      } catch (error) {\n        ElMessage.error('产品搜索失败');\n      } finally {\n        this.loading.productSearch = false;\n      }\n    },\n    renderSalesChart() {\n      if (!this.salesTrend?.monthlySales) return;\n      const chart = echarts.init(this.$refs.salesChart);\n      const data = Object.entries(this.salesTrend.monthlySales);\n      chart.setOption({\n        title: {\n          text: '月销售趋势'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: data.map(([month]) => month)\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: '销售额',\n          type: 'line',\n          data: data.map(([, amount]) => amount)\n        }]\n      });\n    },\n    renderDailySalesChart() {\n      if (!this.reports.dailySales?.dailySales) return;\n      const chart = echarts.init(this.$refs.dailySalesChart);\n      const data = Object.entries(this.reports.dailySales.dailySales);\n      chart.setOption({\n        title: {\n          text: '日销售趋势'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: data.map(([date]) => date)\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: '销售额',\n          type: 'bar',\n          data: data.map(([, amount]) => amount)\n        }]\n      });\n    },\n    renderMonthlySalesChart() {\n      if (!this.reports.monthlySales?.monthlySales) return;\n      const chart = echarts.init(this.$refs.monthlySalesChart);\n      const data = Object.entries(this.reports.monthlySales.monthlySales);\n      chart.setOption({\n        title: {\n          text: '月销售趋势'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: data.map(([month]) => month)\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: '销售额',\n          type: 'line',\n          data: data.map(([, amount]) => amount)\n        }]\n      });\n    },\n    formatCurrency(value) {\n      return new Intl.NumberFormat('zh-CN', {\n        style: 'currency',\n        currency: 'CNY'\n      }).format(value);\n    },\n    formatPercentage(value) {\n      return `${(value || 0).toFixed(2)}%`;\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleString('zh-CN');\n    },\n    getStatusType(status) {\n      const types = {\n        '无库存': 'danger',\n        '紧急': 'danger',\n        '警告': 'warning',\n        '注意': 'info',\n        '充足': 'success'\n      };\n      return types[status] || 'info';\n    },\n    getOrderStatusType(status) {\n      const types = {\n        'pending': 'warning',\n        'shipped': 'info',\n        'completed': 'success',\n        'refunded': 'danger'\n      };\n      return types[status] || 'info';\n    }\n  }\n};","map":{"version":3,"names":["echarts","axios","ElMessage","name","data","merchantId","activeTab","activeReportTab","activeSearchTab","loading","salesTrend","inventoryAlerts","customerBehavior","dailySalesReport","monthlySalesReport","productSalesReport","inventoryReport","orderSearch","productSearch","reports","dailySales","monthlySales","productSales","inventory","searchResults","orders","products","dateRange","selectedYear","Date","searchParams","customerId","productId","orderStatus","minAmount","maxAmount","productName","minPrice","maxPrice","minStock","maxStock","computed","customerSegmentData","segmentStats","Object","entries","map","segment","count","percentage","methods","fetchData","error","loadDashboardData","Promise","all","loadSalesTrend","loadInventoryAlerts","loadCustomerBehavior","response","get","$nextTick","renderSalesChart","loadDailySalesReport","length","startDate","endDate","params","toISOString","renderDailySalesChart","loadMonthlySalesReport","year","getFullYear","renderMonthlySalesChart","loadProductSalesReport","loadInventoryReport","searchOrders","content","searchProducts","chart","init","$refs","salesChart","setOption","title","text","tooltip","trigger","xAxis","type","month","yAxis","series","amount","dailySalesChart","date","monthlySalesChart","formatCurrency","value","Intl","NumberFormat","style","currency","format","formatPercentage","toFixed","formatDate","toLocaleString","getStatusType","status","types","getOrderStatusType"],"sources":["E:\\shixun\\420\\ecms\\ecmsvue\\src\\views\\DataAnalysis.vue"],"sourcesContent":["<template>\r\n  <div class=\"merchant-dashboard\">\r\n    <h1>ECMS 商家管理仪表板</h1>\r\n\r\n    <!-- 商家ID搜索 -->\r\n    <div class=\"search-container\">\r\n      <el-input\r\n          v-model=\"merchantId\"\r\n          placeholder=\"输入商家ID\"\r\n          class=\"search-input\"\r\n          @keyup.enter=\"fetchData\"\r\n      >\r\n        <template #append>\r\n          <el-button type=\"primary\" @click=\"fetchData\">搜索</el-button>\r\n        </template>\r\n      </el-input>\r\n    </div>\r\n\r\n    <!-- 功能Tab -->\r\n    <el-tabs v-model=\"activeTab\" v-if=\"merchantId\">\r\n      <!-- 数据分析仪表板 -->\r\n      <el-tab-pane label=\"数据分析仪表板\" name=\"dashboard\">\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"12\">\r\n            <el-card class=\"box-card\">\r\n              <template #header>\r\n                <div class=\"card-header\">\r\n                  <span>销售趋势分析</span>\r\n                  <el-button type=\"text\" @click=\"loadSalesTrend\">刷新</el-button>\r\n                </div>\r\n              </template>\r\n              <div v-loading=\"loading.salesTrend\">\r\n                <div v-if=\"salesTrend\">\r\n                  <el-descriptions :column=\"1\" border>\r\n                    <el-descriptions-item label=\"总销售额\">\r\n                      {{ formatCurrency(salesTrend.totalSales) }}\r\n                    </el-descriptions-item>\r\n                    <el-descriptions-item label=\"平均月销售额\">\r\n                      {{ formatCurrency(salesTrend.avgMonthlySales) }}\r\n                    </el-descriptions-item>\r\n                  </el-descriptions>\r\n                  <div class=\"insights\" v-if=\"salesTrend.insights\">\r\n                    <h4>分析洞察：</h4>\r\n                    <pre>{{ salesTrend.insights }}</pre>\r\n                  </div>\r\n                  <div class=\"chart-container\" v-if=\"salesTrend.monthlySales\">\r\n                    <div ref=\"salesChart\" style=\"height: 300px\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </el-card>\r\n          </el-col>\r\n\r\n          <el-col :span=\"12\">\r\n            <el-card class=\"box-card\">\r\n              <template #header>\r\n                <div class=\"card-header\">\r\n                  <span>库存预警</span>\r\n                  <el-button type=\"text\" @click=\"loadInventoryAlerts\">刷新</el-button>\r\n                </div>\r\n              </template>\r\n              <div v-loading=\"loading.inventoryAlerts\">\r\n                <div v-if=\"inventoryAlerts\">\r\n                  <el-descriptions :column=\"1\" border>\r\n                    <el-descriptions-item label=\"紧急库存项\">\r\n                      <el-tag type=\"danger\">{{ inventoryAlerts.criticalCount }}</el-tag>\r\n                    </el-descriptions-item>\r\n                    <el-descriptions-item label=\"警告库存项\">\r\n                      <el-tag type=\"warning\">{{ inventoryAlerts.warningCount }}</el-tag>\r\n                    </el-descriptions-item>\r\n                    <el-descriptions-item label=\"需关注库存项\">\r\n                      <el-tag type=\"info\">{{ inventoryAlerts.attentionCount }}</el-tag>\r\n                    </el-descriptions-item>\r\n                  </el-descriptions>\r\n                  <div class=\"assessment\" v-if=\"inventoryAlerts.inventoryHealthAssessment\">\r\n                    <h4>健康状况评估：</h4>\r\n                    <pre>{{ inventoryAlerts.inventoryHealthAssessment }}</pre>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </el-card>\r\n          </el-col>\r\n\r\n          <el-col :span=\"24\" style=\"margin-top: 20px\">\r\n            <el-card class=\"box-card\">\r\n              <template #header>\r\n                <div class=\"card-header\">\r\n                  <span>客户行为分析</span>\r\n                  <el-button type=\"text\" @click=\"loadCustomerBehavior\">刷新</el-button>\r\n                </div>\r\n              </template>\r\n              <div v-loading=\"loading.customerBehavior\">\r\n                <div v-if=\"customerBehavior\">\r\n                  <el-descriptions :column=\"3\" border>\r\n                    <el-descriptions-item label=\"总客户数\">\r\n                      {{ customerBehavior.totalCustomers }}\r\n                    </el-descriptions-item>\r\n                    <el-descriptions-item label=\"高价值客户贡献\">\r\n                      {{ formatPercentage(customerBehavior.highValueContribution) }}\r\n                    </el-descriptions-item>\r\n                  </el-descriptions>\r\n                  <div class=\"customer-segments\">\r\n                    <h4>客户细分统计：</h4>\r\n                    <el-table :data=\"customerSegmentData\" style=\"width: 100%\">\r\n                      <el-table-column prop=\"segment\" label=\"客户细分\" />\r\n                      <el-table-column prop=\"count\" label=\"数量\" />\r\n                      <el-table-column prop=\"percentage\" label=\"占比\">\r\n                        <template #default=\"scope\">\r\n                          {{ formatPercentage(scope.row.percentage) }}\r\n                        </template>\r\n                      </el-table-column>\r\n                    </el-table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </el-card>\r\n          </el-col>\r\n        </el-row>\r\n      </el-tab-pane>\r\n\r\n      <!-- 报表系统 -->\r\n      <el-tab-pane label=\"报表系统\" name=\"reports\">\r\n        <el-card class=\"box-card\">\r\n          <el-tabs v-model=\"activeReportTab\">\r\n            <el-tab-pane label=\"日销售报表\" name=\"dailySales\">\r\n              <el-date-picker\r\n                  v-model=\"dateRange.dailySales\"\r\n                  type=\"daterange\"\r\n                  range-separator=\"至\"\r\n                  start-placeholder=\"开始日期\"\r\n                  end-placeholder=\"结束日期\"\r\n                  @change=\"loadDailySalesReport\"\r\n              />\r\n              <div v-loading=\"loading.dailySalesReport\" style=\"margin-top: 20px\">\r\n                <div v-if=\"reports.dailySales\">\r\n                  <el-descriptions :column=\"2\" border>\r\n                    <el-descriptions-item label=\"总销售额\">\r\n                      {{ formatCurrency(reports.dailySales.totalSales) }}\r\n                    </el-descriptions-item>\r\n                    <el-descriptions-item label=\"平均日销售额\">\r\n                      {{ formatCurrency(reports.dailySales.avgDailySales) }}\r\n                    </el-descriptions-item>\r\n                    <el-descriptions-item label=\"最高销售日\">\r\n                      {{ reports.dailySales.highestDay }} ({{ formatCurrency(reports.dailySales.highestSales) }})\r\n                    </el-descriptions-item>\r\n                    <el-descriptions-item label=\"最低销售日\">\r\n                      {{ reports.dailySales.lowestDay }} ({{ formatCurrency(reports.dailySales.lowestSales) }})\r\n                    </el-descriptions-item>\r\n                  </el-descriptions>\r\n                  <div ref=\"dailySalesChart\" style=\"height: 300px; margin-top: 20px\"></div>\r\n                </div>\r\n              </div>\r\n            </el-tab-pane>\r\n\r\n            <el-tab-pane label=\"月销售报表\" name=\"monthlySales\">\r\n              <el-date-picker\r\n                  v-model=\"selectedYear\"\r\n                  type=\"year\"\r\n                  placeholder=\"选择年份\"\r\n                  @change=\"loadMonthlySalesReport\"\r\n              />\r\n              <div v-loading=\"loading.monthlySalesReport\" style=\"margin-top: 20px\">\r\n                <div v-if=\"reports.monthlySales\">\r\n                  <el-descriptions :column=\"2\" border>\r\n                    <el-descriptions-item label=\"年度总销售额\">\r\n                      {{ formatCurrency(reports.monthlySales.totalSales) }}\r\n                    </el-descriptions-item>\r\n                    <el-descriptions-item label=\"平均月销售额\">\r\n                      {{ formatCurrency(reports.monthlySales.avgMonthlySales) }}\r\n                    </el-descriptions-item>\r\n                  </el-descriptions>\r\n                  <div ref=\"monthlySalesChart\" style=\"height: 300px; margin-top: 20px\"></div>\r\n                </div>\r\n              </div>\r\n            </el-tab-pane>\r\n\r\n            <el-tab-pane label=\"产品销售报表\" name=\"productSales\">\r\n              <el-date-picker\r\n                  v-model=\"dateRange.productSales\"\r\n                  type=\"daterange\"\r\n                  range-separator=\"至\"\r\n                  start-placeholder=\"开始日期\"\r\n                  end-placeholder=\"结束日期\"\r\n                  @change=\"loadProductSalesReport\"\r\n              />\r\n              <div v-loading=\"loading.productSalesReport\" style=\"margin-top: 20px\">\r\n                <div v-if=\"reports.productSales\">\r\n                  <el-table :data=\"reports.productSales.productSalesDetails\" style=\"width: 100%\">\r\n                    <el-table-column prop=\"productName\" label=\"产品名称\" />\r\n                    <el-table-column prop=\"sales\" label=\"销售额\">\r\n                      <template #default=\"scope\">\r\n                        {{ formatCurrency(scope.row.sales) }}\r\n                      </template>\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"orderCount\" label=\"订单数\" />\r\n                    <el-table-column prop=\"salesPercentage\" label=\"销售占比\">\r\n                      <template #default=\"scope\">\r\n                        {{ formatPercentage(scope.row.salesPercentage) }}\r\n                      </template>\r\n                    </el-table-column>\r\n                  </el-table>\r\n                </div>\r\n              </div>\r\n            </el-tab-pane>\r\n\r\n            <el-tab-pane label=\"库存报表\" name=\"inventory\">\r\n              <el-button @click=\"loadInventoryReport\">生成报表</el-button>\r\n              <div v-loading=\"loading.inventoryReport\" style=\"margin-top: 20px\">\r\n                <div v-if=\"reports.inventory\">\r\n                  <el-descriptions :column=\"2\" border>\r\n                    <el-descriptions-item label=\"总产品数\">\r\n                      {{ reports.inventory.totalProducts }}\r\n                    </el-descriptions-item>\r\n                    <el-descriptions-item label=\"总库存价值\">\r\n                      {{ formatCurrency(reports.inventory.totalInventoryValue) }}\r\n                    </el-descriptions-item>\r\n                  </el-descriptions>\r\n                  <el-table :data=\"reports.inventory.inventoryDetails\" style=\"width: 100%; margin-top: 20px\">\r\n                    <el-table-column prop=\"productName\" label=\"产品名称\" />\r\n                    <el-table-column prop=\"stockQuantity\" label=\"库存数量\" />\r\n                    <el-table-column prop=\"daysOfSupply\" label=\"可持续天数\" />\r\n                    <el-table-column prop=\"stockStatus\" label=\"库存状态\">\r\n                      <template #default=\"scope\">\r\n                        <el-tag :type=\"getStatusType(scope.row.stockStatus)\">\r\n                          {{ scope.row.stockStatus }}\r\n                        </el-tag>\r\n                      </template>\r\n                    </el-table-column>\r\n                  </el-table>\r\n                </div>\r\n              </div>\r\n            </el-tab-pane>\r\n          </el-tabs>\r\n        </el-card>\r\n      </el-tab-pane>\r\n\r\n      <!-- 高级搜索 -->\r\n      <el-tab-pane label=\"高级搜索\" name=\"search\">\r\n        <el-tabs v-model=\"activeSearchTab\">\r\n          <el-tab-pane label=\"订单搜索\" name=\"orders\">\r\n            <el-form :model=\"searchParams.orders\" label-width=\"100px\">\r\n              <el-form-item label=\"客户ID\">\r\n                <el-input v-model=\"searchParams.orders.customerId\" />\r\n              </el-form-item>\r\n              <el-form-item label=\"产品ID\">\r\n                <el-input v-model=\"searchParams.orders.productId\" />\r\n              </el-form-item>\r\n              <el-form-item label=\"订单状态\">\r\n                <el-select v-model=\"searchParams.orders.orderStatus\" placeholder=\"请选择\">\r\n                  <el-option label=\"待处理\" value=\"pending\" />\r\n                  <el-option label=\"已发货\" value=\"shipped\" />\r\n                  <el-option label=\"已完成\" value=\"completed\" />\r\n                  <el-option label=\"已退款\" value=\"refunded\" />\r\n                </el-select>\r\n              </el-form-item>\r\n              <el-form-item label=\"金额范围\">\r\n                <el-input-number v-model=\"searchParams.orders.minAmount\" />\r\n                至\r\n                <el-input-number v-model=\"searchParams.orders.maxAmount\" />\r\n              </el-form-item>\r\n              <el-form-item>\r\n                <el-button type=\"primary\" @click=\"searchOrders\">搜索</el-button>\r\n              </el-form-item>\r\n            </el-form>\r\n\r\n            <el-table\r\n                v-loading=\"loading.orderSearch\"\r\n                :data=\"searchResults.orders\"\r\n                style=\"width: 100%\"\r\n            >\r\n              <el-table-column prop=\"orderId\" label=\"订单ID\" />\r\n              <el-table-column prop=\"orderNumber\" label=\"订单号\" />\r\n              <el-table-column prop=\"totalAmount\" label=\"金额\">\r\n                <template #default=\"scope\">\r\n                  {{ formatCurrency(scope.row.totalAmount) }}\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"orderStatus\" label=\"状态\">\r\n                <template #default=\"scope\">\r\n                  <el-tag :type=\"getOrderStatusType(scope.row.orderStatus)\">\r\n                    {{ scope.row.orderStatus }}\r\n                  </el-tag>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"createdAt\" label=\"创建时间\">\r\n                <template #default=\"scope\">\r\n                  {{ formatDate(scope.row.createdAt) }}\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-tab-pane>\r\n\r\n          <el-tab-pane label=\"产品搜索\" name=\"products\">\r\n            <el-form :model=\"searchParams.products\" label-width=\"100px\">\r\n              <el-form-item label=\"产品名称\">\r\n                <el-input v-model=\"searchParams.products.productName\" />\r\n              </el-form-item>\r\n              <el-form-item label=\"价格范围\">\r\n                <el-input-number v-model=\"searchParams.products.minPrice\" />\r\n                至\r\n                <el-input-number v-model=\"searchParams.products.maxPrice\" />\r\n              </el-form-item>\r\n              <el-form-item label=\"库存范围\">\r\n                <el-input-number v-model=\"searchParams.products.minStock\" />\r\n                至\r\n                <el-input-number v-model=\"searchParams.products.maxStock\" />\r\n              </el-form-item>\r\n              <el-form-item>\r\n                <el-button type=\"primary\" @click=\"searchProducts\">搜索</el-button>\r\n              </el-form-item>\r\n            </el-form>\r\n\r\n            <el-table\r\n                v-loading=\"loading.productSearch\"\r\n                :data=\"searchResults.products\"\r\n                style=\"width: 100%\"\r\n            >\r\n              <el-table-column prop=\"productId\" label=\"产品ID\" />\r\n              <el-table-column prop=\"productName\" label=\"产品名称\" />\r\n              <el-table-column prop=\"price\" label=\"价格\">\r\n                <template #default=\"scope\">\r\n                  {{ formatCurrency(scope.row.price) }}\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"stockQuantity\" label=\"库存\" />\r\n              <el-table-column prop=\"status\" label=\"状态\">\r\n                <template #default=\"scope\">\r\n                  <el-tag :type=\"scope.row.status === 'active' ? 'success' : 'danger'\">\r\n                    {{ scope.row.status }}\r\n                  </el-tag>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\nimport axios from 'axios'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'MerchantDashboard',\r\n  data() {\r\n    return {\r\n      merchantId: '',\r\n      activeTab: 'dashboard',\r\n      activeReportTab: 'dailySales',\r\n      activeSearchTab: 'orders',\r\n\r\n      loading: {\r\n        salesTrend: false,\r\n        inventoryAlerts: false,\r\n        customerBehavior: false,\r\n        dailySalesReport: false,\r\n        monthlySalesReport: false,\r\n        productSalesReport: false,\r\n        inventoryReport: false,\r\n        orderSearch: false,\r\n        productSearch: false\r\n      },\r\n\r\n      salesTrend: null,\r\n      inventoryAlerts: null,\r\n      customerBehavior: null,\r\n      reports: {\r\n        dailySales: null,\r\n        monthlySales: null,\r\n        productSales: null,\r\n        inventory: null\r\n      },\r\n      searchResults: {\r\n        orders: [],\r\n        products: []\r\n      },\r\n\r\n      dateRange: {\r\n        dailySales: [],\r\n        productSales: []\r\n      },\r\n      selectedYear: new Date(),\r\n\r\n      searchParams: {\r\n        orders: {\r\n          customerId: '',\r\n          productId: '',\r\n          orderStatus: '',\r\n          minAmount: null,\r\n          maxAmount: null\r\n        },\r\n        products: {\r\n          productName: '',\r\n          minPrice: null,\r\n          maxPrice: null,\r\n          minStock: null,\r\n          maxStock: null\r\n        }\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    customerSegmentData() {\r\n      if (!this.customerBehavior?.segmentStats) return []\r\n      return Object.entries(this.customerBehavior.segmentStats).map(([segment, data]) => ({\r\n        segment,\r\n        count: data.count,\r\n        percentage: data.percentage\r\n      }))\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchData() {\r\n      if (!this.merchantId) {\r\n        ElMessage.error('请输入商家ID')\r\n        return\r\n      }\r\n\r\n      await this.loadDashboardData()\r\n    },\r\n\r\n    async loadDashboardData() {\r\n      await Promise.all([\r\n        this.loadSalesTrend(),\r\n        this.loadInventoryAlerts(),\r\n        this.loadCustomerBehavior()\r\n      ])\r\n    },\r\n\r\n    async loadSalesTrend() {\r\n      this.loading.salesTrend = true\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080//api/data-analysis/sales-trend/${this.merchantId}`)\r\n        this.salesTrend = response.data\r\n        this.$nextTick(() => {\r\n          this.renderSalesChart()\r\n        })\r\n      } catch (error) {\r\n        ElMessage.error('获取销售趋势数据失败')\r\n      } finally {\r\n        this.loading.salesTrend = false\r\n      }\r\n    },\r\n\r\n    async loadInventoryAlerts() {\r\n      this.loading.inventoryAlerts = true\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080//api/data-analysis/inventory-alerts/${this.merchantId}`)\r\n        this.inventoryAlerts = response.data\r\n      } catch (error) {\r\n        ElMessage.error('获取库存预警数据失败')\r\n      } finally {\r\n        this.loading.inventoryAlerts = false\r\n      }\r\n    },\r\n\r\n    async loadCustomerBehavior() {\r\n      this.loading.customerBehavior = true\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080//api/data-analysis/customer-behavior/${this.merchantId}`)\r\n        this.customerBehavior = response.data\r\n      } catch (error) {\r\n        ElMessage.error('获取客户行为数据失败')\r\n      } finally {\r\n        this.loading.customerBehavior = false\r\n      }\r\n    },\r\n\r\n    async loadDailySalesReport() {\r\n      if (!this.dateRange.dailySales || this.dateRange.dailySales.length !== 2) return\r\n\r\n      this.loading.dailySalesReport = true\r\n      try {\r\n        const [startDate, endDate] = this.dateRange.dailySales\r\n        const response = await axios.get(`http://localhost:8080//api/reports/daily-sales/${this.merchantId}`, {\r\n          params: {\r\n            startDate: startDate.toISOString(),\r\n            endDate: endDate.toISOString()\r\n          }\r\n        })\r\n        this.reports.dailySales = response.data\r\n        this.$nextTick(() => {\r\n          this.renderDailySalesChart()\r\n        })\r\n      } catch (error) {\r\n        ElMessage.error('获取日销售报表失败')\r\n      } finally {\r\n        this.loading.dailySalesReport = false\r\n      }\r\n    },\r\n\r\n    async loadMonthlySalesReport() {\r\n      this.loading.monthlySalesReport = true\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080//api/reports/monthly-sales/${this.merchantId}`, {\r\n          params: { year: this.selectedYear.getFullYear() }\r\n        })\r\n        this.reports.monthlySales = response.data\r\n        this.$nextTick(() => {\r\n          this.renderMonthlySalesChart()\r\n        })\r\n      } catch (error) {\r\n        ElMessage.error('获取月销售报表失败')\r\n      } finally {\r\n        this.loading.monthlySalesReport = false\r\n      }\r\n    },\r\n\r\n    async loadProductSalesReport() {\r\n      if (!this.dateRange.productSales || this.dateRange.productSales.length !== 2) return\r\n\r\n      this.loading.productSalesReport = true\r\n      try {\r\n        const [startDate, endDate] = this.dateRange.productSales\r\n        const response = await axios.get(`http://localhost:8080//api/reports/product-sales/${this.merchantId}`, {\r\n          params: {\r\n            startDate: startDate.toISOString(),\r\n            endDate: endDate.toISOString()\r\n          }\r\n        })\r\n        this.reports.productSales = response.data\r\n      } catch (error) {\r\n        ElMessage.error('获取产品销售报表失败')\r\n      } finally {\r\n        this.loading.productSalesReport = false\r\n      }\r\n    },\r\n\r\n    async loadInventoryReport() {\r\n      this.loading.inventoryReport = true\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080//api/reports/inventory/${this.merchantId}`)\r\n        this.reports.inventory = response.data\r\n      } catch (error) {\r\n        ElMessage.error('获取库存报表失败')\r\n      } finally {\r\n        this.loading.inventoryReport = false\r\n      }\r\n    },\r\n\r\n    async searchOrders() {\r\n      this.loading.orderSearch = true\r\n      try {\r\n        const response = await axios.get('http://localhost:8080//api/advanced-search/orders', {\r\n          params: {\r\n            merchantId: this.merchantId,\r\n            ...this.searchParams.orders\r\n          }\r\n        })\r\n        this.searchResults.orders = response.data.content\r\n      } catch (error) {\r\n        ElMessage.error('订单搜索失败')\r\n      } finally {\r\n        this.loading.orderSearch = false\r\n      }\r\n    },\r\n\r\n    async searchProducts() {\r\n      this.loading.productSearch = true\r\n      try {\r\n        const response = await axios.get('http://localhost:8080//api/advanced-search/products', {\r\n          params: {\r\n            merchantId: this.merchantId,\r\n            ...this.searchParams.products\r\n          }\r\n        })\r\n        this.searchResults.products = response.data.content\r\n      } catch (error) {\r\n        ElMessage.error('产品搜索失败')\r\n      } finally {\r\n        this.loading.productSearch = false\r\n      }\r\n    },\r\n\r\n    renderSalesChart() {\r\n      if (!this.salesTrend?.monthlySales) return\r\n\r\n      const chart = echarts.init(this.$refs.salesChart)\r\n      const data = Object.entries(this.salesTrend.monthlySales)\r\n\r\n      chart.setOption({\r\n        title: { text: '月销售趋势' },\r\n        tooltip: { trigger: 'axis' },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: data.map(([month]) => month)\r\n        },\r\n        yAxis: { type: 'value' },\r\n        series: [{\r\n          name: '销售额',\r\n          type: 'line',\r\n          data: data.map(([, amount]) => amount)\r\n        }]\r\n      })\r\n    },\r\n\r\n    renderDailySalesChart() {\r\n      if (!this.reports.dailySales?.dailySales) return\r\n\r\n      const chart = echarts.init(this.$refs.dailySalesChart)\r\n      const data = Object.entries(this.reports.dailySales.dailySales)\r\n\r\n      chart.setOption({\r\n        title: { text: '日销售趋势' },\r\n        tooltip: { trigger: 'axis' },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: data.map(([date]) => date)\r\n        },\r\n        yAxis: { type: 'value' },\r\n        series: [{\r\n          name: '销售额',\r\n          type: 'bar',\r\n          data: data.map(([, amount]) => amount)\r\n        }]\r\n      })\r\n    },\r\n\r\n    renderMonthlySalesChart() {\r\n      if (!this.reports.monthlySales?.monthlySales) return\r\n\r\n      const chart = echarts.init(this.$refs.monthlySalesChart)\r\n      const data = Object.entries(this.reports.monthlySales.monthlySales)\r\n\r\n      chart.setOption({\r\n        title: { text: '月销售趋势' },\r\n        tooltip: { trigger: 'axis' },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: data.map(([month]) => month)\r\n        },\r\n        yAxis: { type: 'value' },\r\n        series: [{\r\n          name: '销售额',\r\n          type: 'line',\r\n          data: data.map(([, amount]) => amount)\r\n        }]\r\n      })\r\n    },\r\n\r\n    formatCurrency(value) {\r\n      return new Intl.NumberFormat('zh-CN', {\r\n        style: 'currency',\r\n        currency: 'CNY'\r\n      }).format(value)\r\n    },\r\n\r\n    formatPercentage(value) {\r\n      return `${(value || 0).toFixed(2)}%`\r\n    },\r\n\r\n    formatDate(date) {\r\n      return new Date(date).toLocaleString('zh-CN')\r\n    },\r\n\r\n    getStatusType(status) {\r\n      const types = {\r\n        '无库存': 'danger',\r\n        '紧急': 'danger',\r\n        '警告': 'warning',\r\n        '注意': 'info',\r\n        '充足': 'success'\r\n      }\r\n      return types[status] || 'info'\r\n    },\r\n\r\n    getOrderStatusType(status) {\r\n      const types = {\r\n        'pending': 'warning',\r\n        'shipped': 'info',\r\n        'completed': 'success',\r\n        'refunded': 'danger'\r\n      }\r\n      return types[status] || 'info'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.merchant-dashboard {\r\n  padding: 20px;\r\n}\r\n\r\n.search-container {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.search-input {\r\n  max-width: 400px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.insights, .assessment {\r\n  margin-top: 20px;\r\n}\r\n\r\n.insights pre, .assessment pre {\r\n  white-space: pre-wrap;\r\n  font-family: inherit;\r\n}\r\n\r\n.customer-segments {\r\n  margin-top: 20px;\r\n}\r\n\r\n.box-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chart-container {\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}