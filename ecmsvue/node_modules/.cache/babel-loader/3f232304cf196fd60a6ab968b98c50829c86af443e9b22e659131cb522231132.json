{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"navbar\"\n};\nconst _hoisted_2 = {\n  class: \"logout-wrapper\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_menu_item = _resolveComponent(\"el-menu-item\");\n  const _component_el_menu = _resolveComponent(\"el-menu\");\n  const _component_el_header = _resolveComponent(\"el-header\");\n  return _openBlock(), _createBlock(_component_el_header, null, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" 导航栏容器 \"), _createVNode(_component_el_menu, {\n      \"default-active\": $data.activeIndex,\n      class: \"menu\",\n      onSelect: $options.handleSelect,\n      mode: \"horizontal\"\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" 设置默认选中的菜单项 \"), _createCommentVNode(\" 处理菜单项选择事件 \"), _createCommentVNode(\" 设置菜单模式为水平 \"), _createVNode(_component_el_menu_item, {\n        index: \"home\"\n      }, {\n        default: _withCtx(() => _cache[0] || (_cache[0] = [_createTextVNode(\"首页\")])),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 首页菜单项 \"), _createVNode(_component_el_menu_item, {\n        index: \"products\"\n      }, {\n        default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"产品管理\")])),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 产品管理菜单项 \"), _createVNode(_component_el_menu_item, {\n        index: \"orders\"\n      }, {\n        default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"订单管理\")])),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 订单管理菜单项 \"), _createCommentVNode(\" 登出按钮放在最右边 \"), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_menu_item, {\n        index: \"logout\",\n        onClick: $options.handleLogout\n      }, {\n        default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"登出\")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), _createCommentVNode(\" 登出菜单项 \")])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"default-active\", \"onSelect\"])])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","_createBlock","_component_el_header","default","_withCtx","_createElementVNode","_hoisted_1","_createCommentVNode","_createVNode","_component_el_menu","$data","activeIndex","onSelect","$options","handleSelect","mode","_component_el_menu_item","index","_cache","_createTextVNode","_","_hoisted_2","onClick","handleLogout"],"sources":["D:\\code_new\\ecms\\ecmsvue\\src\\components\\MerchantNavbar.vue"],"sourcesContent":["<template>\n  <el-header>\n    <div class=\"navbar\"> <!-- 导航栏容器 -->\n      <el-menu :default-active=\"activeIndex\"\n      class=\"menu\"\n      @select=\"handleSelect\"\n      mode=\"horizontal\"\n      >\n      <!-- 设置默认选中的菜单项 -->\n      <!-- 处理菜单项选择事件 --><!-- 设置菜单模式为水平 -->\n      <el-menu-item index=\"home\">首页</el-menu-item> <!-- 首页菜单项 -->\n      <el-menu-item index=\"products\">产品管理</el-menu-item> <!-- 产品管理菜单项 -->\n      <el-menu-item index=\"orders\">订单管理</el-menu-item> <!-- 订单管理菜单项 -->\n\n\n      <!-- 登出按钮放在最右边 -->\n      <div class=\"logout-wrapper\">\n        <el-menu-item index=\"logout\" @click=\"handleLogout\">登出</el-menu-item> <!-- 登出菜单项 -->\n      </div>\n\n\n      </el-menu>\n    </div>\n  </el-header>\n</template>\n\n<script>\nexport default {\n  name: 'AppMerchantNavbar', // 组件名称\n  data() {\n    return {\n      activeIndex: 'home' // 设定默认激活的菜单项为首页\n    };\n  },\n  methods: {\n    handleSelect(index) {\n      // 当选择菜单项时调用此方法\n      if (index === 'logout') return; // 防止重复执行登出逻辑\n      this.activeIndex = index; // 更新选中的菜单项\n      this.$router.push({ name: index }); // 根据选中项跳转到对应的路由\n    },\n    handleLogout() {\n      // 处理用户登出\n      localStorage.removeItem('token'); // 清除本地存储中的 token\n      this.$router.push('/login'); // 跳转到登录页面\n    }\n  }\n};\n</script>\n\n<style scoped>\n.navbar {\n  background-color: #409eff; /* 设置导航栏背景颜色 */\n  color: #ffffff; /* 设置文本颜色 */\n  display: flex; /* 使用 flexbox 布局 */\n  justify-content: space-between; /* 两端对齐 */\n  align-items: center; /* 垂直居中对齐 */\n}\n\n.menu {\n  line-height: 60px; /* 设置菜单项的行高 */\n  width: 100%; /* 菜单宽度为100% */\n}\n\n.logout-wrapper {\n  margin-left: auto; /* 将登出按钮推到右侧 */\n}\n</style>"],"mappings":";;EAESA,KAAK,EAAC;AAAQ;;EAcZA,KAAK,EAAC;AAAgB;;;;;uBAf/BC,YAAA,CAsBYC,oBAAA;IAvBdC,OAAA,EAAAC,QAAA,CAEI,MAoBM,CApBNC,mBAAA,CAoBM,OApBNC,UAoBM,GApBeC,mBAAA,WAAc,EACjCC,YAAA,CAkBUC,kBAAA;MAlBA,gBAAc,EAAEC,KAAA,CAAAC,WAAW;MACrCX,KAAK,EAAC,MAAM;MACXY,QAAM,EAAEC,QAAA,CAAAC,YAAY;MACrBC,IAAI,EAAC;;MANXZ,OAAA,EAAAC,QAAA,CAQM,MAAmB,CAAnBG,mBAAA,gBAAmB,EACnBA,mBAAA,eAAkB,EAAAA,mBAAA,eAAkB,EACpCC,YAAA,CAA4CQ,uBAAA;QAA9BC,KAAK,EAAC;MAAM;QAVhCd,OAAA,EAAAC,QAAA,CAUiC,MAAEc,MAAA,QAAAA,MAAA,OAVnCC,gBAAA,CAUiC,IAAE,E;QAVnCC,CAAA;UAUmDb,mBAAA,WAAc,EAC3DC,YAAA,CAAkDQ,uBAAA;QAApCC,KAAK,EAAC;MAAU;QAXpCd,OAAA,EAAAC,QAAA,CAWqC,MAAIc,MAAA,QAAAA,MAAA,OAXzCC,gBAAA,CAWqC,MAAI,E;QAXzCC,CAAA;UAWyDb,mBAAA,aAAgB,EACnEC,YAAA,CAAgDQ,uBAAA;QAAlCC,KAAK,EAAC;MAAQ;QAZlCd,OAAA,EAAAC,QAAA,CAYmC,MAAIc,MAAA,QAAAA,MAAA,OAZvCC,gBAAA,CAYmC,MAAI,E;QAZvCC,CAAA;UAYuDb,mBAAA,aAAgB,EAGjEA,mBAAA,eAAkB,EAClBF,mBAAA,CAEM,OAFNgB,UAEM,GADJb,YAAA,CAAoEQ,uBAAA;QAAtDC,KAAK,EAAC,QAAQ;QAAEK,OAAK,EAAET,QAAA,CAAAU;;QAjB7CpB,OAAA,EAAAC,QAAA,CAiB2D,MAAEc,MAAA,QAAAA,MAAA,OAjB7DC,gBAAA,CAiB2D,IAAE,E;QAjB7DC,CAAA;sCAiB6Eb,mBAAA,WAAc,C;MAjB3Fa,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}