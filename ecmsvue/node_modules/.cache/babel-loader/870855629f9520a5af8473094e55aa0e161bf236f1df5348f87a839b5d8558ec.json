{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, reactive } from 'vue';\nimport { User, Lock } from '@element-plus/icons-vue';\nimport { useRouter } from 'vue-router';\nimport axios from '../utils/axios';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'UserRegister',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const registerFormRef = ref(null);\n    const registerForm = reactive({\n      username: '',\n      password: '',\n      confirmPassword: ''\n    });\n    const validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== registerForm.password) {\n        callback(new Error('两次输入密码不一致'));\n      } else {\n        callback();\n      }\n    };\n    const rules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }],\n      confirmPassword: [{\n        validator: validatePass2,\n        trigger: 'blur'\n      }]\n    };\n    const handleRegister = async () => {\n      if (!registerFormRef.value) return;\n      await registerFormRef.value.validate(async valid => {\n        if (valid) {\n          try {\n            const response = await axios.post('/api/auth/register', {\n              username: registerForm.username,\n              password: registerForm.password\n            });\n            if (response.data.success) {\n              ElMessage.success('注册成功');\n              router.push('/login');\n            } else {\n              ElMessage.error(response.data.message || '注册失败');\n            }\n          } catch (error) {\n            ElMessage.error('注册失败，请稍后重试');\n            console.error('Register error:', error);\n          }\n        }\n      });\n    };\n    const __returned__ = {\n      router,\n      registerFormRef,\n      registerForm,\n      validatePass2,\n      rules,\n      handleRegister,\n      ref,\n      reactive,\n      get User() {\n        return User;\n      },\n      get Lock() {\n        return Lock;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","User","Lock","useRouter","axios","ElMessage","router","registerFormRef","registerForm","username","password","confirmPassword","validatePass2","rule","value","callback","Error","rules","required","message","trigger","validator","handleRegister","validate","valid","response","post","data","success","push","error","console"],"sources":["D:/code_new/ecms/ecmsvue/src/views/UserRegister.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <el-card class=\"register-card\">\n      <template #header>\n        <h2>注册</h2>\n      </template>\n      <el-form :model=\"registerForm\" :rules=\"rules\" ref=\"registerFormRef\">\n        <el-form-item prop=\"username\">\n          <el-input v-model=\"registerForm.username\" placeholder=\"请输入用户名\">\n            <template #prefix>\n              <el-icon><User /></el-icon>\n            </template>\n          </el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input v-model=\"registerForm.password\" type=\"password\" placeholder=\"请输入密码\">\n            <template #prefix>\n              <el-icon><Lock /></el-icon>\n            </template>\n          </el-input>\n        </el-form-item>\n        <el-form-item prop=\"confirmPassword\">\n          <el-input v-model=\"registerForm.confirmPassword\" type=\"password\" placeholder=\"请确认密码\">\n            <template #prefix>\n              <el-icon><Lock /></el-icon>\n            </template>\n          </el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleRegister\" style=\"width: 100%\">注册</el-button>\n        </el-form-item>\n        <div class=\"login-link\">\n          <router-link to=\"/login\">已有账号？立即登录</router-link>\n        </div>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script setup name=\"UserRegister\">\nimport { ref, reactive } from 'vue'\nimport { User, Lock } from '@element-plus/icons-vue'\nimport { useRouter } from 'vue-router'\nimport axios from '../utils/axios'\nimport { ElMessage } from 'element-plus'\n\nconst router = useRouter()\nconst registerFormRef = ref(null)\n\nconst registerForm = reactive({\n  username: '',\n  password: '',\n  confirmPassword: ''\n})\n\nconst validatePass2 = (rule, value, callback) => {\n  if (value === '') {\n    callback(new Error('请再次输入密码'))\n  } else if (value !== registerForm.password) {\n    callback(new Error('两次输入密码不一致'))\n  } else {\n    callback()\n  }\n}\n\nconst rules = {\n  username: [{ required: true, message: '请输入用户名', trigger: 'blur' }],\n  password: [{ required: true, message: '请输入密码', trigger: 'blur' }],\n  confirmPassword: [{ validator: validatePass2, trigger: 'blur' }]\n}\n\nconst handleRegister = async () => {\n  if (!registerFormRef.value) return\n  \n  await registerFormRef.value.validate(async (valid) => {\n    if (valid) {\n      try {\n        const response = await axios.post('/api/auth/register', {\n          username: registerForm.username,\n          password: registerForm.password\n        })\n        if (response.data.success) {\n          ElMessage.success('注册成功')\n          router.push('/login')\n        } else {\n          ElMessage.error(response.data.message || '注册失败')\n        }\n      } catch (error) {\n        ElMessage.error('注册失败，请稍后重试')\n        console.error('Register error:', error)\n      }\n    }\n  })\n}\n</script>\n\n<style scoped>\n.register-container {\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #f5f5f5;\n}\n\n.register-card {\n  width: 400px;\n}\n\n.login-link {\n  text-align: center;\n  margin-top: 15px;\n}\n\n.login-link a {\n  color: #409eff;\n  text-decoration: none;\n}\n\n.login-link a:hover {\n  text-decoration: underline;\n}\n</style>"],"mappings":";AAwCA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAI;AAClC,SAASC,IAAI,EAAEC,IAAI,QAAQ,yBAAwB;AACnD,SAASC,SAAS,QAAQ,YAAW;AACrC,OAAOC,KAAK,MAAM,gBAAe;AACjC,SAASC,SAAS,QAAQ,cAAa;;;;;;;IAEvC,MAAMC,MAAM,GAAGH,SAAS,CAAC;IACzB,MAAMI,eAAe,GAAGR,GAAG,CAAC,IAAI;IAEhC,MAAMS,YAAY,GAAGR,QAAQ,CAAC;MAC5BS,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE;IACnB,CAAC;IAED,MAAMC,aAAa,GAAGA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MAC/C,IAAID,KAAK,KAAK,EAAE,EAAE;QAChBC,QAAQ,CAAC,IAAIC,KAAK,CAAC,SAAS,CAAC;MAC/B,CAAC,MAAM,IAAIF,KAAK,KAAKN,YAAY,CAACE,QAAQ,EAAE;QAC1CK,QAAQ,CAAC,IAAIC,KAAK,CAAC,WAAW,CAAC;MACjC,CAAC,MAAM;QACLD,QAAQ,CAAC;MACX;IACF;IAEA,MAAME,KAAK,GAAG;MACZR,QAAQ,EAAE,CAAC;QAAES,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAO,CAAC,CAAC;MAClEV,QAAQ,EAAE,CAAC;QAAEQ,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC,CAAC;MACjET,eAAe,EAAE,CAAC;QAAEU,SAAS,EAAET,aAAa;QAAEQ,OAAO,EAAE;MAAO,CAAC;IACjE;IAEA,MAAME,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI,CAACf,eAAe,CAACO,KAAK,EAAE;MAE5B,MAAMP,eAAe,CAACO,KAAK,CAACS,QAAQ,CAAC,MAAOC,KAAK,IAAK;QACpD,IAAIA,KAAK,EAAE;UACT,IAAI;YACF,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,oBAAoB,EAAE;cACtDjB,QAAQ,EAAED,YAAY,CAACC,QAAQ;cAC/BC,QAAQ,EAAEF,YAAY,CAACE;YACzB,CAAC;YACD,IAAIe,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;cACzBvB,SAAS,CAACuB,OAAO,CAAC,MAAM;cACxBtB,MAAM,CAACuB,IAAI,CAAC,QAAQ;YACtB,CAAC,MAAM;cACLxB,SAAS,CAACyB,KAAK,CAACL,QAAQ,CAACE,IAAI,CAACR,OAAO,IAAI,MAAM;YACjD;UACF,CAAC,CAAC,OAAOW,KAAK,EAAE;YACdzB,SAAS,CAACyB,KAAK,CAAC,YAAY;YAC5BC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK;UACxC;QACF;MACF,CAAC;IACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}