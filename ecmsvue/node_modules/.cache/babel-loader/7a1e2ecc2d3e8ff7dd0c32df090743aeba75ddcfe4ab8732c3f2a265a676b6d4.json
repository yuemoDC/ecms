{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"navbar\"\n};\nconst _hoisted_2 = {\n  class: \"logout-wrapper\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_menu_item = _resolveComponent(\"el-menu-item\");\n  const _component_el_menu = _resolveComponent(\"el-menu\");\n  const _component_el_header = _resolveComponent(\"el-header\");\n  return _openBlock(), _createBlock(_component_el_header, null, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" 导航栏容器 \"), _createVNode(_component_el_menu, {\n      \"default-active\": $data.activeIndex,\n      class: \"menu\",\n      onSelect: $options.handleSelect,\n      mode: \"horizontal\"\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" 设置默认选中的菜单项 \"), _createCommentVNode(\" 处理菜单项选择事件 \"), _createCommentVNode(\" 设置菜单模式为水平 \"), _createVNode(_component_el_menu_item, {\n        index: \"home\"\n      }, {\n        default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"首页\")])),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 首页菜单项 \"), _createVNode(_component_el_menu_item, {\n        index: \"products\"\n      }, {\n        default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"产品管理\")])),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 产品管理菜单项 \"), _createVNode(_component_el_menu_item, {\n        index: \"orders\"\n      }, {\n        default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"订单管理\")])),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 订单管理菜单项 \"), _createVNode(_component_el_menu_item, {\n        index: \"merchant-application\"\n      }, {\n        default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"商家入驻申请\")])),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 登出按钮放在最右边 \"), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 日夜模式按钮 \"), _createElementVNode(\"div\", {\n        class: \"theme-toggle\",\n        onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleTheme && $options.toggleTheme(...args))\n      }, _toDisplayString($data.isDark ? '☀️ 日间模式' : '🌙 夜间模式'), 1 /* TEXT */), _createCommentVNode(\" 登出按钮 \"), _createVNode(_component_el_menu_item, {\n        index: \"logout\",\n        onClick: $options.handleLogout\n      }, {\n        default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"登出\")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"default-active\", \"onSelect\"])])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","_createBlock","_component_el_header","default","_withCtx","_createElementVNode","_hoisted_1","_createCommentVNode","_createVNode","_component_el_menu","$data","activeIndex","onSelect","$options","handleSelect","mode","_component_el_menu_item","index","_cache","_createTextVNode","_","_hoisted_2","onClick","args","toggleTheme","isDark","handleLogout"],"sources":["D:\\code_new\\ecms\\ecmsvue\\src\\components\\MerchantNavbar.vue"],"sourcesContent":["<template>\r\n  <el-header>\r\n    <div class=\"navbar\"> <!-- 导航栏容器 -->\r\n      <el-menu :default-active=\"activeIndex\"\r\n               class=\"menu\"\r\n               @select=\"handleSelect\"\r\n               mode=\"horizontal\"\r\n      >\r\n        <!-- 设置默认选中的菜单项 -->\r\n        <!-- 处理菜单项选择事件 --><!-- 设置菜单模式为水平 -->\r\n        <el-menu-item index=\"home\">首页</el-menu-item> <!-- 首页菜单项 -->\r\n        <el-menu-item index=\"products\">产品管理</el-menu-item> <!-- 产品管理菜单项 -->\r\n        <el-menu-item index=\"orders\">订单管理</el-menu-item> <!-- 订单管理菜单项 -->\r\n        <el-menu-item index=\"merchant-application\">商家入驻申请</el-menu-item>\r\n\r\n\r\n        <!-- 登出按钮放在最右边 -->\r\n        <div class=\"logout-wrapper\">\r\n          <!-- 日夜模式按钮 -->\r\n          <div class=\"theme-toggle\" @click=\"toggleTheme\">\r\n            {{ isDark ? '☀️ 日间模式' : '🌙 夜间模式' }}\r\n          </div>\r\n          <!-- 登出按钮 -->\r\n          <el-menu-item index=\"logout\" @click=\"handleLogout\">登出</el-menu-item>\r\n        </div>\r\n\r\n\r\n      </el-menu>\r\n    </div>\r\n  </el-header>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'AppMerchantNavbar', // 组件名称\r\n  data() {\r\n    return {\r\n      activeIndex: 'home', // 默认值设为 home\r\n      isDark: false\r\n    };\r\n  },\r\n  created() {\r\n    // 检查 localStorage 中是否有 activeIndex，如果没有则设置为 home\r\n    if (!localStorage.getItem('activeIndex')) {\r\n      localStorage.setItem('activeIndex', 'home');\r\n    }\r\n    this.updateActiveIndex(); // 初始化 activeIndex\r\n  },\r\n  watch: {\r\n    '$route.path'() {\r\n      this.updateActiveIndex(); // 路由变化时更新 activeIndex\r\n    }\r\n  },\r\n  methods: {\r\n    updateActiveIndex() {\r\n      const path = this.$route.path;\r\n      if (path === '/home') {\r\n        this.activeIndex = 'home';\r\n      } else if (path === '/products') {\r\n        this.activeIndex = 'products';\r\n      } else if (path === '/orders') {\r\n        this.activeIndex = 'orders';\r\n      }  else if (path === '/merchant-application') {\r\n        this.activeIndex = 'merchant-application';\r\n      }  else {\r\n        this.activeIndex = ''; // 其他情况设为空\r\n      }\r\n      localStorage.setItem('activeIndex', this.activeIndex); // 更新 localStorage\r\n    },\r\n    handleSelect(index) {\r\n      // 当选择菜单项时调用此方法\r\n      if (index === 'logout') return; // 防止重复执行登出逻辑\r\n      const routeMap = {\r\n        'home': '/home',\r\n        'merchant-applications': '/merchant-applications',\r\n        'data-visualization': '/data-visualization',\r\n        'data-SalesPrediction': '/data-SalesPrediction',\r\n        'bulkPrediction': '/bulkPrediction'\r\n      };\r\n\r\n      // 触发自定义事件\r\n      this.$emit('navigate', routeMap[index] || '/home');\r\n      \r\n    },\r\n    toggleTheme() {\r\n      this.isDark = !this.isDark;\r\n      localStorage.setItem('theme', this.isDark ? 'dark' : 'light');\r\n      this.applyTheme();\r\n    },\r\n    handleLogout() {\r\n      // 处理用户登出\r\n      localStorage.removeItem('token'); // 清除本地存储中的 token\r\n      localStorage.removeItem('activeIndex'); // 清除保存的状态\r\n      this.activeIndex = 'home'; // 设置默认的激活菜单项\r\n      this.$router.push('/login'); // 跳转到登录页面\r\n    },\r\n    applyTheme() {\r\n      document.body.classList.toggle('dark-mode', this.isDark);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.logout-wrapper {\r\n  margin-left: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px; /* 添加间隔让按钮有点距离 */\r\n}\r\n\r\n.navbar {\r\n  background-color: #409eff;\r\n  color: #ffffff;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 100%;\r\n  border: none;\r\n}\r\n\r\n.menu {\r\n  line-height: 60px;\r\n  flex-grow: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  border: none;\r\n}\r\n\r\n.theme-toggle {\r\n  padding: 0 20px;\r\n  height: 60px;\r\n  line-height: 60px;\r\n  cursor: pointer;\r\n  color: #000;\r\n  font-size: 14px;\r\n  transition: background-color 0.3s;\r\n  white-space: nowrap;\r\n  user-select: none;\r\n  border: none;\r\n  outline: none;\r\n}\r\n\r\n.theme-toggle:hover {\r\n  background-color: rgba(0, 0, 0, 0.1); /* 悬停效果 */\r\n}\r\n\r\n.theme-toggle:active {\r\n  background-color: transparent;\r\n  color: inherit;\r\n}\r\n\r\n.el-menu .el-menu-item {\r\n  outline: none;\r\n  border: none;\r\n  height: 60px;\r\n  line-height: 60px;\r\n}\r\n\r\n.el-menu .el-menu-item:focus {\r\n  outline: none;\r\n  border: none;\r\n}\r\n\r\n.el-menu {\r\n  border: none;\r\n  outline: none;\r\n}\r\n</style>\r\n\r\n<style>\r\n/* 暗黑模式全局背景 */\r\nbody.dark-mode {\r\n  background-color: #000000;\r\n  color: #ffffff;\r\n}\r\n</style>\r\n"],"mappings":";;EAESA,KAAK,EAAC;AAAQ;;EAeVA,KAAK,EAAC;AAAgB;;;;;uBAhBjCC,YAAA,CA4BYC,oBAAA;IA7BdC,OAAA,EAAAC,QAAA,CAEI,MA0BM,CA1BNC,mBAAA,CA0BM,OA1BNC,UA0BM,GA1BeC,mBAAA,WAAc,EACjCC,YAAA,CAwBUC,kBAAA;MAxBA,gBAAc,EAAEC,KAAA,CAAAC,WAAW;MAC5BX,KAAK,EAAC,MAAM;MACXY,QAAM,EAAEC,QAAA,CAAAC,YAAY;MACrBC,IAAI,EAAC;;MANpBZ,OAAA,EAAAC,QAAA,CAQQ,MAAmB,CAAnBG,mBAAA,gBAAmB,EACnBA,mBAAA,eAAkB,EAAAA,mBAAA,eAAkB,EACpCC,YAAA,CAA4CQ,uBAAA;QAA9BC,KAAK,EAAC;MAAM;QAVlCd,OAAA,EAAAC,QAAA,CAUmC,MAAEc,MAAA,QAAAA,MAAA,OAVrCC,gBAAA,CAUmC,IAAE,E;QAVrCC,CAAA;UAUqDb,mBAAA,WAAc,EAC3DC,YAAA,CAAkDQ,uBAAA;QAApCC,KAAK,EAAC;MAAU;QAXtCd,OAAA,EAAAC,QAAA,CAWuC,MAAIc,MAAA,QAAAA,MAAA,OAX3CC,gBAAA,CAWuC,MAAI,E;QAX3CC,CAAA;UAW2Db,mBAAA,aAAgB,EACnEC,YAAA,CAAgDQ,uBAAA;QAAlCC,KAAK,EAAC;MAAQ;QAZpCd,OAAA,EAAAC,QAAA,CAYqC,MAAIc,MAAA,QAAAA,MAAA,OAZzCC,gBAAA,CAYqC,MAAI,E;QAZzCC,CAAA;UAYyDb,mBAAA,aAAgB,EACjEC,YAAA,CAAgEQ,uBAAA;QAAlDC,KAAK,EAAC;MAAsB;QAblDd,OAAA,EAAAC,QAAA,CAamD,MAAMc,MAAA,QAAAA,MAAA,OAbzDC,gBAAA,CAamD,QAAM,E;QAbzDC,CAAA;UAgBQb,mBAAA,eAAkB,EAClBF,mBAAA,CAOM,OAPNgB,UAOM,GANJd,mBAAA,YAAe,EACfF,mBAAA,CAEM;QAFDL,KAAK,EAAC,cAAc;QAAEsB,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEV,QAAA,CAAAW,WAAA,IAAAX,QAAA,CAAAW,WAAA,IAAAD,IAAA,CAAW;0BACxCb,KAAA,CAAAe,MAAM,0CAEXlB,mBAAA,UAAa,EACbC,YAAA,CAAoEQ,uBAAA;QAAtDC,KAAK,EAAC,QAAQ;QAAEK,OAAK,EAAET,QAAA,CAAAa;;QAvB/CvB,OAAA,EAAAC,QAAA,CAuB6D,MAAEc,MAAA,QAAAA,MAAA,OAvB/DC,gBAAA,CAuB6D,IAAE,E;QAvB/DC,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}