{"ast":null,"code":"export default {\n  props: {\n    order: {\n      type: Object,\n      default: () => ({})\n    },\n    modelValue: {\n      // 使用 v-model\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      visible: this.modelValue,\n      // 使用 modelValue\n      form: {\n        orderNumber: '',\n        totalAmount: 0,\n        orderStatus: 'pending'\n      }\n    };\n  },\n  watch: {\n    order: {\n      immediate: true,\n      handler(newVal) {\n        if (newVal) {\n          this.form = {\n            ...newVal\n          };\n        }\n      }\n    },\n    modelValue: {\n      immediate: true,\n      handler(newVal) {\n        this.visible = newVal; // 监听 modelValue 的变化\n      }\n    }\n  },\n  methods: {\n    submitForm() {\n      const method = this.order ? 'PUT' : 'POST';\n      const url = this.order ? `http://localhost:8080/api/orders/${this.order.orderId}` : 'http://localhost:8080/api/orders';\n      fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.form)\n      }).then(() => {\n        this.$emit('refresh');\n        this.handleClose();\n      });\n    },\n    handleClose() {\n      this.visible = false;\n      this.$emit('close');\n    }\n  }\n};","map":{"version":3,"names":["props","order","type","Object","default","modelValue","Boolean","data","visible","form","orderNumber","totalAmount","orderStatus","watch","immediate","handler","newVal","methods","submitForm","method","url","orderId","fetch","headers","body","JSON","stringify","then","$emit","handleClose"],"sources":["E:\\ecms\\ecmsvue\\src\\components\\OrderForm.vue"],"sourcesContent":["<template>\r\n  <el-dialog :visible=\"visible\" title=\"Order Form\" @close=\"handleClose\">\r\n    <el-form :model=\"form\" label-width=\"120px\">\r\n      <el-form-item label=\"Order Number\">\r\n        <el-input v-model=\"form.orderNumber\" required />\r\n      </el-form-item>\r\n      <el-form-item label=\"Total Amount\">\r\n        <el-input type=\"number\" v-model=\"form.totalAmount\" required />\r\n      </el-form-item>\r\n      <el-form-item label=\"Status\">\r\n        <el-select v-model=\"form.orderStatus\" placeholder=\"Select Status\">\r\n          <el-option label=\"Pending\" value=\"pending\" />\r\n          <el-option label=\"Shipped\" value=\"shipped\" />\r\n          <el-option label=\"Completed\" value=\"completed\" />\r\n          <el-option label=\"Refunded\" value=\"refunded\" />\r\n        </el-select>\r\n      </el-form-item>\r\n    </el-form>\r\n    <template #footer>\r\n      <el-button @click=\"handleClose\">Cancel</el-button>\r\n      <el-button type=\"primary\" @click=\"submitForm\">Save</el-button>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    order: {\r\n      type: Object,\r\n      default: () => ({})\r\n    },\r\n    modelValue: { // 使用 v-model\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      visible: this.modelValue, // 使用 modelValue\r\n      form: {\r\n        orderNumber: '',\r\n        totalAmount: 0,\r\n        orderStatus: 'pending'\r\n      }\r\n    };\r\n  },\r\n  watch: {\r\n    order: {\r\n      immediate: true,\r\n      handler(newVal) {\r\n        if (newVal) {\r\n          this.form = { ...newVal };\r\n        }\r\n      }\r\n    },\r\n    modelValue: {\r\n      immediate: true,\r\n      handler(newVal) {\r\n        this.visible = newVal; // 监听 modelValue 的变化\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm() {\r\n      const method = this.order ? 'PUT' : 'POST';\r\n      const url = this.order ? `http://localhost:8080/api/orders/${this.order.orderId}` : 'http://localhost:8080/api/orders';\r\n\r\n      fetch(url, {\r\n        method,\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(this.form)\r\n      }).then(() => {\r\n        this.$emit('refresh');\r\n        this.handleClose();\r\n      });\r\n    },\r\n    handleClose() {\r\n      this.visible = false;\r\n      this.$emit('close');\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"AA0BA,eAAe;EACbA,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAEA,CAAA,MAAO,CAAC,CAAC;IACpB,CAAC;IACDC,UAAU,EAAE;MAAE;MACZH,IAAI,EAAEI,OAAO;MACbF,OAAO,EAAE;IACX;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,IAAI,CAACH,UAAU;MAAE;MAC1BI,IAAI,EAAE;QACJC,WAAW,EAAE,EAAE;QACfC,WAAW,EAAE,CAAC;QACdC,WAAW,EAAE;MACf;IACF,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLZ,KAAK,EAAE;MACLa,SAAS,EAAE,IAAI;MACfC,OAAOA,CAACC,MAAM,EAAE;QACd,IAAIA,MAAM,EAAE;UACV,IAAI,CAACP,IAAG,GAAI;YAAE,GAAGO;UAAO,CAAC;QAC3B;MACF;IACF,CAAC;IACDX,UAAU,EAAE;MACVS,SAAS,EAAE,IAAI;MACfC,OAAOA,CAACC,MAAM,EAAE;QACd,IAAI,CAACR,OAAM,GAAIQ,MAAM,EAAE;MACzB;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,MAAMC,MAAK,GAAI,IAAI,CAAClB,KAAI,GAAI,KAAI,GAAI,MAAM;MAC1C,MAAMmB,GAAE,GAAI,IAAI,CAACnB,KAAI,GAAI,oCAAoC,IAAI,CAACA,KAAK,CAACoB,OAAO,EAAC,GAAI,kCAAkC;MAEtHC,KAAK,CAACF,GAAG,EAAE;QACTD,MAAM;QACNI,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACjB,IAAI;MAChC,CAAC,CAAC,CAACkB,IAAI,CAAC,MAAM;QACZ,IAAI,CAACC,KAAK,CAAC,SAAS,CAAC;QACrB,IAAI,CAACC,WAAW,CAAC,CAAC;MACpB,CAAC,CAAC;IACJ,CAAC;IACDA,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACrB,OAAM,GAAI,KAAK;MACpB,IAAI,CAACoB,KAAK,CAAC,OAAO,CAAC;IACrB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}