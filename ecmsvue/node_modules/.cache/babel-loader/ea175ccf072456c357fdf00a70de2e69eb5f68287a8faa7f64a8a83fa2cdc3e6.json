{"ast":null,"code":"import AppMerchantNavbar from '../components/MerchantNavbar.vue';\nimport AppAdminNavbar from '../components/AdminNavbar.vue'; // 引入管理员导航栏\n\nexport default {\n  name: 'HomePage',\n  components: {\n    AppMerchantNavbar,\n    AppAdminNavbar\n  },\n  data() {\n    return {\n      currentUser: null,\n      currentTime: ''\n    };\n  },\n  computed: {\n    navbarComponent() {\n      // 根据用户角色返回相应的导航栏组件\n      if (this.currentUser && this.currentUser.role === 'admin') {\n        return 'AppAdminNavbar'; // 如果是管理员，返回管理员导航栏\n      }\n      return 'AppMerchantNavbar'; // 默认返回商家导航栏\n    }\n  },\n  created() {\n    this.getCurrentUser();\n    this.updateTime();\n    setInterval(this.updateTime, 1000);\n  },\n  methods: {\n    getCurrentUser() {\n      // 从 localStorage 获取用户信息\n      const userData = localStorage.getItem('user');\n      if (userData) {\n        try {\n          const parsedUserData = JSON.parse(userData);\n          if (parsedUserData.success) {\n            this.currentUser = {\n              role: parsedUserData.role,\n              id: parsedUserData.userid,\n              // 使用 userid 作为 id\n              token: parsedUserData.token,\n              username: parsedUserData.username\n            };\n          } else {\n            console.error('用户信息不正确:', parsedUserData);\n          }\n        } catch (e) {\n          console.error('解析用户信息失败:', e);\n        }\n      }\n    },\n    updateTime() {\n      const now = new Date();\n      this.currentTime = now.toLocaleString();\n    }\n  }\n};","map":{"version":3,"names":["AppMerchantNavbar","AppAdminNavbar","name","components","data","currentUser","currentTime","computed","navbarComponent","role","created","getCurrentUser","updateTime","setInterval","methods","userData","localStorage","getItem","parsedUserData","JSON","parse","success","id","userid","token","username","console","error","e","now","Date","toLocaleString"],"sources":["E:\\软件工程实训\\ecmsV1.2\\ecmsvue\\src\\views\\Home.vue"],"sourcesContent":["<template>\n  <div>\n    <component :is=\"navbarComponent\" /> <!-- 根据用户角色动态加载导航栏 -->\n    <div class=\"home-container\">\n      <h1>欢迎来到首页!</h1>\n      <p class=\"welcome-msg\">\n        欢迎回来，{{ currentUser?.username || '用户' }}！\n      </p>\n      <p class=\"time-msg\">当前时间：{{ currentTime }}</p>\n\n      <!-- 公告栏 -->\n      <el-card class=\"notice-board\" shadow=\"hover\">\n        <h3>📢 系统公告</h3>\n        <ul class=\"notice-list\">\n          <li>🛠 系统维护时间：每周日凌晨 2:00 - 4:00</li>\n          <li>📊 数据将在每天晚上自动备份</li>\n          <li>📌 如遇页面问题，请刷新或重新登录</li>\n        </ul>\n      </el-card>\n\n      <div class=\"user-info\">\n        <el-tag type=\"success\" v-if=\"currentUser\">\n          你好，你的{{ currentUser.role }}ID为: {{ currentUser.id }}\n        </el-tag>\n        <el-tag type=\"info\" v-else>\n          未登录\n        </el-tag>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport AppMerchantNavbar from '../components/MerchantNavbar.vue';\nimport AppAdminNavbar from '../components/AdminNavbar.vue'; // 引入管理员导航栏\n\nexport default {\n  name: 'HomePage',\n  components: {\n    AppMerchantNavbar,\n    AppAdminNavbar\n  },\n  data() {\n    return {\n      currentUser: null,\n      currentTime: ''\n    }\n  },\n  computed: {\n    navbarComponent() {\n      // 根据用户角色返回相应的导航栏组件\n      if (this.currentUser && this.currentUser.role === 'admin') {\n        return 'AppAdminNavbar'; // 如果是管理员，返回管理员导航栏\n      }\n      return 'AppMerchantNavbar'; // 默认返回商家导航栏\n    }\n  },\n  created() {\n    this.getCurrentUser();\n    this.updateTime();\n    setInterval(this.updateTime, 1000);\n  },\n  methods: {\n    getCurrentUser() {\n      // 从 localStorage 获取用户信息\n      const userData = localStorage.getItem('user');\n      if (userData) {\n        try {\n          const parsedUserData = JSON.parse(userData);\n          if (parsedUserData.success) {\n            this.currentUser = {\n              role: parsedUserData.role,\n              id: parsedUserData.userid, // 使用 userid 作为 id\n              token: parsedUserData.token,\n              username: parsedUserData.username\n            };\n          } else {\n            console.error('用户信息不正确:', parsedUserData);\n          }\n        } catch (e) {\n          console.error('解析用户信息失败:', e);\n        }\n      }\n    },\n    updateTime() {\n      const now = new Date();\n      this.currentTime = now.toLocaleString();\n    }\n  }\n};\n</script>\n\n<style scoped>\n.home-container {\n  position: relative;\n  padding: 20px;\n  text-align: center;\n}\n\n.home-container h1 {\n  font-size: 36px;\n  color: #409EFF;\n}\n\n.welcome-msg {\n  font-size: 20px;\n  margin: 10px 0;\n}\n\n.time-msg {\n  font-size: 16px;\n  color: #888;\n  margin-bottom: 30px;\n}\n\n.user-info {\n  position: absolute;\n  top: 20px;\n  right: 20px;\n}\n\n.notice-board {\n  max-width: 600px;\n  margin: 0 auto;\n  text-align: left;\n  padding: 20px;\n  border-left: 5px solid #409EFF;\n}\n\n.notice-list {\n  list-style: none;\n  padding-left: 0;\n  margin-top: 10px;\n}\n\n.notice-list li {\n  margin-bottom: 10px;\n  font-size: 16px;\n  color: #333;\n}\n\n/* 响应式优化 */\n@media (max-width: 768px) {\n  .user-info {\n    position: static;\n    margin-top: 20px;\n    text-align: center;\n  }\n\n  .notice-board {\n    width: 90%;\n  }\n}\n</style>"],"mappings":"AAkCA,OAAOA,iBAAgB,MAAO,kCAAkC;AAChE,OAAOC,cAAa,MAAO,+BAA+B,EAAE;;AAE5D,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACVH,iBAAiB;IACjBC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,IAAI;MACjBC,WAAW,EAAE;IACf;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,eAAeA,CAAA,EAAG;MAChB;MACA,IAAI,IAAI,CAACH,WAAU,IAAK,IAAI,CAACA,WAAW,CAACI,IAAG,KAAM,OAAO,EAAE;QACzD,OAAO,gBAAgB,EAAE;MAC3B;MACA,OAAO,mBAAmB,EAAE;IAC9B;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC;IACrB,IAAI,CAACC,UAAU,CAAC,CAAC;IACjBC,WAAW,CAAC,IAAI,CAACD,UAAU,EAAE,IAAI,CAAC;EACpC,CAAC;EACDE,OAAO,EAAE;IACPH,cAAcA,CAAA,EAAG;MACf;MACA,MAAMI,QAAO,GAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAC7C,IAAIF,QAAQ,EAAE;QACZ,IAAI;UACF,MAAMG,cAAa,GAAIC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC;UAC3C,IAAIG,cAAc,CAACG,OAAO,EAAE;YAC1B,IAAI,CAAChB,WAAU,GAAI;cACjBI,IAAI,EAAES,cAAc,CAACT,IAAI;cACzBa,EAAE,EAAEJ,cAAc,CAACK,MAAM;cAAE;cAC3BC,KAAK,EAAEN,cAAc,CAACM,KAAK;cAC3BC,QAAQ,EAAEP,cAAc,CAACO;YAC3B,CAAC;UACH,OAAO;YACLC,OAAO,CAACC,KAAK,CAAC,UAAU,EAAET,cAAc,CAAC;UAC3C;QACF,EAAE,OAAOU,CAAC,EAAE;UACVF,OAAO,CAACC,KAAK,CAAC,WAAW,EAAEC,CAAC,CAAC;QAC/B;MACF;IACF,CAAC;IACDhB,UAAUA,CAAA,EAAG;MACX,MAAMiB,GAAE,GAAI,IAAIC,IAAI,CAAC,CAAC;MACtB,IAAI,CAACxB,WAAU,GAAIuB,GAAG,CAACE,cAAc,CAAC,CAAC;IACzC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}