{"ast":null,"code":"import axios from 'axios';\nimport { ElMessage } from 'element-plus';\nimport AppNavbar from \"@/components/Navbar.vue\";\nexport default {\n  name: 'ProductManagement',\n  components: {\n    AppNavbar\n  },\n  data() {\n    return {\n      products: [],\n      searchKeyword: '',\n      // 新增搜索关键词\n      productForm: {\n        productName: '',\n        price: 0,\n        stockQuantity: 0,\n        status: 'active',\n        merchantId: null,\n        description: ''\n      },\n      selectedProduct: null,\n      dialogVisible: false,\n      deleteDialogVisible: false,\n      productIdToDelete: null\n    };\n  },\n  methods: {\n    fetchProducts() {\n      const url = 'http://localhost:8080/api/products';\n      axios.get(url).then(response => {\n        this.products = response.data;\n      }).catch(error => {\n        ElMessage.error('获取产品列表失败: ' + error.message);\n        console.error('获取产品时出错:', error);\n      });\n    },\n    fetchProductsByKeyword() {\n      const url = this.searchKeyword ? `http://localhost:8080/api/products/search?keyword=${this.searchKeyword}` : 'http://localhost:8080/api/products';\n      axios.get(url).then(response => {\n        this.products = response.data;\n      }).catch(error => {\n        ElMessage.error('获取产品列表失败: ' + error.message);\n        console.error('获取产品时出错:', error);\n      });\n    },\n    showProductForm() {\n      this.selectedProduct = null;\n      this.productForm = {\n        productName: '',\n        price: 0,\n        stockQuantity: 0,\n        status: 'active',\n        merchantId: null,\n        description: ''\n      };\n      this.dialogVisible = true;\n    },\n    editProduct(product) {\n      this.selectedProduct = product;\n      this.productForm = {\n        productName: product.productName,\n        price: product.price,\n        stockQuantity: product.stockQuantity,\n        status: product.status,\n        merchantId: product.merchantId,\n        description: product.description || ''\n      };\n      this.dialogVisible = true;\n    },\n    clearForm() {\n      this.selectedProduct = null;\n      this.productForm = {\n        productName: '',\n        price: 0,\n        stockQuantity: 0,\n        status: 'active',\n        merchantId: null,\n        description: ''\n      };\n    },\n    saveProduct() {\n      const url = this.selectedProduct ? `http://localhost:8080/api/products/${this.selectedProduct.productId}` : 'http://localhost:8080/api/products';\n      const method = this.selectedProduct ? 'put' : 'post';\n      const productData = {\n        merchantId: this.productForm.merchantId,\n        productName: this.productForm.productName,\n        price: this.productForm.price,\n        stockQuantity: this.productForm.stockQuantity,\n        status: this.productForm.status,\n        description: this.productForm.description\n      };\n      axios[method](url, productData).then(() => {\n        ElMessage.success(this.selectedProduct ? '产品更新成功' : '产品添加成功');\n        this.fetchProducts(); // 重新获取所有产品\n        this.dialogVisible = false;\n      }).catch(error => {\n        ElMessage.error('操作失败: ' + error.message);\n        console.error('保存产品时出错:', error);\n      });\n    },\n    confirmDelete(productId) {\n      this.productIdToDelete = productId;\n      this.deleteDialogVisible = true;\n    },\n    deleteProduct() {\n      axios.delete(`http://localhost:8080/api/products/${this.productIdToDelete}`).then(() => {\n        ElMessage.success('产品删除成功');\n        this.fetchProducts(); // 重新获取所有产品\n        this.deleteDialogVisible = false;\n      }).catch(error => {\n        ElMessage.error('删除失败: ' + error.message);\n        console.error('删除产品时出错:', error);\n      });\n    }\n  },\n  mounted() {\n    this.fetchProducts(); // 初始加载所有产品\n  }\n};","map":{"version":3,"names":["axios","ElMessage","AppNavbar","name","components","data","products","searchKeyword","productForm","productName","price","stockQuantity","status","merchantId","description","selectedProduct","dialogVisible","deleteDialogVisible","productIdToDelete","methods","fetchProducts","url","get","then","response","catch","error","message","console","fetchProductsByKeyword","showProductForm","editProduct","product","clearForm","saveProduct","productId","method","productData","success","confirmDelete","deleteProduct","delete","mounted"],"sources":["D:\\code_new\\ecms-main\\ecmsvue\\src\\views\\Products.vue"],"sourcesContent":["<template>\n  <div>\n    <AppNavbar />\n    <h1>产品管理</h1>\n    <el-input\n        v-model=\"searchKeyword\"\n        placeholder=\"请输入产品名称或描述进行搜索\"\n        style=\"width: 300px; margin-bottom: 20px;\"\n        @input=\"fetchProductsByKeyword\"\n    />\n    <el-button type=\"primary\" @click=\"showProductForm\" style=\"margin-bottom: 20px;\">添加产品</el-button>\n\n    <!-- 产品表格 -->\n    <el-table :data=\"products\" style=\"width: 100%;\">\n      <el-table-column prop=\"productName\" label=\"产品名称\" />\n      <el-table-column prop=\"price\" label=\"价格\" />\n      <el-table-column prop=\"status\" label=\"状态\">\n        <template #default=\"scope\">\n          <el-tag :type=\"scope.row.status === 'active' ? 'success' : 'danger'\">\n            {{ scope.row.status === 'active' ? '可用' : '不可用' }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\">\n        <template #default=\"scope\">\n          <el-button size=\"small\" @click=\"editProduct(scope.row)\">编辑</el-button>\n          <el-button size=\"small\" type=\"danger\" @click=\"confirmDelete(scope.row.productId)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 产品表单对话框 -->\n    <el-dialog\n        v-model=\"dialogVisible\"\n        :title=\"selectedProduct ? '编辑产品' : '添加产品'\"\n        width=\"50%\"\n        @close=\"clearForm\"\n    >\n      <el-form :model=\"productForm\" label-width=\"120px\" size=\"medium\">\n        <el-form-item label=\"产品名称\" prop=\"productName\">\n          <el-input v-model=\"productForm.productName\" placeholder=\"请输入产品名称\" />\n        </el-form-item>\n        <el-form-item label=\"价格\" prop=\"price\">\n          <el-input-number v-model=\"productForm.price\" :min=\"0\" :precision=\"2\" />\n        </el-form-item>\n        <el-form-item label=\"库存数量\" prop=\"stockQuantity\">\n          <el-input-number v-model=\"productForm.stockQuantity\" :min=\"0\" />\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-select v-model=\"productForm.status\" placeholder=\"选择状态\">\n            <el-option label=\"可用\" value=\"active\" />\n            <el-option label=\"不可用\" value=\"inactive\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"商家ID\" prop=\"merchantId\">\n          <el-input-number v-model=\"productForm.merchantId\" :min=\"1\" disabled v-if=\"selectedProduct\" />\n          <el-input-number v-model=\"productForm.merchantId\" :min=\"1\" v-else />\n        </el-form-item>\n        <el-form-item label=\"描述\" prop=\"description\">\n          <el-input v-model=\"productForm.description\" type=\"textarea\" :rows=\"3\" />\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"saveProduct\">保存</el-button>\n        </span>\n      </template>\n    </el-dialog>\n\n    <!-- 删除确认对话框 -->\n    <el-dialog\n        v-model=\"deleteDialogVisible\"\n        title=\"确认删除\"\n        width=\"30%\"\n    >\n      <span>确定要删除这个产品吗？此操作不可撤销。</span>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"deleteDialogVisible = false\">取消</el-button>\n          <el-button type=\"danger\" @click=\"deleteProduct\">确认删除</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nimport AppNavbar from \"@/components/Navbar.vue\";\n\nexport default {\n  name: 'ProductManagement',\n  components: {AppNavbar},\n  data() {\n    return {\n      products: [],\n      searchKeyword: '', // 新增搜索关键词\n      productForm: {\n        productName: '',\n        price: 0,\n        stockQuantity: 0,\n        status: 'active',\n        merchantId: null,\n        description: ''\n      },\n      selectedProduct: null,\n      dialogVisible: false,\n      deleteDialogVisible: false,\n      productIdToDelete: null\n    };\n  },\n  methods: {\n    fetchProducts() {\n      const url = 'http://localhost:8080/api/products';\n      axios.get(url)\n          .then(response => {\n            this.products = response.data;\n          })\n          .catch(error => {\n            ElMessage.error('获取产品列表失败: ' + error.message);\n            console.error('获取产品时出错:', error);\n          });\n    },\n    fetchProductsByKeyword() {\n      const url = this.searchKeyword\n          ? `http://localhost:8080/api/products/search?keyword=${this.searchKeyword}`\n          : 'http://localhost:8080/api/products';\n\n      axios.get(url)\n          .then(response => {\n            this.products = response.data;\n          })\n          .catch(error => {\n            ElMessage.error('获取产品列表失败: ' + error.message);\n            console.error('获取产品时出错:', error);\n          });\n    },\n    showProductForm() {\n      this.selectedProduct = null;\n      this.productForm = {\n        productName: '',\n        price: 0,\n        stockQuantity: 0,\n        status: 'active',\n        merchantId: null,\n        description: ''\n      };\n      this.dialogVisible = true;\n    },\n    editProduct(product) {\n      this.selectedProduct = product;\n      this.productForm = {\n        productName: product.productName,\n        price: product.price,\n        stockQuantity: product.stockQuantity,\n        status: product.status,\n        merchantId: product.merchantId,\n        description: product.description || ''\n      };\n      this.dialogVisible = true;\n    },\n    clearForm() {\n      this.selectedProduct = null;\n      this.productForm = {\n        productName: '',\n        price: 0,\n        stockQuantity: 0,\n        status: 'active',\n        merchantId: null,\n        description: ''\n      };\n    },\n    saveProduct() {\n      const url = this.selectedProduct\n          ? `http://localhost:8080/api/products/${this.selectedProduct.productId}`\n          : 'http://localhost:8080/api/products';\n\n      const method = this.selectedProduct ? 'put' : 'post';\n\n      const productData = {\n        merchantId: this.productForm.merchantId,\n        productName: this.productForm.productName,\n        price: this.productForm.price,\n        stockQuantity: this.productForm.stockQuantity,\n        status: this.productForm.status,\n        description: this.productForm.description\n      };\n\n      axios[method](url, productData)\n          .then(() => {\n            ElMessage.success(this.selectedProduct ? '产品更新成功' : '产品添加成功');\n            this.fetchProducts(); // 重新获取所有产品\n            this.dialogVisible = false;\n          })\n          .catch(error => {\n            ElMessage.error('操作失败: ' + error.message);\n            console.error('保存产品时出错:', error);\n          });\n    },\n    confirmDelete(productId) {\n      this.productIdToDelete = productId;\n      this.deleteDialogVisible = true;\n    },\n    deleteProduct() {\n      axios.delete(`http://localhost:8080/api/products/${this.productIdToDelete}`)\n          .then(() => {\n            ElMessage.success('产品删除成功');\n            this.fetchProducts(); // 重新获取所有产品\n            this.deleteDialogVisible = false;\n          })\n          .catch(error => {\n            ElMessage.error('删除失败: ' + error.message);\n            console.error('删除产品时出错:', error);\n          });\n    }\n  },\n  mounted() {\n    this.fetchProducts(); // 初始加载所有产品\n  }\n};\n</script>\n\n<style scoped>\n.el-table {\n  width: 100%;\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}