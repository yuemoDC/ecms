{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"sales-prediction\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_line_chart = _resolveComponent(\"line-chart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[8] || (_cache[8] = _createElementVNode(\"h1\", null, \"AI 销售预测\", -1 /* HOISTED */)), _createCommentVNode(\" 销售趋势 \"), _createElementVNode(\"div\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"h2\", null, \"商家的销售预测数据（所有产品）\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.merchantId = $event),\n    type: \"number\",\n    placeholder: \"输入商家ID\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.merchantId]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.getSalesPrediction && $options.getSalesPrediction(...args))\n  }, \"获取销售预测\"), $data.salesPrediction ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"h3\", null, \"销售预测\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.salesPrediction.predictions, (prediction, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, _toDisplayString($data.salesPrediction.dates[index]) + \": \" + _toDisplayString(prediction), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" 销售趋势图 \"), _createElementVNode(\"div\", null, [_createVNode(_component_line_chart, {\n    \"chart-data\": $data.chartData,\n    options: $data.chartOptions\n  }, null, 8 /* PROPS */, [\"chart-data\", \"options\"])])])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 特定产品的销售预测 \"), _createElementVNode(\"div\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"商家特定产品的销售预测\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.productId = $event),\n    type: \"number\",\n    placeholder: \"输入产品ID\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.productId]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.getProductSalesPrediction && $options.getProductSalesPrediction(...args))\n  }, \"获取产品销售预测\"), $data.productSalesPrediction ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[6] || (_cache[6] = _createElementVNode(\"h3\", null, \"产品销售预测\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.productSalesPrediction.predictions, (prediction, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, _toDisplayString($data.productSalesPrediction.dates[index]) + \": \" + _toDisplayString(prediction), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" 产品销售趋势图 \"), _createElementVNode(\"div\", null, [_createVNode(_component_line_chart, {\n    \"chart-data\": $data.productChartData,\n    options: $data.chartOptions\n  }, null, 8 /* PROPS */, [\"chart-data\", \"options\"])])])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["id","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_cache","$event","$data","merchantId","type","placeholder","onClick","args","$options","getSalesPrediction","salesPrediction","_hoisted_2","_Fragment","_renderList","predictions","prediction","index","_toDisplayString","dates","_createVNode","_component_line_chart","chartData","options","chartOptions","productId","getProductSalesPrediction","productSalesPrediction","_hoisted_3","productChartData"],"sources":["E:\\shixun\\420\\ecms\\ecmsvue\\src\\views\\SalesPrediction.vue"],"sourcesContent":["<template>\r\n  <div id=\"sales-prediction\">\r\n    <h1>AI 销售预测</h1>\r\n\r\n    <!-- 销售趋势 -->\r\n    <div>\r\n      <h2>商家的销售预测数据（所有产品）</h2>\r\n      <input v-model=\"merchantId\" type=\"number\" placeholder=\"输入商家ID\" />\r\n      <button @click=\"getSalesPrediction\">获取销售预测</button>\r\n\r\n      <div v-if=\"salesPrediction\">\r\n        <h3>销售预测</h3>\r\n        <ul>\r\n          <li v-for=\"(prediction, index) in salesPrediction.predictions\" :key=\"index\">\r\n            {{ salesPrediction.dates[index] }}: {{ prediction }}\r\n          </li>\r\n        </ul>\r\n\r\n        <!-- 销售趋势图 -->\r\n        <div>\r\n          <line-chart :chart-data=\"chartData\" :options=\"chartOptions\"></line-chart>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 特定产品的销售预测 -->\r\n    <div>\r\n      <h2>商家特定产品的销售预测</h2>\r\n      <input v-model=\"productId\" type=\"number\" placeholder=\"输入产品ID\" />\r\n      <button @click=\"getProductSalesPrediction\">获取产品销售预测</button>\r\n\r\n      <div v-if=\"productSalesPrediction\">\r\n        <h3>产品销售预测</h3>\r\n        <ul>\r\n          <li v-for=\"(prediction, index) in productSalesPrediction.predictions\" :key=\"index\">\r\n            {{ productSalesPrediction.dates[index] }}: {{ prediction }}\r\n          </li>\r\n        </ul>\r\n\r\n        <!-- 产品销售趋势图 -->\r\n        <div>\r\n          <line-chart :chart-data=\"productChartData\" :options=\"chartOptions\"></line-chart>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { Line } from 'vue-chartjs';\r\nimport { Chart as ChartJS, Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale } from 'chart.js';\r\n\r\n// Register chart.js components\r\nChartJS.register(Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale);\r\n\r\nexport default {\r\n  name: 'SalesPrediction',\r\n  components: {\r\n    LineChart: Line\r\n  },\r\n  data() {\r\n    return {\r\n      merchantId: '', // 用户输入的商家ID\r\n      productId: '',  // 用户输入的产品ID\r\n      salesPrediction: null, // 存储所有产品的销售预测\r\n      productSalesPrediction: null, // 存储特定产品的销售预测\r\n      chartData: {\r\n        labels: [],\r\n        datasets: [{\r\n          label: '预测销售额',\r\n          data: [],\r\n          borderColor: '#42b983',\r\n          backgroundColor: 'rgba(66, 185, 131, 0.2)',\r\n          fill: true,\r\n        }],\r\n      },\r\n      productChartData: {\r\n        labels: [],\r\n        datasets: [{\r\n          label: '产品预测销售额',\r\n          data: [],\r\n          borderColor: '#42b983',\r\n          backgroundColor: 'rgba(66, 185, 131, 0.2)',\r\n          fill: true,\r\n        }],\r\n      },\r\n      chartOptions: {\r\n        responsive: true,\r\n        plugins: {\r\n          title: {\r\n            display: true,\r\n            text: '未来30天销售预测',\r\n          },\r\n        },\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    // 获取所有产品的销售预测\r\n    async getSalesPrediction() {\r\n      if (!this.merchantId) {\r\n        alert('请输入商家ID');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/api/ai/sales-prediction/${this.merchantId}`);\r\n        this.salesPrediction = response.data;\r\n\r\n        // 更新图表数据\r\n        this.updateChartData(this.salesPrediction);\r\n      } catch (error) {\r\n        console.error('获取销售预测数据失败', error);\r\n      }\r\n    },\r\n\r\n    // 获取特定产品的销售预测\r\n    async getProductSalesPrediction() {\r\n      if (!this.merchantId || !this.productId) {\r\n        alert('请输入商家ID和产品ID');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(\r\n            `http://localhost:8080/api/ai/product-sales-prediction/${this.merchantId}/${this.productId}`\r\n        );\r\n        this.productSalesPrediction = response.data;\r\n\r\n        // 更新产品销售预测图表数据\r\n        this.updateProductChartData(this.productSalesPrediction);\r\n      } catch (error) {\r\n        console.error('获取特定产品销售预测失败', error);\r\n      }\r\n    },\r\n\r\n    // 更新图表数据（商家所有产品销售预测）\r\n    updateChartData(data) {\r\n      this.chartData.labels = data.dates;\r\n      this.chartData.datasets[0].data = data.predictions;\r\n    },\r\n\r\n    // 更新产品图表数据（特定产品销售预测）\r\n    updateProductChartData(data) {\r\n      this.productChartData.labels = data.dates;\r\n      this.productChartData.datasets[0].data = data.predictions;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#sales-prediction {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n}\r\n\r\ninput {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\nbutton {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #42b983;\r\n  color: white;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #4CAF50;\r\n}\r\n\r\nh1, h2 {\r\n  font-weight: bold;\r\n}\r\n\r\nh3 {\r\n  margin-top: 20px;\r\n}\r\n\r\nul {\r\n  text-align: left;\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\nli {\r\n  margin: 10px 0;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,EAAE,EAAC;AAAkB;;EAD5BC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;;uBACEC,mBAAA,CA4CM,OA5CNC,UA4CM,G,0BA3CJC,mBAAA,CAAgB,YAAZ,SAAO,sBAEXC,mBAAA,UAAa,EACbD,mBAAA,CAkBM,c,0BAjBJA,mBAAA,CAAwB,YAApB,iBAAe,sB,gBACnBA,mBAAA,CAAiE;IAPvE,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOsBC,KAAA,CAAAC,UAAU,GAAAF,MAAA;IAAEG,IAAI,EAAC,QAAQ;IAACC,WAAW,EAAC;iDAAtCH,KAAA,CAAAC,UAAU,E,GAC1BL,mBAAA,CAAmD;IAA1CQ,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAC,kBAAA,IAAAD,QAAA,CAAAC,kBAAA,IAAAF,IAAA,CAAkB;KAAE,QAAM,GAE/BL,KAAA,CAAAQ,eAAe,I,cAA1Bd,mBAAA,CAYM,OAtBZe,UAAA,G,0BAWQb,mBAAA,CAAa,YAAT,MAAI,sBACRA,mBAAA,CAIK,c,kBAHHF,mBAAA,CAEKgB,SAAA,QAffC,WAAA,CAa4CX,KAAA,CAAAQ,eAAe,CAACI,WAAW,EAbvE,CAasBC,UAAU,EAAEC,KAAK;yBAA7BpB,mBAAA,CAEK;MAF2DD,GAAG,EAAEqB;IAAK,GAAAC,gBAAA,CACrEf,KAAA,CAAAQ,eAAe,CAACQ,KAAK,CAACF,KAAK,KAAI,IAAE,GAAAC,gBAAA,CAAGF,UAAU;oCAIrDhB,mBAAA,WAAc,EACdD,mBAAA,CAEM,cADJqB,YAAA,CAAyEC,qBAAA;IAA5D,YAAU,EAAElB,KAAA,CAAAmB,SAAS;IAAGC,OAAO,EAAEpB,KAAA,CAAAqB;4DApBxDxB,mBAAA,e,GAyBIA,mBAAA,eAAkB,EAClBD,mBAAA,CAkBM,c,0BAjBJA,mBAAA,CAAoB,YAAhB,aAAW,sB,gBACfA,mBAAA,CAAgE;IA5BtE,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA4BsBC,KAAA,CAAAsB,SAAS,GAAAvB,MAAA;IAAEG,IAAI,EAAC,QAAQ;IAACC,WAAW,EAAC;iDAArCH,KAAA,CAAAsB,SAAS,E,GACzB1B,mBAAA,CAA4D;IAAnDQ,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAiB,yBAAA,IAAAjB,QAAA,CAAAiB,yBAAA,IAAAlB,IAAA,CAAyB;KAAE,UAAQ,GAExCL,KAAA,CAAAwB,sBAAsB,I,cAAjC9B,mBAAA,CAYM,OA3CZ+B,UAAA,G,0BAgCQ7B,mBAAA,CAAe,YAAX,QAAM,sBACVA,mBAAA,CAIK,c,kBAHHF,mBAAA,CAEKgB,SAAA,QApCfC,WAAA,CAkC4CX,KAAA,CAAAwB,sBAAsB,CAACZ,WAAW,EAlC9E,CAkCsBC,UAAU,EAAEC,KAAK;yBAA7BpB,mBAAA,CAEK;MAFkED,GAAG,EAAEqB;IAAK,GAAAC,gBAAA,CAC5Ef,KAAA,CAAAwB,sBAAsB,CAACR,KAAK,CAACF,KAAK,KAAI,IAAE,GAAAC,gBAAA,CAAGF,UAAU;oCAI5DhB,mBAAA,aAAgB,EAChBD,mBAAA,CAEM,cADJqB,YAAA,CAAgFC,qBAAA;IAAnE,YAAU,EAAElB,KAAA,CAAA0B,gBAAgB;IAAGN,OAAO,EAAEpB,KAAA,CAAAqB;4DAzC/DxB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}