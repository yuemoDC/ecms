{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport { ref, reactive, computed } from 'vue';\nimport axios from 'axios';\nimport { Chart, registerables } from 'chart.js';\nimport { Line } from 'vue-chartjs';\n\n// Register Chart.js components\nChart.register(...registerables);\nexport default {\n  name: 'SalesPredictionView',\n  components: {\n    Line\n  },\n  setup() {\n    // 表单参数\n    const merchantId = ref(null);\n    const selectedProductId = ref(null);\n    const daysToPredict = ref(30);\n    const selectedView = ref('all');\n\n    // 状态控制\n    const loading = ref(false);\n    const loadingProducts = ref(false);\n    const loadingMerchants = ref(false);\n    const error = ref(null);\n    const formError = ref(null);\n    const showResults = ref(false);\n\n    // 数据\n    const products = ref([]);\n    const merchants = ref([]);\n    const productOrders = ref([]);\n    const predictionData = reactive({\n      dates: [],\n      predictions: []\n    });\n\n    // 计算属性\n    const isFormValid = computed(() => {\n      if (!merchantId.value) return false;\n      if (selectedView.value === 'product' && !selectedProductId.value) return false;\n      return true;\n    });\n    const selectedProductName = computed(() => {\n      if (!selectedProductId.value) return '';\n      const product = products.value.find(p => p.productId === selectedProductId.value);\n      return product ? product.productName : '';\n    });\n\n    // 图表数据\n    const chartData = computed(() => {\n      return {\n        labels: predictionData.dates,\n        datasets: [{\n          label: selectedView.value === 'all' ? '所有产品销售预测' : selectedProductName.value ? `${selectedProductName.value} 销售预测` : `产品 #${selectedProductId.value} 销售预测`,\n          backgroundColor: 'rgba(53, 162, 235, 0.2)',\n          borderColor: 'rgba(53, 162, 235, 1)',\n          pointBackgroundColor: 'rgba(53, 162, 235, 1)',\n          pointBorderColor: '#fff',\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: 'rgba(53, 162, 235, 1)',\n          borderWidth: 2,\n          tension: 0.3,\n          data: predictionData.predictions\n        }]\n      };\n    });\n\n    // 图表选项\n    const chartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        y: {\n          beginAtZero: false,\n          title: {\n            display: true,\n            text: '销售金额 (¥)',\n            font: {\n              size: 14,\n              weight: 'bold'\n            }\n          },\n          grid: {\n            color: 'rgba(0, 0, 0, 0.05)'\n          }\n        },\n        x: {\n          title: {\n            display: true,\n            text: '日期',\n            font: {\n              size: 14,\n              weight: 'bold'\n            }\n          },\n          grid: {\n            color: 'rgba(0, 0, 0, 0.05)'\n          }\n        }\n      },\n      plugins: {\n        tooltip: {\n          backgroundColor: 'rgba(0, 0, 0, 0.7)',\n          titleFont: {\n            size: 14\n          },\n          bodyFont: {\n            size: 13\n          },\n          callbacks: {\n            label: function (context) {\n              return `销售额: ¥${context.raw.toFixed(2)}`;\n            }\n          }\n        },\n        legend: {\n          position: 'top',\n          labels: {\n            font: {\n              size: 14\n            }\n          }\n        }\n      }\n    };\n\n    // 获取所有商家\n    const fetchMerchants = async () => {\n      loadingMerchants.value = true;\n      try {\n        const response = await axios.get('http://localhost:8080/api/merchants');\n        merchants.value = response.data;\n      } catch (err) {\n        console.error('获取商家列表失败:', err);\n      } finally {\n        loadingMerchants.value = false;\n      }\n    };\n\n    // 获取所有产品销售预测\n    const fetchAllProductsPredictions = async () => {\n      loading.value = true;\n      error.value = null;\n      try {\n        console.log(\"发送预测请求:\", `http://localhost:8080/api/ai/sales-prediction/${merchantId.value}`);\n        const response = await axios.get(`http://localhost:8080/api/ai/sales-prediction/${merchantId.value}`);\n        console.log(\"获取预测数据响应:\", response);\n\n        // 更新预测数据\n        predictionData.dates = response.data.dates;\n        predictionData.predictions = response.data.predictions;\n\n        // 标记显示结果\n        showResults.value = true;\n      } catch (err) {\n        console.error('获取预测数据失败:', err);\n        error.value = err.response?.data?.message || '无法获取预测数据，请检查商家ID是否正确';\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 获取单个产品销售预测\n    const fetchProductPredictions = async () => {\n      if (!selectedProductId.value) {\n        error.value = '请选择要预测的产品';\n        return;\n      }\n      loading.value = true;\n      error.value = null;\n      try {\n        console.log(\"发送产品预测请求:\", `http://localhost:8080/api/ai/sales-prediction-by-product/${merchantId.value}/${selectedProductId.value}/${daysToPredict.value}`);\n        const response = await axios.get(`http://localhost:8080/api/ai/sales-prediction-by-product/${merchantId.value}/${selectedProductId.value}/${daysToPredict.value}`);\n        console.log(\"获取产品预测响应:\", response);\n\n        // 更新预测数据\n        predictionData.dates = response.data.dates;\n        predictionData.predictions = response.data.predictions;\n\n        // 获取产品的历史订单\n        await fetchProductOrders();\n\n        // 标记显示结果\n        showResults.value = true;\n      } catch (err) {\n        console.error('获取产品预测数据失败:', err);\n        error.value = err.response?.data?.message || '无法获取产品预测数据';\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 获取产品列表\n    const fetchProducts = async () => {\n      console.log(\"开始获取产品列表，商家ID:\", merchantId.value);\n      if (!merchantId.value) {\n        formError.value = '请先选择商家';\n        return;\n      }\n      loadingProducts.value = true;\n      formError.value = null;\n      try {\n        console.log(\"发送请求到:\", `http://localhost:8080/api/products`);\n        const response = await axios.get(`http://localhost:8080/api/products`, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }\n        });\n        console.log(\"获取产品列表响应:\", response);\n        if (!response.data || !Array.isArray(response.data)) {\n          console.error(\"返回的数据不是数组:\", response.data);\n          throw new Error('返回的数据格式不正确');\n        }\n        const mId = parseInt(merchantId.value, 10);\n        const merchantProducts = response.data.filter(product => parseInt(product.merchantId, 10) === mId);\n        console.log(\"过滤后的商家产品:\", merchantProducts);\n        if (merchantProducts.length === 0) {\n          products.value = response.data;\n          formError.value = '未找到该商家的产品，已显示所有产品';\n        } else {\n          products.value = merchantProducts;\n        }\n        if (merchantProducts.length === 1) {\n          selectProduct(merchantProducts[0].productId);\n        } else {\n          selectedProductId.value = null;\n        }\n      } catch (err) {\n        console.error('获取产品列表失败:', err);\n        formError.value = `无法获取产品列表: ${err.message || '请检查网络连接和服务器状态'}`;\n      } finally {\n        loadingProducts.value = false;\n      }\n    };\n\n    // 选择产品\n    const selectProduct = productId => {\n      selectedProductId.value = productId;\n      formError.value = null;\n    };\n\n    // 获取产品的历史订单\n    const fetchProductOrders = async () => {\n      try {\n        console.log(\"获取订单列表:\", `http://localhost:8080/api/orders/${merchantId.value}`);\n        const response = await axios.get(`http://localhost:8080/api/orders/${merchantId.value}`);\n        console.log(\"获取订单响应:\", response);\n        productOrders.value = response.data.filter(order => order.merchantId === merchantId.value);\n      } catch (err) {\n        console.error('获取产品订单失败:', err);\n        productOrders.value = [];\n      }\n    };\n\n    // 开始预测\n    const startPrediction = () => {\n      formError.value = null;\n      if (!merchantId.value) {\n        formError.value = '请选择商家';\n        return;\n      }\n      if (selectedView.value === 'product' && !selectedProductId.value) {\n        formError.value = '请选择要预测的产品';\n        return;\n      }\n      if (selectedView.value === 'all') {\n        fetchAllProductsPredictions();\n      } else {\n        fetchProductPredictions();\n      }\n    };\n\n    // 查看特定产品的预测\n    const viewProductPrediction = productId => {\n      selectedProductId.value = productId;\n      selectedView.value = 'product';\n      fetchProductPredictions();\n    };\n\n    // 计算统计指标\n    const calculateAverage = data => {\n      if (!data || data.length === 0) return 0;\n      return data.reduce((sum, val) => sum + val, 0) / data.length;\n    };\n    const calculateSum = data => {\n      if (!data || data.length === 0) return 0;\n      return data.reduce((sum, val) => sum + val, 0);\n    };\n    const calculateTrend = data => {\n      if (!data || data.length < 2) return 0;\n      const firstValue = data[0];\n      const lastValue = data[data.length - 1];\n      return (lastValue - firstValue) / firstValue * 100;\n    };\n\n    // 格式化日期\n    const formatDate = dateString => {\n      if (!dateString) return '未知日期';\n      try {\n        const date = new Date(dateString);\n        return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n      } catch (e) {\n        return '日期格式错误';\n      }\n    };\n    return {\n      // 表单参数\n      merchantId,\n      selectedProductId,\n      daysToPredict,\n      selectedView,\n      // 状态控制\n      loading,\n      loadingProducts,\n      loadingMerchants,\n      error,\n      formError,\n      showResults,\n      // 数据\n      products,\n      merchants,\n      productOrders,\n      predictionData,\n      // 计算属性\n      isFormValid,\n      selectedProductName,\n      chartData,\n      chartOptions,\n      // 方法\n      fetchMerchants,\n      fetchProducts,\n      startPrediction,\n      viewProductPrediction,\n      calculateAverage,\n      calculateSum,\n      calculateTrend,\n      formatDate,\n      selectProduct\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","axios","Chart","registerables","Line","register","name","components","setup","merchantId","selectedProductId","daysToPredict","selectedView","loading","loadingProducts","loadingMerchants","error","formError","showResults","products","merchants","productOrders","predictionData","dates","predictions","isFormValid","value","selectedProductName","product","find","p","productId","productName","chartData","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","borderWidth","tension","data","chartOptions","responsive","maintainAspectRatio","scales","y","beginAtZero","title","display","text","font","size","weight","grid","color","x","plugins","tooltip","titleFont","bodyFont","callbacks","context","raw","toFixed","legend","position","fetchMerchants","response","get","err","console","fetchAllProductsPredictions","log","message","fetchProductPredictions","fetchProductOrders","fetchProducts","headers","Array","isArray","Error","mId","parseInt","merchantProducts","filter","length","selectProduct","order","startPrediction","viewProductPrediction","calculateAverage","reduce","sum","val","calculateSum","calculateTrend","firstValue","lastValue","formatDate","dateString","date","Date","getFullYear","String","getMonth","padStart","getDate","e"],"sources":["E:\\shixun\\420\\ecms\\ecmsvue\\src\\views\\SalesPrediction.vue"],"sourcesContent":["<template>\r\n  <div class=\"sales-prediction-container\">\r\n    <h1 class=\"page-title\">智能销售预测分析</h1>\r\n\r\n    <!-- 预测参数设置卡片 -->\r\n    <div class=\"card filters-card\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <i class=\"icon-settings\"></i>预测参数设置\r\n        </div>\r\n        <p class=\"card-subtitle\">设置参数后点击预测按钮查看分析结果</p>\r\n      </div>\r\n\r\n      <div class=\"filters\">\r\n        <!-- 商家选择 -->\r\n        <div class=\"form-group\">\r\n          <label for=\"merchantId\">选择商家<span class=\"required\">*</span></label>\r\n          <button @click=\"fetchMerchants\" class=\"btn btn-outline\" :disabled=\"loadingMerchants\">\r\n            <i class=\"icon-refresh\"></i>\r\n            {{ loadingMerchants ? '获取中...' : '获取商家列表' }}\r\n          </button>\r\n          <select\r\n              id=\"merchantId\"\r\n              v-model=\"merchantId\"\r\n              v-if=\"merchants.length > 0\"\r\n              class=\"form-control\"\r\n              :disabled=\"loadingMerchants\"\r\n          >\r\n            <option v-for=\"merchant in merchants\" :key=\"merchant.merchantId\" :value=\"merchant.merchantId\">\r\n              {{ merchant.merchantName }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"viewType\">分析模式<span class=\"required\">*</span></label>\r\n          <select id=\"viewType\" v-model=\"selectedView\" class=\"form-control\">\r\n            <option value=\"all\">所有产品总体预测</option>\r\n            <option value=\"product\">单个产品详细分析</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div v-if=\"selectedView === 'product'\" class=\"form-group\">\r\n          <label for=\"daysPredict\">预测天数</label>\r\n          <input\r\n              id=\"daysPredict\"\r\n              v-model.number=\"daysToPredict\"\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max=\"365\"\r\n              class=\"form-control\"\r\n              placeholder=\"默认30天\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 产品列表获取按钮 -->\r\n      <div class=\"action-buttons\" v-if=\"selectedView === 'product'\">\r\n        <button @click=\"fetchProducts\" class=\"btn btn-outline\" :disabled=\"loadingProducts || !merchantId\">\r\n          <i class=\"icon-refresh\"></i>\r\n          {{ loadingProducts ? '获取中...' : '获取产品列表' }}\r\n        </button>\r\n      </div>\r\n\r\n      <!-- 产品选择卡片区域 -->\r\n      <div v-if=\"selectedView === 'product' && products.length > 0\" class=\"product-selection-container\">\r\n        <h3 class=\"section-title\">选择要预测的产品</h3>\r\n        <div class=\"product-selection\">\r\n          <div\r\n              v-for=\"product in products\"\r\n              :key=\"product.productId\"\r\n              class=\"product-selection-item\"\r\n              :class=\"{ 'selected': selectedProductId === product.productId }\"\r\n              @click=\"selectProduct(product.productId)\"\r\n          >\r\n            <div class=\"product-selection-header\">\r\n              <h4 class=\"product-title\">{{ product.productName || `产品 #${product.productId}` }}</h4>\r\n              <div class=\"product-price\">¥{{ product.price || '0.00' }}</div>\r\n            </div>\r\n            <div class=\"product-description\">\r\n              {{ product.description ? (product.description.length > 60 ? product.description.substring(0, 60) + '...' : product.description) : '暂无描述' }}\r\n            </div>\r\n            <div class=\"product-selection-footer\">\r\n              <div class=\"product-id\">ID: {{ product.productId }}</div>\r\n              <div class=\"selection-indicator\">\r\n                <i v-if=\"selectedProductId === product.productId\" class=\"icon-check\"></i>\r\n                <span v-else>点击选择</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 开始预测按钮 -->\r\n      <div class=\"action-buttons action-predict\">\r\n        <button\r\n            @click=\"startPrediction\"\r\n            class=\"btn btn-primary\"\r\n            :disabled=\"loading || !isFormValid\"\r\n        >\r\n          <i class=\"icon-chart\"></i>\r\n          {{ loading ? '分析中...' : '开始预测分析' }}\r\n        </button>\r\n      </div>\r\n\r\n      <div v-if=\"formError\" class=\"form-error\">\r\n        <i class=\"icon-error\"></i> {{ formError }}\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 预测结果卡片 -->\r\n    <div v-if=\"showResults\" class=\"card data-card\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <i class=\"icon-chart\"></i>预测结果分析\r\n        </div>\r\n        <p class=\"card-subtitle\">\r\n          {{ selectedView === 'all' ? '所有产品总体销售趋势预测' :\r\n            (selectedProductName ? `${selectedProductName} 销售趋势预测` : `产品 #${selectedProductId} 销售趋势预测`) }}\r\n        </p>\r\n      </div>\r\n\r\n      <div v-if=\"loading\" class=\"loading-container\">\r\n        <div class=\"spinner\"></div>\r\n        <p>正在分析数据，请稍候...</p>\r\n      </div>\r\n\r\n      <div v-else-if=\"error\" class=\"error-container\">\r\n        <div class=\"alert alert-danger\">\r\n          <i class=\"icon-error\"></i> {{ error }}\r\n        </div>\r\n        <button @click=\"startPrediction\" class=\"btn btn-primary\">\r\n          <i class=\"icon-refresh\"></i> 重新分析\r\n        </button>\r\n      </div>\r\n\r\n      <div v-else-if=\"predictionData.dates.length > 0\" class=\"prediction-content\">\r\n        <!-- 图表区域 -->\r\n        <div class=\"chart-container\">\r\n          <Line :data=\"chartData\" :options=\"chartOptions\" />\r\n        </div>\r\n\r\n        <!-- 分析摘要 -->\r\n        <div class=\"stats-container\">\r\n          <h3 class=\"stats-title\">\r\n            <i class=\"icon-analytics\"></i>预测数据摘要\r\n          </h3>\r\n          <div class=\"stats-grid\">\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-label\">预测周期</div>\r\n              <div class=\"stat-value\">{{ predictionData.dates[0] }} 至 {{ predictionData.dates[predictionData.dates.length - 1] }}</div>\r\n            </div>\r\n\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-label\">平均预测销售额</div>\r\n              <div class=\"stat-value\">¥{{ calculateAverage(predictionData.predictions).toFixed(2) }}</div>\r\n            </div>\r\n\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-label\">最高预测销售额</div>\r\n              <div class=\"stat-value\">¥{{ Math.max(...predictionData.predictions).toFixed(2) }}</div>\r\n            </div>\r\n\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-label\">最低预测销售额</div>\r\n              <div class=\"stat-value\">¥{{ Math.min(...predictionData.predictions).toFixed(2) }}</div>\r\n            </div>\r\n\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-label\">总预测销售额</div>\r\n              <div class=\"stat-value\">¥{{ calculateSum(predictionData.predictions).toFixed(2) }}</div>\r\n            </div>\r\n\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-label\">预测趋势</div>\r\n              <div class=\"stat-value\" :class=\"calculateTrend(predictionData.predictions) >= 0 ? 'positive' : 'negative'\">\r\n                <i :class=\"calculateTrend(predictionData.predictions) >= 0 ? 'icon-trending-up' : 'icon-trending-down'\"></i>\r\n                {{ calculateTrend(predictionData.predictions) >= 0 ? '上升' : '下降' }}\r\n                {{ Math.abs(calculateTrend(predictionData.predictions)).toFixed(2) }}%\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 相关产品卡片 -->\r\n    <div v-if=\"showResults && selectedView === 'all' && !loading && !error && products.length > 0\" class=\"card related-card\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <i class=\"icon-products\"></i>相关产品销售情况\r\n        </div>\r\n        <p class=\"card-subtitle\">点击查看单个产品的详细预测分析</p>\r\n      </div>\r\n\r\n      <div class=\"product-grid\">\r\n        <div v-for=\"product in products.slice(0, 4)\" :key=\"product.productId\" class=\"product-item\">\r\n          <h4 class=\"product-name\">{{ product.productName || `产品 #${product.productId}` }}</h4>\r\n          <p class=\"product-description\">\r\n            {{ product.description ? (product.description.length > 50 ? product.description.substring(0, 50) + '...' : product.description) : '暂无描述' }}\r\n          </p>\r\n          <div class=\"product-price\">¥{{ product.price || '0.00' }}</div>\r\n          <button @click=\"viewProductPrediction(product.productId)\" class=\"btn btn-sm btn-outline\">\r\n            <i class=\"icon-chart\"></i> 查看详细预测\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 历史订单数据 -->\r\n    <div v-if=\"showResults && selectedProductId && selectedView === 'product' && !loading && !error && productOrders.length > 0\" class=\"card orders-card\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <i class=\"icon-history\"></i>历史订单数据\r\n        </div>\r\n        <p class=\"card-subtitle\">近期订单记录分析</p>\r\n      </div>\r\n\r\n      <div class=\"order-list\">\r\n        <table class=\"table\">\r\n          <thead>\r\n          <tr>\r\n            <th>订单号</th>\r\n            <th>订单日期</th>\r\n            <th>数量</th>\r\n            <th>订单金额</th>\r\n            <th>状态</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr v-for=\"order in productOrders.slice(0, 5)\" :key=\"order.orderId\">\r\n            <td>{{ order.orderNumber || '未知' }}</td>\r\n            <td>{{ formatDate(order.createdAt) }}</td>\r\n            <td>{{ getOrderQuantity(order) }}</td>\r\n            <td>¥{{ order.totalAmount || '0.00' }}</td>\r\n            <td><span :class=\"getStatusClass(order)\">{{ getStatusText(order) }}</span></td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n        <div v-if=\"productOrders.length > 5\" class=\"view-more\">\r\n          <router-link :to=\"'/orders?productId=' + selectedProductId\" class=\"btn btn-sm btn-outline\">\r\n            <i class=\"icon-more\"></i> 查看更多订单\r\n          </router-link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"showResults && selectedProductId && selectedView === 'product' && !loading && !error && productOrders.length === 0\" class=\"card orders-card\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <i class=\"icon-history\"></i>历史订单数据\r\n        </div>\r\n      </div>\r\n      <div class=\"no-data\">\r\n        <i class=\"icon-info\"></i> 暂无该产品的历史订单数据\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, computed } from 'vue';\r\nimport axios from 'axios';\r\nimport { Chart, registerables } from 'chart.js';\r\nimport { Line } from 'vue-chartjs';\r\n\r\n// Register Chart.js components\r\nChart.register(...registerables);\r\n\r\nexport default {\r\n  name: 'SalesPredictionView',\r\n  components: {\r\n    Line\r\n  },\r\n  setup() {\r\n    // 表单参数\r\n    const merchantId = ref(null);\r\n    const selectedProductId = ref(null);\r\n    const daysToPredict = ref(30);\r\n    const selectedView = ref('all');\r\n\r\n    // 状态控制\r\n    const loading = ref(false);\r\n    const loadingProducts = ref(false);\r\n    const loadingMerchants = ref(false);\r\n    const error = ref(null);\r\n    const formError = ref(null);\r\n    const showResults = ref(false);\r\n\r\n    // 数据\r\n    const products = ref([]);\r\n    const merchants = ref([]);\r\n    const productOrders = ref([]);\r\n    const predictionData = reactive({\r\n      dates: [],\r\n      predictions: []\r\n    });\r\n\r\n    // 计算属性\r\n    const isFormValid = computed(() => {\r\n      if (!merchantId.value) return false;\r\n      if (selectedView.value === 'product' && !selectedProductId.value) return false;\r\n      return true;\r\n    });\r\n\r\n    const selectedProductName = computed(() => {\r\n      if (!selectedProductId.value) return '';\r\n      const product = products.value.find(p => p.productId === selectedProductId.value);\r\n      return product ? product.productName : '';\r\n    });\r\n\r\n    // 图表数据\r\n    const chartData = computed(() => {\r\n      return {\r\n        labels: predictionData.dates,\r\n        datasets: [{\r\n          label: selectedView.value === 'all' ? '所有产品销售预测' :\r\n              (selectedProductName.value ? `${selectedProductName.value} 销售预测` : `产品 #${selectedProductId.value} 销售预测`),\r\n          backgroundColor: 'rgba(53, 162, 235, 0.2)',\r\n          borderColor: 'rgba(53, 162, 235, 1)',\r\n          pointBackgroundColor: 'rgba(53, 162, 235, 1)',\r\n          pointBorderColor: '#fff',\r\n          pointHoverBackgroundColor: '#fff',\r\n          pointHoverBorderColor: 'rgba(53, 162, 235, 1)',\r\n          borderWidth: 2,\r\n          tension: 0.3,\r\n          data: predictionData.predictions\r\n        }]\r\n      };\r\n    });\r\n\r\n    // 图表选项\r\n    const chartOptions = {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      scales: {\r\n        y: {\r\n          beginAtZero: false,\r\n          title: {\r\n            display: true,\r\n            text: '销售金额 (¥)',\r\n            font: {\r\n              size: 14,\r\n              weight: 'bold'\r\n            }\r\n          },\r\n          grid: {\r\n            color: 'rgba(0, 0, 0, 0.05)'\r\n          }\r\n        },\r\n        x: {\r\n          title: {\r\n            display: true,\r\n            text: '日期',\r\n            font: {\r\n              size: 14,\r\n              weight: 'bold'\r\n            }\r\n          },\r\n          grid: {\r\n            color: 'rgba(0, 0, 0, 0.05)'\r\n          }\r\n        }\r\n      },\r\n      plugins: {\r\n        tooltip: {\r\n          backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n          titleFont: {\r\n            size: 14\r\n          },\r\n          bodyFont: {\r\n            size: 13\r\n          },\r\n          callbacks: {\r\n            label: function(context) {\r\n              return `销售额: ¥${context.raw.toFixed(2)}`;\r\n            }\r\n          }\r\n        },\r\n        legend: {\r\n          position: 'top',\r\n          labels: {\r\n            font: {\r\n              size: 14\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    // 获取所有商家\r\n    const fetchMerchants = async () => {\r\n      loadingMerchants.value = true;\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/api/merchants');\r\n        merchants.value = response.data;\r\n      } catch (err) {\r\n        console.error('获取商家列表失败:', err);\r\n      } finally {\r\n        loadingMerchants.value = false;\r\n      }\r\n    };\r\n\r\n    // 获取所有产品销售预测\r\n    const fetchAllProductsPredictions = async () => {\r\n      loading.value = true;\r\n      error.value = null;\r\n\r\n      try {\r\n        console.log(\"发送预测请求:\", `http://localhost:8080/api/ai/sales-prediction/${merchantId.value}`);\r\n        const response = await axios.get(`http://localhost:8080/api/ai/sales-prediction/${merchantId.value}`);\r\n        console.log(\"获取预测数据响应:\", response);\r\n\r\n        // 更新预测数据\r\n        predictionData.dates = response.data.dates;\r\n        predictionData.predictions = response.data.predictions;\r\n\r\n        // 标记显示结果\r\n        showResults.value = true;\r\n      } catch (err) {\r\n        console.error('获取预测数据失败:', err);\r\n        error.value = err.response?.data?.message || '无法获取预测数据，请检查商家ID是否正确';\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    // 获取单个产品销售预测\r\n    const fetchProductPredictions = async () => {\r\n      if (!selectedProductId.value) {\r\n        error.value = '请选择要预测的产品';\r\n        return;\r\n      }\r\n\r\n      loading.value = true;\r\n      error.value = null;\r\n\r\n      try {\r\n        console.log(\"发送产品预测请求:\", `http://localhost:8080/api/ai/sales-prediction-by-product/${merchantId.value}/${selectedProductId.value}/${daysToPredict.value}`);\r\n        const response = await axios.get(\r\n            `http://localhost:8080/api/ai/sales-prediction-by-product/${merchantId.value}/${selectedProductId.value}/${daysToPredict.value}`\r\n        );\r\n        console.log(\"获取产品预测响应:\", response);\r\n\r\n        // 更新预测数据\r\n        predictionData.dates = response.data.dates;\r\n        predictionData.predictions = response.data.predictions;\r\n\r\n        // 获取产品的历史订单\r\n        await fetchProductOrders();\r\n\r\n        // 标记显示结果\r\n        showResults.value = true;\r\n      } catch (err) {\r\n        console.error('获取产品预测数据失败:', err);\r\n        error.value = err.response?.data?.message || '无法获取产品预测数据';\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    // 获取产品列表\r\n    const fetchProducts = async () => {\r\n      console.log(\"开始获取产品列表，商家ID:\", merchantId.value);\r\n\r\n      if (!merchantId.value) {\r\n        formError.value = '请先选择商家';\r\n        return;\r\n      }\r\n\r\n      loadingProducts.value = true;\r\n      formError.value = null;\r\n\r\n      try {\r\n        console.log(\"发送请求到:\", `http://localhost:8080/api/products`);\r\n        const response = await axios.get(`http://localhost:8080/api/products`, {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          }\r\n        });\r\n\r\n        console.log(\"获取产品列表响应:\", response);\r\n\r\n        if (!response.data || !Array.isArray(response.data)) {\r\n          console.error(\"返回的数据不是数组:\", response.data);\r\n          throw new Error('返回的数据格式不正确');\r\n        }\r\n\r\n        const mId = parseInt(merchantId.value, 10);\r\n        const merchantProducts = response.data.filter(product => parseInt(product.merchantId, 10) === mId);\r\n\r\n        console.log(\"过滤后的商家产品:\", merchantProducts);\r\n\r\n        if (merchantProducts.length === 0) {\r\n          products.value = response.data;\r\n          formError.value = '未找到该商家的产品，已显示所有产品';\r\n        } else {\r\n          products.value = merchantProducts;\r\n        }\r\n\r\n        if (merchantProducts.length === 1) {\r\n          selectProduct(merchantProducts[0].productId);\r\n        } else {\r\n          selectedProductId.value = null;\r\n        }\r\n      } catch (err) {\r\n        console.error('获取产品列表失败:', err);\r\n        formError.value = `无法获取产品列表: ${err.message || '请检查网络连接和服务器状态'}`;\r\n      } finally {\r\n        loadingProducts.value = false;\r\n      }\r\n    };\r\n\r\n    // 选择产品\r\n    const selectProduct = (productId) => {\r\n      selectedProductId.value = productId;\r\n      formError.value = null;\r\n    };\r\n\r\n    // 获取产品的历史订单\r\n    const fetchProductOrders = async () => {\r\n      try {\r\n        console.log(\"获取订单列表:\", `http://localhost:8080/api/orders/${merchantId.value}`);\r\n        const response = await axios.get(`http://localhost:8080/api/orders/${merchantId.value}`);\r\n        console.log(\"获取订单响应:\", response);\r\n\r\n        productOrders.value = response.data.filter(order => order.merchantId === merchantId.value);\r\n      } catch (err) {\r\n        console.error('获取产品订单失败:', err);\r\n        productOrders.value = [];\r\n      }\r\n    };\r\n\r\n    // 开始预测\r\n    const startPrediction = () => {\r\n      formError.value = null;\r\n\r\n      if (!merchantId.value) {\r\n        formError.value = '请选择商家';\r\n        return;\r\n      }\r\n\r\n      if (selectedView.value === 'product' && !selectedProductId.value) {\r\n        formError.value = '请选择要预测的产品';\r\n        return;\r\n      }\r\n\r\n      if (selectedView.value === 'all') {\r\n        fetchAllProductsPredictions();\r\n      } else {\r\n        fetchProductPredictions();\r\n      }\r\n    };\r\n\r\n    // 查看特定产品的预测\r\n    const viewProductPrediction = (productId) => {\r\n      selectedProductId.value = productId;\r\n      selectedView.value = 'product';\r\n      fetchProductPredictions();\r\n    };\r\n\r\n    // 计算统计指标\r\n    const calculateAverage = (data) => {\r\n      if (!data || data.length === 0) return 0;\r\n      return data.reduce((sum, val) => sum + val, 0) / data.length;\r\n    };\r\n\r\n    const calculateSum = (data) => {\r\n      if (!data || data.length === 0) return 0;\r\n      return data.reduce((sum, val) => sum + val, 0);\r\n    };\r\n\r\n    const calculateTrend = (data) => {\r\n      if (!data || data.length < 2) return 0;\r\n      const firstValue = data[0];\r\n      const lastValue = data[data.length - 1];\r\n      return ((lastValue - firstValue) / firstValue) * 100;\r\n    };\r\n\r\n    // 格式化日期\r\n    const formatDate = (dateString) => {\r\n      if (!dateString) return '未知日期';\r\n      try {\r\n        const date = new Date(dateString);\r\n        return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\r\n      } catch (e) {\r\n        return '日期格式错误';\r\n      }\r\n    };\r\n\r\n    return {\r\n      // 表单参数\r\n      merchantId,\r\n      selectedProductId,\r\n      daysToPredict,\r\n      selectedView,\r\n\r\n      // 状态控制\r\n      loading,\r\n      loadingProducts,\r\n      loadingMerchants,\r\n      error,\r\n      formError,\r\n      showResults,\r\n\r\n      // 数据\r\n      products,\r\n      merchants,\r\n      productOrders,\r\n      predictionData,\r\n\r\n      // 计算属性\r\n      isFormValid,\r\n      selectedProductName,\r\n      chartData,\r\n      chartOptions,\r\n\r\n      // 方法\r\n      fetchMerchants,\r\n      fetchProducts,\r\n      startPrediction,\r\n      viewProductPrediction,\r\n      calculateAverage,\r\n      calculateSum,\r\n      calculateTrend,\r\n      formatDate,\r\n  \r\n      selectProduct\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n/* 基础样式 */\r\n.sales-prediction-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  color: #333;\r\n}\r\n\r\n.page-title {\r\n  margin-bottom: 24px;\r\n  font-size: 28px;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  text-align: center;\r\n  position: relative;\r\n}\r\n\r\n.page-title::after {\r\n  content: '';\r\n  position: absolute;\r\n  bottom: -8px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 80px;\r\n  height: 3px;\r\n  background: linear-gradient(90deg, #3498db, #2980b9);\r\n  border-radius: 3px;\r\n}\r\n\r\n/* 卡片样式 */\r\n.card {\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\r\n  padding: 24px;\r\n  margin-bottom: 30px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.card:hover {\r\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.12);\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.card-header {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card-title {\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  margin-bottom: 8px;\r\n  color: #2c3e50;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.card-title i {\r\n  margin-right: 8px;\r\n  color: #3498db;\r\n}\r\n\r\n.card-subtitle {\r\n  font-size: 14px;\r\n  color: #7f8c8d;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n/* 表单样式 */\r\n.filters {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 24px;\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.form-group {\r\n  flex: 1;\r\n  min-width: 220px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: 600;\r\n  font-size: 14px;\r\n  color: #34495e;\r\n}\r\n\r\n.required {\r\n  color: #e74c3c;\r\n  margin-left: 4px;\r\n}\r\n\r\n.form-control {\r\n  width: 100%;\r\n  padding: 10px 12px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.form-control:focus {\r\n  border-color: #3498db;\r\n  box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.2);\r\n  outline: none;\r\n}\r\n\r\n.form-control::placeholder {\r\n  color: #bdc3c7;\r\n}\r\n\r\n.info-text {\r\n  font-size: 13px;\r\n  color: #7f8c8d;\r\n  margin-top: 5px;\r\n  font-style: italic;\r\n}\r\n\r\n.form-error {\r\n  background-color: #fdedec;\r\n  color: #e74c3c;\r\n  padding: 12px;\r\n  border-radius: 6px;\r\n  margin-top: 16px;\r\n  font-size: 14px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.form-error i {\r\n  margin-right: 8px;\r\n}\r\n\r\n.action-buttons {\r\n  display: flex;\r\n  gap: 16px;\r\n  margin-top: 24px;\r\n}\r\n\r\n.action-predict {\r\n  margin-top: 30px;\r\n}\r\n\r\n.btn {\r\n  padding: 10px 20px;\r\n  border-radius: 6px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  border: none;\r\n  font-size: 14px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.btn i {\r\n  margin-right: 8px;\r\n}\r\n\r\n.btn:disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n.btn-primary {\r\n  background-color: #3498db;\r\n  color: white;\r\n}\r\n\r\n.btn-primary:hover:not(:disabled) {\r\n  background-color: #2980b9;\r\n}\r\n\r\n.btn-outline {\r\n  background-color: transparent;\r\n  border: 1px solid #3498db;\r\n  color: #3498db;\r\n}\r\n\r\n.btn-outline:hover:not(:disabled) {\r\n  background-color: #f0f8ff;\r\n}\r\n\r\n.btn-sm {\r\n  padding: 6px 12px;\r\n  font-size: 13px;\r\n}\r\n\r\n/* 加载状态 */\r\n.loading-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 300px;\r\n}\r\n\r\n.spinner {\r\n  border: 4px solid #f3f3f3;\r\n  border-top: 4px solid #3498db;\r\n  border-radius: 50%;\r\n  width: 36px;\r\n  height: 36px;\r\n  animation: spin 1s linear infinite;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n/* 错误状态 */\r\n.error-container {\r\n  min-height: 200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  padding: 32px;\r\n}\r\n\r\n.alert {\r\n  width: 100%;\r\n  padding: 16px;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.alert-danger {\r\n  background-color: #fdedec;\r\n  color: #e74c3c;\r\n  border-left: 4px solid #e74c3c;\r\n}\r\n\r\n/* 图表区域 */\r\n.chart-container {\r\n  height: 400px;\r\n  margin-bottom: 30px;\r\n  border-radius: 8px;\r\n  padding: 16px;\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n/* 统计摘要 */\r\n.stats-container {\r\n  background-color: #f8fafc;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n}\r\n\r\n.stats-title {\r\n  margin-top: 0;\r\n  margin-bottom: 20px;\r\n  font-size: 18px;\r\n  color: #2c3e50;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.stats-title i {\r\n  margin-right: 8px;\r\n  color: #3498db;\r\n}\r\n\r\n.stats-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.stat-item {\r\n  padding: 16px;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);\r\n  transition: all 0.3s;\r\n}\r\n\r\n.stat-item:hover {\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.stat-label {\r\n  font-size: 14px;\r\n  color: #7f8c8d;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n}\r\n\r\n.stat-value.positive {\r\n  color: #27ae60;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.stat-value.negative {\r\n  color: #e74c3c;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.stat-value i {\r\n  margin-right: 6px;\r\n}\r\n\r\n/* 产品选择样式 */\r\n.product-selection-container {\r\n  margin-top: 20px;\r\n}\r\n\r\n.section-title {\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  margin-bottom: 16px;\r\n  color: #2c3e50;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.product-selection {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\r\n  gap: 16px;\r\n}\r\n\r\n.product-selection-item {\r\n  background-color: #f8fafc;\r\n  border: 1px solid #e2e8f0;\r\n  border-radius: 8px;\r\n  padding: 16px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 180px;\r\n}\r\n\r\n.product-selection-item:hover {\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\r\n  transform: translateY(-2px);\r\n  border-color: #cbd5e0;\r\n}\r\n\r\n.product-selection-item.selected {\r\n  border-color: #3498db;\r\n  background-color: rgba(52, 152, 219, 0.05);\r\n  box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.3);\r\n}\r\n\r\n.product-selection-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.product-title {\r\n  margin: 0;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n}\r\n\r\n.product-selection-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: auto;\r\n  padding-top: 8px;\r\n  border-top: 1px solid #edf2f7;\r\n}\r\n\r\n.product-id {\r\n  font-size: 13px;\r\n  color: #a0aec0;\r\n}\r\n\r\n.selection-indicator {\r\n  font-size: 13px;\r\n  color: #718096;\r\n}\r\n\r\n.selection-indicator .icon-check {\r\n  color: #3498db;\r\n  font-weight: bold;\r\n}\r\n\r\n/* 产品网格 */\r\n.product-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: 24px;\r\n}\r\n\r\n.product-item {\r\n  padding: 20px;\r\n  background-color: #f8fafc;\r\n  border-radius: 10px;\r\n  transition: all 0.3s;\r\n  border: 1px solid #ecf0f1;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.product-item:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);\r\n  border-color: #d0d7de;\r\n}\r\n\r\n.product-name {\r\n  margin-top: 0;\r\n  margin-bottom: 12px;\r\n  color: #2c3e50;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n}\r\n\r\n.product-description {\r\n  color: #7f8c8d;\r\n  margin-bottom: 16px;\r\n  line-height: 1.5;\r\n  font-size: 14px;\r\n  height: 42px;\r\n  overflow: hidden;\r\n}\r\n\r\n.product-price {\r\n  font-weight: 700;\r\n  color: #2c3e50;\r\n  margin-bottom: 16px;\r\n  font-size: 18px;\r\n}\r\n\r\n/* 订单列表 */\r\n.order-list {\r\n  overflow-x: auto;\r\n  margin-top: 10px;\r\n}\r\n\r\n.table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.table th, .table td {\r\n  padding: 12px 16px;\r\n  text-align: left;\r\n  border-bottom: 1px solid #ecf0f1;\r\n}\r\n\r\n.table th {\r\n  background-color: #f8fafc;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  font-size: 14px;\r\n}\r\n\r\n.table td {\r\n  font-size: 14px;\r\n}\r\n\r\n.table tr:hover {\r\n  background-color: #f8fafc;\r\n}\r\n\r\n.status-pending {\r\n  color: #f39c12;\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  background-color: rgba(243, 156, 18, 0.1);\r\n  font-weight: 600;\r\n  display: inline-block;\r\n}\r\n\r\n.status-processing {\r\n  color: #3498db;\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  background-color: rgba(52, 152, 219, 0.1);\r\n  font-weight: 600;\r\n  display: inline-block;\r\n}\r\n\r\n.status-shipped {\r\n  color: #9b59b6;\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  background-color: rgba(155, 89, 182, 0.1);\r\n  font-weight: 600;\r\n  display: inline-block;\r\n}\r\n\r\n.status-delivered {\r\n  color: #2ecc71;\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  background-color: rgba(46, 204, 113, 0.1);\r\n  font-weight: 600;\r\n  display: inline-block;\r\n}\r\n\r\n.status-completed {\r\n  color: #27ae60;\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  background-color: rgba(39, 174, 96, 0.1);\r\n  font-weight: 600;\r\n  display: inline-block;\r\n}\r\n\r\n.status-cancelled {\r\n  color: #e74c3c;\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  background-color: rgba(231, 76, 60, 0.1);\r\n  font-weight: 600;\r\n  display: inline-block;\r\n}\r\n\r\n.no-data {\r\n  text-align: center;\r\n  padding: 40px;\r\n  color: #7f8c8d;\r\n  font-style: italic;\r\n  font-size: 15px;\r\n  background-color: #f8fafc;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.no-data i {\r\n  margin-right: 8px;\r\n  color: #3498db;\r\n}\r\n\r\n.view-more {\r\n  text-align: right;\r\n  margin-top: 16px;\r\n}\r\n\r\n/* 图标样式 */\r\n[class^=\"icon-\"] {\r\n  font-family: \"Font Awesome 5 Free\", Arial, sans-serif;\r\n  font-weight: 900;\r\n  font-style: normal;\r\n}\r\n\r\n.icon-settings::before { content: \"⚙️\"; }\r\n.icon-chart::before { content: \"📊\"; }\r\n.icon-refresh::before { content: \"🔄\"; }\r\n.icon-error::before { content: \"⚠️\"; }\r\n.icon-info::before { content: \"ℹ️\"; }\r\n.icon-analytics::before { content: \"📈\"; }\r\n.icon-trending-up::before { content: \"📈\"; }\r\n.icon-trending-down::before { content: \"📉\"; }\r\n.icon-products::before { content: \"📦\"; }\r\n.icon-history::before { content: \"🕒\"; }\r\n.icon-more::before { content: \"👉\"; }\r\n.icon-check::before { content: \"✓\"; }\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .filters {\r\n    flex-direction: column;\r\n    gap: 16px;\r\n  }\r\n\r\n  .form-group {\r\n    width: 100%;\r\n  }\r\n\r\n  .action-buttons {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .stats-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  .product-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  .product-selection {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";;;;AAqQA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,QAAO,QAAS,KAAK;AAC7C,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,KAAK,EAAEC,aAAY,QAAS,UAAU;AAC/C,SAASC,IAAG,QAAS,aAAa;;AAElC;AACAF,KAAK,CAACG,QAAQ,CAAC,GAAGF,aAAa,CAAC;AAEhC,eAAe;EACbG,IAAI,EAAE,qBAAqB;EAC3BC,UAAU,EAAE;IACVH;EACF,CAAC;EACDI,KAAKA,CAAA,EAAG;IACN;IACA,MAAMC,UAAS,GAAIX,GAAG,CAAC,IAAI,CAAC;IAC5B,MAAMY,iBAAgB,GAAIZ,GAAG,CAAC,IAAI,CAAC;IACnC,MAAMa,aAAY,GAAIb,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMc,YAAW,GAAId,GAAG,CAAC,KAAK,CAAC;;IAE/B;IACA,MAAMe,OAAM,GAAIf,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMgB,eAAc,GAAIhB,GAAG,CAAC,KAAK,CAAC;IAClC,MAAMiB,gBAAe,GAAIjB,GAAG,CAAC,KAAK,CAAC;IACnC,MAAMkB,KAAI,GAAIlB,GAAG,CAAC,IAAI,CAAC;IACvB,MAAMmB,SAAQ,GAAInB,GAAG,CAAC,IAAI,CAAC;IAC3B,MAAMoB,WAAU,GAAIpB,GAAG,CAAC,KAAK,CAAC;;IAE9B;IACA,MAAMqB,QAAO,GAAIrB,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMsB,SAAQ,GAAItB,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMuB,aAAY,GAAIvB,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMwB,cAAa,GAAIvB,QAAQ,CAAC;MAC9BwB,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE;IACf,CAAC,CAAC;;IAEF;IACA,MAAMC,WAAU,GAAIzB,QAAQ,CAAC,MAAM;MACjC,IAAI,CAACS,UAAU,CAACiB,KAAK,EAAE,OAAO,KAAK;MACnC,IAAId,YAAY,CAACc,KAAI,KAAM,SAAQ,IAAK,CAAChB,iBAAiB,CAACgB,KAAK,EAAE,OAAO,KAAK;MAC9E,OAAO,IAAI;IACb,CAAC,CAAC;IAEF,MAAMC,mBAAkB,GAAI3B,QAAQ,CAAC,MAAM;MACzC,IAAI,CAACU,iBAAiB,CAACgB,KAAK,EAAE,OAAO,EAAE;MACvC,MAAME,OAAM,GAAIT,QAAQ,CAACO,KAAK,CAACG,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACC,SAAQ,KAAMrB,iBAAiB,CAACgB,KAAK,CAAC;MACjF,OAAOE,OAAM,GAAIA,OAAO,CAACI,WAAU,GAAI,EAAE;IAC3C,CAAC,CAAC;;IAEF;IACA,MAAMC,SAAQ,GAAIjC,QAAQ,CAAC,MAAM;MAC/B,OAAO;QACLkC,MAAM,EAAEZ,cAAc,CAACC,KAAK;QAC5BY,QAAQ,EAAE,CAAC;UACTC,KAAK,EAAExB,YAAY,CAACc,KAAI,KAAM,KAAI,GAAI,UAAS,GAC1CC,mBAAmB,CAACD,KAAI,GAAI,GAAGC,mBAAmB,CAACD,KAAK,OAAM,GAAI,OAAOhB,iBAAiB,CAACgB,KAAK,OAAQ;UAC7GW,eAAe,EAAE,yBAAyB;UAC1CC,WAAW,EAAE,uBAAuB;UACpCC,oBAAoB,EAAE,uBAAuB;UAC7CC,gBAAgB,EAAE,MAAM;UACxBC,yBAAyB,EAAE,MAAM;UACjCC,qBAAqB,EAAE,uBAAuB;UAC9CC,WAAW,EAAE,CAAC;UACdC,OAAO,EAAE,GAAG;UACZC,IAAI,EAAEvB,cAAc,CAACE;QACvB,CAAC;MACH,CAAC;IACH,CAAC,CAAC;;IAEF;IACA,MAAMsB,YAAW,GAAI;MACnBC,UAAU,EAAE,IAAI;MAChBC,mBAAmB,EAAE,KAAK;MAC1BC,MAAM,EAAE;QACNC,CAAC,EAAE;UACDC,WAAW,EAAE,KAAK;UAClBC,KAAK,EAAE;YACLC,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE,UAAU;YAChBC,IAAI,EAAE;cACJC,IAAI,EAAE,EAAE;cACRC,MAAM,EAAE;YACV;UACF,CAAC;UACDC,IAAI,EAAE;YACJC,KAAK,EAAE;UACT;QACF,CAAC;QACDC,CAAC,EAAE;UACDR,KAAK,EAAE;YACLC,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE,IAAI;YACVC,IAAI,EAAE;cACJC,IAAI,EAAE,EAAE;cACRC,MAAM,EAAE;YACV;UACF,CAAC;UACDC,IAAI,EAAE;YACJC,KAAK,EAAE;UACT;QACF;MACF,CAAC;MACDE,OAAO,EAAE;QACPC,OAAO,EAAE;UACPzB,eAAe,EAAE,oBAAoB;UACrC0B,SAAS,EAAE;YACTP,IAAI,EAAE;UACR,CAAC;UACDQ,QAAQ,EAAE;YACRR,IAAI,EAAE;UACR,CAAC;UACDS,SAAS,EAAE;YACT7B,KAAK,EAAE,SAAAA,CAAS8B,OAAO,EAAE;cACvB,OAAO,SAASA,OAAO,CAACC,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC,EAAE;YAC1C;UACF;QACF,CAAC;QACDC,MAAM,EAAE;UACNC,QAAQ,EAAE,KAAK;UACfpC,MAAM,EAAE;YACNqB,IAAI,EAAE;cACJC,IAAI,EAAE;YACR;UACF;QACF;MACF;IACF,CAAC;;IAED;IACA,MAAMe,cAAa,GAAI,MAAAA,CAAA,KAAY;MACjCxD,gBAAgB,CAACW,KAAI,GAAI,IAAI;MAC7B,IAAI;QACF,MAAM8C,QAAO,GAAI,MAAMvE,KAAK,CAACwE,GAAG,CAAC,qCAAqC,CAAC;QACvErD,SAAS,CAACM,KAAI,GAAI8C,QAAQ,CAAC3B,IAAI;MACjC,EAAE,OAAO6B,GAAG,EAAE;QACZC,OAAO,CAAC3D,KAAK,CAAC,WAAW,EAAE0D,GAAG,CAAC;MACjC,UAAU;QACR3D,gBAAgB,CAACW,KAAI,GAAI,KAAK;MAChC;IACF,CAAC;;IAED;IACA,MAAMkD,2BAA0B,GAAI,MAAAA,CAAA,KAAY;MAC9C/D,OAAO,CAACa,KAAI,GAAI,IAAI;MACpBV,KAAK,CAACU,KAAI,GAAI,IAAI;MAElB,IAAI;QACFiD,OAAO,CAACE,GAAG,CAAC,SAAS,EAAE,iDAAiDpE,UAAU,CAACiB,KAAK,EAAE,CAAC;QAC3F,MAAM8C,QAAO,GAAI,MAAMvE,KAAK,CAACwE,GAAG,CAAC,iDAAiDhE,UAAU,CAACiB,KAAK,EAAE,CAAC;QACrGiD,OAAO,CAACE,GAAG,CAAC,WAAW,EAAEL,QAAQ,CAAC;;QAElC;QACAlD,cAAc,CAACC,KAAI,GAAIiD,QAAQ,CAAC3B,IAAI,CAACtB,KAAK;QAC1CD,cAAc,CAACE,WAAU,GAAIgD,QAAQ,CAAC3B,IAAI,CAACrB,WAAW;;QAEtD;QACAN,WAAW,CAACQ,KAAI,GAAI,IAAI;MAC1B,EAAE,OAAOgD,GAAG,EAAE;QACZC,OAAO,CAAC3D,KAAK,CAAC,WAAW,EAAE0D,GAAG,CAAC;QAC/B1D,KAAK,CAACU,KAAI,GAAIgD,GAAG,CAACF,QAAQ,EAAE3B,IAAI,EAAEiC,OAAM,IAAK,sBAAsB;MACrE,UAAU;QACRjE,OAAO,CAACa,KAAI,GAAI,KAAK;MACvB;IACF,CAAC;;IAED;IACA,MAAMqD,uBAAsB,GAAI,MAAAA,CAAA,KAAY;MAC1C,IAAI,CAACrE,iBAAiB,CAACgB,KAAK,EAAE;QAC5BV,KAAK,CAACU,KAAI,GAAI,WAAW;QACzB;MACF;MAEAb,OAAO,CAACa,KAAI,GAAI,IAAI;MACpBV,KAAK,CAACU,KAAI,GAAI,IAAI;MAElB,IAAI;QACFiD,OAAO,CAACE,GAAG,CAAC,WAAW,EAAE,4DAA4DpE,UAAU,CAACiB,KAAK,IAAIhB,iBAAiB,CAACgB,KAAK,IAAIf,aAAa,CAACe,KAAK,EAAE,CAAC;QAC1J,MAAM8C,QAAO,GAAI,MAAMvE,KAAK,CAACwE,GAAG,CAC5B,4DAA4DhE,UAAU,CAACiB,KAAK,IAAIhB,iBAAiB,CAACgB,KAAK,IAAIf,aAAa,CAACe,KAAK,EAClI,CAAC;QACDiD,OAAO,CAACE,GAAG,CAAC,WAAW,EAAEL,QAAQ,CAAC;;QAElC;QACAlD,cAAc,CAACC,KAAI,GAAIiD,QAAQ,CAAC3B,IAAI,CAACtB,KAAK;QAC1CD,cAAc,CAACE,WAAU,GAAIgD,QAAQ,CAAC3B,IAAI,CAACrB,WAAW;;QAEtD;QACA,MAAMwD,kBAAkB,CAAC,CAAC;;QAE1B;QACA9D,WAAW,CAACQ,KAAI,GAAI,IAAI;MAC1B,EAAE,OAAOgD,GAAG,EAAE;QACZC,OAAO,CAAC3D,KAAK,CAAC,aAAa,EAAE0D,GAAG,CAAC;QACjC1D,KAAK,CAACU,KAAI,GAAIgD,GAAG,CAACF,QAAQ,EAAE3B,IAAI,EAAEiC,OAAM,IAAK,YAAY;MAC3D,UAAU;QACRjE,OAAO,CAACa,KAAI,GAAI,KAAK;MACvB;IACF,CAAC;;IAED;IACA,MAAMuD,aAAY,GAAI,MAAAA,CAAA,KAAY;MAChCN,OAAO,CAACE,GAAG,CAAC,gBAAgB,EAAEpE,UAAU,CAACiB,KAAK,CAAC;MAE/C,IAAI,CAACjB,UAAU,CAACiB,KAAK,EAAE;QACrBT,SAAS,CAACS,KAAI,GAAI,QAAQ;QAC1B;MACF;MAEAZ,eAAe,CAACY,KAAI,GAAI,IAAI;MAC5BT,SAAS,CAACS,KAAI,GAAI,IAAI;MAEtB,IAAI;QACFiD,OAAO,CAACE,GAAG,CAAC,QAAQ,EAAE,oCAAoC,CAAC;QAC3D,MAAML,QAAO,GAAI,MAAMvE,KAAK,CAACwE,GAAG,CAAC,oCAAoC,EAAE;UACrES,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,QAAQ,EAAE;UACZ;QACF,CAAC,CAAC;QAEFP,OAAO,CAACE,GAAG,CAAC,WAAW,EAAEL,QAAQ,CAAC;QAElC,IAAI,CAACA,QAAQ,CAAC3B,IAAG,IAAK,CAACsC,KAAK,CAACC,OAAO,CAACZ,QAAQ,CAAC3B,IAAI,CAAC,EAAE;UACnD8B,OAAO,CAAC3D,KAAK,CAAC,YAAY,EAAEwD,QAAQ,CAAC3B,IAAI,CAAC;UAC1C,MAAM,IAAIwC,KAAK,CAAC,YAAY,CAAC;QAC/B;QAEA,MAAMC,GAAE,GAAIC,QAAQ,CAAC9E,UAAU,CAACiB,KAAK,EAAE,EAAE,CAAC;QAC1C,MAAM8D,gBAAe,GAAIhB,QAAQ,CAAC3B,IAAI,CAAC4C,MAAM,CAAC7D,OAAM,IAAK2D,QAAQ,CAAC3D,OAAO,CAACnB,UAAU,EAAE,EAAE,MAAM6E,GAAG,CAAC;QAElGX,OAAO,CAACE,GAAG,CAAC,WAAW,EAAEW,gBAAgB,CAAC;QAE1C,IAAIA,gBAAgB,CAACE,MAAK,KAAM,CAAC,EAAE;UACjCvE,QAAQ,CAACO,KAAI,GAAI8C,QAAQ,CAAC3B,IAAI;UAC9B5B,SAAS,CAACS,KAAI,GAAI,mBAAmB;QACvC,OAAO;UACLP,QAAQ,CAACO,KAAI,GAAI8D,gBAAgB;QACnC;QAEA,IAAIA,gBAAgB,CAACE,MAAK,KAAM,CAAC,EAAE;UACjCC,aAAa,CAACH,gBAAgB,CAAC,CAAC,CAAC,CAACzD,SAAS,CAAC;QAC9C,OAAO;UACLrB,iBAAiB,CAACgB,KAAI,GAAI,IAAI;QAChC;MACF,EAAE,OAAOgD,GAAG,EAAE;QACZC,OAAO,CAAC3D,KAAK,CAAC,WAAW,EAAE0D,GAAG,CAAC;QAC/BzD,SAAS,CAACS,KAAI,GAAI,aAAagD,GAAG,CAACI,OAAM,IAAK,eAAe,EAAE;MACjE,UAAU;QACRhE,eAAe,CAACY,KAAI,GAAI,KAAK;MAC/B;IACF,CAAC;;IAED;IACA,MAAMiE,aAAY,GAAK5D,SAAS,IAAK;MACnCrB,iBAAiB,CAACgB,KAAI,GAAIK,SAAS;MACnCd,SAAS,CAACS,KAAI,GAAI,IAAI;IACxB,CAAC;;IAED;IACA,MAAMsD,kBAAiB,GAAI,MAAAA,CAAA,KAAY;MACrC,IAAI;QACFL,OAAO,CAACE,GAAG,CAAC,SAAS,EAAE,oCAAoCpE,UAAU,CAACiB,KAAK,EAAE,CAAC;QAC9E,MAAM8C,QAAO,GAAI,MAAMvE,KAAK,CAACwE,GAAG,CAAC,oCAAoChE,UAAU,CAACiB,KAAK,EAAE,CAAC;QACxFiD,OAAO,CAACE,GAAG,CAAC,SAAS,EAAEL,QAAQ,CAAC;QAEhCnD,aAAa,CAACK,KAAI,GAAI8C,QAAQ,CAAC3B,IAAI,CAAC4C,MAAM,CAACG,KAAI,IAAKA,KAAK,CAACnF,UAAS,KAAMA,UAAU,CAACiB,KAAK,CAAC;MAC5F,EAAE,OAAOgD,GAAG,EAAE;QACZC,OAAO,CAAC3D,KAAK,CAAC,WAAW,EAAE0D,GAAG,CAAC;QAC/BrD,aAAa,CAACK,KAAI,GAAI,EAAE;MAC1B;IACF,CAAC;;IAED;IACA,MAAMmE,eAAc,GAAIA,CAAA,KAAM;MAC5B5E,SAAS,CAACS,KAAI,GAAI,IAAI;MAEtB,IAAI,CAACjB,UAAU,CAACiB,KAAK,EAAE;QACrBT,SAAS,CAACS,KAAI,GAAI,OAAO;QACzB;MACF;MAEA,IAAId,YAAY,CAACc,KAAI,KAAM,SAAQ,IAAK,CAAChB,iBAAiB,CAACgB,KAAK,EAAE;QAChET,SAAS,CAACS,KAAI,GAAI,WAAW;QAC7B;MACF;MAEA,IAAId,YAAY,CAACc,KAAI,KAAM,KAAK,EAAE;QAChCkD,2BAA2B,CAAC,CAAC;MAC/B,OAAO;QACLG,uBAAuB,CAAC,CAAC;MAC3B;IACF,CAAC;;IAED;IACA,MAAMe,qBAAoB,GAAK/D,SAAS,IAAK;MAC3CrB,iBAAiB,CAACgB,KAAI,GAAIK,SAAS;MACnCnB,YAAY,CAACc,KAAI,GAAI,SAAS;MAC9BqD,uBAAuB,CAAC,CAAC;IAC3B,CAAC;;IAED;IACA,MAAMgB,gBAAe,GAAKlD,IAAI,IAAK;MACjC,IAAI,CAACA,IAAG,IAAKA,IAAI,CAAC6C,MAAK,KAAM,CAAC,EAAE,OAAO,CAAC;MACxC,OAAO7C,IAAI,CAACmD,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAE,GAAIC,GAAG,EAAE,CAAC,IAAIrD,IAAI,CAAC6C,MAAM;IAC9D,CAAC;IAED,MAAMS,YAAW,GAAKtD,IAAI,IAAK;MAC7B,IAAI,CAACA,IAAG,IAAKA,IAAI,CAAC6C,MAAK,KAAM,CAAC,EAAE,OAAO,CAAC;MACxC,OAAO7C,IAAI,CAACmD,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAE,GAAIC,GAAG,EAAE,CAAC,CAAC;IAChD,CAAC;IAED,MAAME,cAAa,GAAKvD,IAAI,IAAK;MAC/B,IAAI,CAACA,IAAG,IAAKA,IAAI,CAAC6C,MAAK,GAAI,CAAC,EAAE,OAAO,CAAC;MACtC,MAAMW,UAAS,GAAIxD,IAAI,CAAC,CAAC,CAAC;MAC1B,MAAMyD,SAAQ,GAAIzD,IAAI,CAACA,IAAI,CAAC6C,MAAK,GAAI,CAAC,CAAC;MACvC,OAAQ,CAACY,SAAQ,GAAID,UAAU,IAAIA,UAAU,GAAI,GAAG;IACtD,CAAC;;IAED;IACA,MAAME,UAAS,GAAKC,UAAU,IAAK;MACjC,IAAI,CAACA,UAAU,EAAE,OAAO,MAAM;MAC9B,IAAI;QACF,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU,CAAC;QACjC,OAAO,GAAGC,IAAI,CAACE,WAAW,CAAC,CAAC,IAAIC,MAAM,CAACH,IAAI,CAACI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIF,MAAM,CAACH,IAAI,CAACM,OAAO,CAAC,CAAC,CAAC,CAACD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;MAC3H,EAAE,OAAOE,CAAC,EAAE;QACV,OAAO,QAAQ;MACjB;IACF,CAAC;IAED,OAAO;MACL;MACAvG,UAAU;MACVC,iBAAiB;MACjBC,aAAa;MACbC,YAAY;MAEZ;MACAC,OAAO;MACPC,eAAe;MACfC,gBAAgB;MAChBC,KAAK;MACLC,SAAS;MACTC,WAAW;MAEX;MACAC,QAAQ;MACRC,SAAS;MACTC,aAAa;MACbC,cAAc;MAEd;MACAG,WAAW;MACXE,mBAAmB;MACnBM,SAAS;MACTa,YAAY;MAEZ;MACAyB,cAAc;MACdU,aAAa;MACbY,eAAe;MACfC,qBAAqB;MACrBC,gBAAgB;MAChBI,YAAY;MACZC,cAAc;MACdG,UAAU;MAEVZ;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}