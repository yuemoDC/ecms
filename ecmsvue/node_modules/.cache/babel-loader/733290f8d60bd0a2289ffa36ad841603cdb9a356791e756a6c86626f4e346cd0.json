{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, reactive, onMounted, onUnmounted, nextTick } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport { Refresh } from '@element-plus/icons-vue';\nimport * as echarts from 'echarts';\nimport axios from 'axios';\nexport default {\n  name: 'AdminDataVisualizationView',\n  components: {\n    Refresh\n  },\n  setup() {\n    // 图表引用\n    const salesTrendChart = ref(null);\n    const merchantRankingChart = ref(null);\n    const productRankingChart = ref(null);\n    const regionalDistributionChart = ref(null);\n    const orderStatusDistributionChart = ref(null);\n\n    // 图表实例\n    let salesTrendChartInstance = null;\n    let merchantRankingChartInstance = null;\n    let productRankingChartInstance = null;\n    let regionalDistributionChartInstance = null;\n    let orderStatusDistributionChartInstance = null;\n\n    // 数据状态\n    const loading = reactive({\n      dashboard: false,\n      salesTrend: false,\n      merchantRanking: false,\n      productRanking: false,\n      regionalDistribution: false,\n      orderStatusDistribution: false\n    });\n    const timeFilter = ref('monthly');\n    const salesOverview = reactive({\n      totalSales: 0,\n      totalOrders: 0,\n      avgOrderValue: 0,\n      pendingOrders: 0,\n      completedOrders: 0,\n      recentSales: 0,\n      merchantCount: 0,\n      activeMerchantCount: 0\n    });\n\n    // 初始化图表\n    const initCharts = () => {\n      // 销售趋势图\n      salesTrendChartInstance = echarts.init(salesTrendChart.value);\n\n      // 商家销售排行图\n      merchantRankingChartInstance = echarts.init(merchantRankingChart.value);\n\n      // 产品销售排行图\n      productRankingChartInstance = echarts.init(productRankingChart.value);\n\n      // 区域销售分布图\n      regionalDistributionChartInstance = echarts.init(regionalDistributionChart.value);\n\n      // 订单状态分布图\n      orderStatusDistributionChartInstance = echarts.init(orderStatusDistributionChart.value);\n\n      // 监听窗口大小变化，调整图表大小\n      window.addEventListener('resize', handleResize);\n    };\n\n    // 处理窗口大小变化\n    const handleResize = () => {\n      salesTrendChartInstance && salesTrendChartInstance.resize();\n      merchantRankingChartInstance && merchantRankingChartInstance.resize();\n      productRankingChartInstance && productRankingChartInstance.resize();\n      regionalDistributionChartInstance && regionalDistributionChartInstance.resize();\n      orderStatusDistributionChartInstance && orderStatusDistributionChartInstance.resize();\n    };\n\n    // 获取仪表板数据\n    const fetchDashboardData = async () => {\n      try {\n        loading.dashboard = true;\n        const response = await axios.get(`/api/admin/data-visualization/dashboard?period=${timeFilter.value}`);\n        const dashboardData = response.data;\n\n        // 更新销售概览数据\n        Object.assign(salesOverview, dashboardData.salesOverview);\n\n        // 更新各个图表\n        renderSalesTrendChart(dashboardData.salesTrend);\n        renderMerchantRankingChart(dashboardData.merchantRanking);\n        renderProductRankingChart(dashboardData.productRanking);\n        renderRegionalDistributionChart(dashboardData.regionalDistribution);\n        renderOrderStatusDistributionChart(dashboardData.orderStatusDistribution);\n      } catch (error) {\n        console.error('获取仪表板数据失败', error);\n        ElMessage.error('获取仪表板数据失败');\n      } finally {\n        loading.dashboard = false;\n      }\n    };\n\n    // 单独获取销售趋势数据\n    const fetchSalesTrendData = async () => {\n      try {\n        loading.salesTrend = true;\n        const response = await axios.get(`/api/admin/data-visualization/sales-trend?period=${timeFilter.value}`);\n        renderSalesTrendChart(response.data);\n      } catch (error) {\n        console.error('获取销售趋势数据失败', error);\n        ElMessage.error('获取销售趋势数据失败');\n      } finally {\n        loading.salesTrend = false;\n      }\n    };\n\n    // 单独获取商家销售排行数据\n    const fetchMerchantRankingData = async () => {\n      try {\n        loading.merchantRanking = true;\n        const response = await axios.get('/api/admin/data-visualization/merchant-ranking');\n        renderMerchantRankingChart(response.data);\n      } catch (error) {\n        console.error('获取商家销售排行数据失败', error);\n        ElMessage.error('获取商家销售排行数据失败');\n      } finally {\n        loading.merchantRanking = false;\n      }\n    };\n\n    // 单独获取产品销售排行数据\n    const fetchProductRankingData = async () => {\n      try {\n        loading.productRanking = true;\n        const response = await axios.get('/api/admin/data-visualization/product-ranking');\n        renderProductRankingChart(response.data);\n      } catch (error) {\n        console.error('获取产品销售排行数据失败', error);\n        ElMessage.error('获取产品销售排行数据失败');\n      } finally {\n        loading.productRanking = false;\n      }\n    };\n\n    // 单独获取区域销售分布数据\n    const fetchRegionalDistributionData = async () => {\n      try {\n        loading.regionalDistribution = true;\n        const response = await axios.get('/api/admin/data-visualization/regional-distribution');\n        renderRegionalDistributionChart(response.data);\n      } catch (error) {\n        console.error('获取区域销售分布数据失败', error);\n        ElMessage.error('获取区域销售分布数据失败');\n      } finally {\n        loading.regionalDistribution = false;\n      }\n    };\n\n    // 单独获取订单状态分布数据\n    const fetchOrderStatusDistributionData = async () => {\n      try {\n        loading.orderStatusDistribution = true;\n        const response = await axios.get('/api/admin/data-visualization/order-status');\n        renderOrderStatusDistributionChart(response.data);\n      } catch (error) {\n        console.error('获取订单状态分布数据失败', error);\n        ElMessage.error('获取订单状态分布数据失败');\n      } finally {\n        loading.orderStatusDistribution = false;\n      }\n    };\n\n    // 渲染销售趋势图\n    const renderSalesTrendChart = data => {\n      const option = {\n        title: {\n          text: data.title || '平台销售趋势',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis',\n          formatter: '{b}: {c} 元'\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          data: data.xAxis || []\n        },\n        yAxis: {\n          type: 'value',\n          name: '销售额(元)'\n        },\n        series: [{\n          name: '销售额',\n          type: 'line',\n          data: data.series || [],\n          smooth: true,\n          areaStyle: {},\n          itemStyle: {\n            color: '#409EFF'\n          }\n        }]\n      };\n      salesTrendChartInstance.setOption(option);\n    };\n\n    // 渲染商家销售排行图\n    const renderMerchantRankingChart = data => {\n      const option = {\n        title: {\n          text: data.title || '商家销售排行',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          },\n          formatter: '{b}: {c} 元'\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'value',\n          name: '销售额(元)'\n        },\n        yAxis: {\n          type: 'category',\n          data: data.merchantNames || [],\n          axisLabel: {\n            interval: 0,\n            rotate: 30\n          }\n        },\n        series: [{\n          name: '销售额',\n          type: 'bar',\n          data: data.salesValues || [],\n          itemStyle: {\n            color: function (params) {\n              const colorList = ['#409EFF', '#67C23A', '#E6A23C', '#F56C6C', '#909399'];\n              return colorList[params.dataIndex % colorList.length];\n            }\n          }\n        }]\n      };\n      merchantRankingChartInstance.setOption(option);\n    };\n\n    // 渲染产品销售排行图\n    const renderProductRankingChart = data => {\n      const option = {\n        title: {\n          text: data.title || '产品销售排行',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          },\n          formatter: '{b}: {c} 元'\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'value',\n          name: '销售额(元)'\n        },\n        yAxis: {\n          type: 'category',\n          data: data.productNames || [],\n          axisLabel: {\n            interval: 0,\n            rotate: 30\n          }\n        },\n        series: [{\n          name: '销售额',\n          type: 'bar',\n          data: data.salesValues || [],\n          itemStyle: {\n            color: function (params) {\n              const colorList = ['#67C23A', '#409EFF', '#E6A23C', '#F56C6C', '#909399'];\n              return colorList[params.dataIndex % colorList.length];\n            }\n          }\n        }]\n      };\n      productRankingChartInstance.setOption(option);\n    };\n\n    // 渲染区域销售分布图\n    const renderRegionalDistributionChart = data => {\n      const option = {\n        title: {\n          text: data.title || '区域销售分布',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{b}: {c} 元 ({d}%)'\n        },\n        legend: {\n          type: 'scroll',\n          orient: 'vertical',\n          right: 10,\n          top: 20,\n          bottom: 20\n        },\n        series: [{\n          name: '区域销售',\n          type: 'pie',\n          radius: '55%',\n          center: ['40%', '50%'],\n          data: data.regions ? data.regions.map((region, index) => {\n            return {\n              name: region,\n              value: data.values[index]\n            };\n          }) : [],\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      };\n      regionalDistributionChartInstance.setOption(option);\n    };\n\n    // 渲染订单状态分布图\n    const renderOrderStatusDistributionChart = data => {\n      const option = {\n        title: {\n          text: data.title || '订单状态分布',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 10,\n          top: 'center'\n        },\n        series: [{\n          name: '订单状态',\n          type: 'pie',\n          radius: ['40%', '70%'],\n          avoidLabelOverlap: false,\n          label: {\n            show: false,\n            position: 'center'\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: '18',\n              fontWeight: 'bold'\n            }\n          },\n          labelLine: {\n            show: false\n          },\n          data: data.data || []\n        }]\n      };\n      orderStatusDistributionChartInstance.setOption(option);\n    };\n\n    // 格式化货币\n    const formatCurrency = value => {\n      if (value === undefined || value === null) return '¥0.00';\n      return '¥' + parseFloat(value).toFixed(2);\n    };\n\n    // 组件挂载\n    onMounted(async () => {\n      await nextTick();\n      initCharts();\n      fetchDashboardData();\n    });\n\n    // 组件卸载\n    onUnmounted(() => {\n      // 销毁图表实例，避免内存泄漏\n      salesTrendChartInstance && salesTrendChartInstance.dispose();\n      merchantRankingChartInstance && merchantRankingChartInstance.dispose();\n      productRankingChartInstance && productRankingChartInstance.dispose();\n      regionalDistributionChartInstance && regionalDistributionChartInstance.dispose();\n      orderStatusDistributionChartInstance && orderStatusDistributionChartInstance.dispose();\n\n      // 移除窗口大小变化监听\n      window.removeEventListener('resize', handleResize);\n    });\n    return {\n      salesTrendChart,\n      merchantRankingChart,\n      productRankingChart,\n      regionalDistributionChart,\n      orderStatusDistributionChart,\n      loading,\n      timeFilter,\n      salesOverview,\n      fetchDashboardData,\n      formatCurrency\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","onUnmounted","nextTick","ElMessage","Refresh","echarts","axios","name","components","setup","salesTrendChart","merchantRankingChart","productRankingChart","regionalDistributionChart","orderStatusDistributionChart","salesTrendChartInstance","merchantRankingChartInstance","productRankingChartInstance","regionalDistributionChartInstance","orderStatusDistributionChartInstance","loading","dashboard","salesTrend","merchantRanking","productRanking","regionalDistribution","orderStatusDistribution","timeFilter","salesOverview","totalSales","totalOrders","avgOrderValue","pendingOrders","completedOrders","recentSales","merchantCount","activeMerchantCount","initCharts","init","value","window","addEventListener","handleResize","resize","fetchDashboardData","response","get","dashboardData","data","Object","assign","renderSalesTrendChart","renderMerchantRankingChart","renderProductRankingChart","renderRegionalDistributionChart","renderOrderStatusDistributionChart","error","console","fetchSalesTrendData","fetchMerchantRankingData","fetchProductRankingData","fetchRegionalDistributionData","fetchOrderStatusDistributionData","option","title","text","left","tooltip","trigger","formatter","grid","right","bottom","containLabel","xAxis","type","yAxis","series","smooth","areaStyle","itemStyle","color","setOption","axisPointer","merchantNames","axisLabel","interval","rotate","salesValues","params","colorList","dataIndex","length","productNames","legend","orient","top","radius","center","regions","map","region","index","values","emphasis","shadowBlur","shadowOffsetX","shadowColor","avoidLabelOverlap","label","show","position","fontSize","fontWeight","labelLine","formatCurrency","undefined","parseFloat","toFixed","dispose","removeEventListener"],"sources":["E:\\shixun\\420\\ecms\\ecmsvue\\src\\views\\AdminDataVisualizationView.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-visualization-view\">\r\n    <div class=\"view-header\">\r\n      <el-breadcrumb separator=\"/\">\r\n        <el-breadcrumb-item :to=\"{ path: '/admin' }\">首页</el-breadcrumb-item>\r\n        <el-breadcrumb-item>数据分析</el-breadcrumb-item>\r\n        <el-breadcrumb-item>平台数据可视化</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n      <h2>平台数据可视化</h2>\r\n    </div>\r\n\r\n    <div class=\"admin-visualization-dashboard\">\r\n      <div class=\"dashboard-header\">\r\n        <h1>平台数据分析仪表板</h1>\r\n\r\n        <div class=\"toolbar\">\r\n          <el-select v-model=\"timeFilter\" placeholder=\"选择时间周期\" @change=\"fetchDashboardData\">\r\n            <el-option label=\"每日\" value=\"daily\"></el-option>\r\n            <el-option label=\"每周\" value=\"weekly\"></el-option>\r\n            <el-option label=\"每月\" value=\"monthly\"></el-option>\r\n          </el-select>\r\n\r\n          <el-button type=\"primary\" @click=\"fetchDashboardData\" :loading=\"loading.dashboard\">\r\n            <el-icon><Refresh /></el-icon> 刷新数据\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 销售概览卡片 -->\r\n      <el-row :gutter=\"20\" class=\"dashboard-cards\">\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>总销售额</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2>{{ formatCurrency(salesOverview.totalSales) }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>总订单数</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2>{{ salesOverview.totalOrders || 0 }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>平均订单金额</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2>{{ formatCurrency(salesOverview.avgOrderValue) }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>最近30天销售额</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2>{{ formatCurrency(salesOverview.recentSales) }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>商家总数</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2>{{ salesOverview.merchantCount || 0 }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>活跃商家</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2>{{ salesOverview.activeMerchantCount || 0 }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 图表区域 -->\r\n      <el-row :gutter=\"20\" class=\"dashboard-charts\">\r\n        <!-- 销售趋势图 -->\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>平台销售趋势</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.salesTrend\">\r\n              <div ref=\"salesTrendChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <!-- 商家销售排行图 -->\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>商家销售排行</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.merchantRanking\">\r\n              <div ref=\"merchantRankingChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <!-- 产品销售排行图 -->\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>产品销售排行</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.productRanking\">\r\n              <div ref=\"productRankingChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <!-- 区域销售分布图 -->\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>区域销售分布</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.regionalDistribution\">\r\n              <div ref=\"regionalDistributionChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <!-- 订单状态分布图 -->\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>订单状态分布</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.orderStatusDistribution\">\r\n              <div ref=\"orderStatusDistributionChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted, onUnmounted, nextTick } from 'vue';\r\nimport { ElMessage } from 'element-plus';\r\nimport { Refresh } from '@element-plus/icons-vue';\r\nimport * as echarts from 'echarts';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'AdminDataVisualizationView',\r\n  components: {\r\n    Refresh\r\n  },\r\n  setup() {\r\n    // 图表引用\r\n    const salesTrendChart = ref(null);\r\n    const merchantRankingChart = ref(null);\r\n    const productRankingChart = ref(null);\r\n    const regionalDistributionChart = ref(null);\r\n    const orderStatusDistributionChart = ref(null);\r\n\r\n    // 图表实例\r\n    let salesTrendChartInstance = null;\r\n    let merchantRankingChartInstance = null;\r\n    let productRankingChartInstance = null;\r\n    let regionalDistributionChartInstance = null;\r\n    let orderStatusDistributionChartInstance = null;\r\n\r\n    // 数据状态\r\n    const loading = reactive({\r\n      dashboard: false,\r\n      salesTrend: false,\r\n      merchantRanking: false,\r\n      productRanking: false,\r\n      regionalDistribution: false,\r\n      orderStatusDistribution: false\r\n    });\r\n\r\n    const timeFilter = ref('monthly');\r\n    const salesOverview = reactive({\r\n      totalSales: 0,\r\n      totalOrders: 0,\r\n      avgOrderValue: 0,\r\n      pendingOrders: 0,\r\n      completedOrders: 0,\r\n      recentSales: 0,\r\n      merchantCount: 0,\r\n      activeMerchantCount: 0\r\n    });\r\n\r\n    // 初始化图表\r\n    const initCharts = () => {\r\n      // 销售趋势图\r\n      salesTrendChartInstance = echarts.init(salesTrendChart.value);\r\n\r\n      // 商家销售排行图\r\n      merchantRankingChartInstance = echarts.init(merchantRankingChart.value);\r\n\r\n      // 产品销售排行图\r\n      productRankingChartInstance = echarts.init(productRankingChart.value);\r\n\r\n      // 区域销售分布图\r\n      regionalDistributionChartInstance = echarts.init(regionalDistributionChart.value);\r\n\r\n      // 订单状态分布图\r\n      orderStatusDistributionChartInstance = echarts.init(orderStatusDistributionChart.value);\r\n\r\n      // 监听窗口大小变化，调整图表大小\r\n      window.addEventListener('resize', handleResize);\r\n    };\r\n\r\n    // 处理窗口大小变化\r\n    const handleResize = () => {\r\n      salesTrendChartInstance && salesTrendChartInstance.resize();\r\n      merchantRankingChartInstance && merchantRankingChartInstance.resize();\r\n      productRankingChartInstance && productRankingChartInstance.resize();\r\n      regionalDistributionChartInstance && regionalDistributionChartInstance.resize();\r\n      orderStatusDistributionChartInstance && orderStatusDistributionChartInstance.resize();\r\n    };\r\n\r\n    // 获取仪表板数据\r\n    const fetchDashboardData = async () => {\r\n      try {\r\n        loading.dashboard = true;\r\n\r\n        const response = await axios.get(`/api/admin/data-visualization/dashboard?period=${timeFilter.value}`);\r\n        const dashboardData = response.data;\r\n\r\n        // 更新销售概览数据\r\n        Object.assign(salesOverview, dashboardData.salesOverview);\r\n\r\n        // 更新各个图表\r\n        renderSalesTrendChart(dashboardData.salesTrend);\r\n        renderMerchantRankingChart(dashboardData.merchantRanking);\r\n        renderProductRankingChart(dashboardData.productRanking);\r\n        renderRegionalDistributionChart(dashboardData.regionalDistribution);\r\n        renderOrderStatusDistributionChart(dashboardData.orderStatusDistribution);\r\n\r\n      } catch (error) {\r\n        console.error('获取仪表板数据失败', error);\r\n        ElMessage.error('获取仪表板数据失败');\r\n      } finally {\r\n        loading.dashboard = false;\r\n      }\r\n    };\r\n\r\n    // 单独获取销售趋势数据\r\n    const fetchSalesTrendData = async () => {\r\n      try {\r\n        loading.salesTrend = true;\r\n\r\n        const response = await axios.get(`/api/admin/data-visualization/sales-trend?period=${timeFilter.value}`);\r\n        renderSalesTrendChart(response.data);\r\n\r\n      } catch (error) {\r\n        console.error('获取销售趋势数据失败', error);\r\n        ElMessage.error('获取销售趋势数据失败');\r\n      } finally {\r\n        loading.salesTrend = false;\r\n      }\r\n    };\r\n\r\n    // 单独获取商家销售排行数据\r\n    const fetchMerchantRankingData = async () => {\r\n      try {\r\n        loading.merchantRanking = true;\r\n\r\n        const response = await axios.get('/api/admin/data-visualization/merchant-ranking');\r\n        renderMerchantRankingChart(response.data);\r\n\r\n      } catch (error) {\r\n        console.error('获取商家销售排行数据失败', error);\r\n        ElMessage.error('获取商家销售排行数据失败');\r\n      } finally {\r\n        loading.merchantRanking = false;\r\n      }\r\n    };\r\n\r\n    // 单独获取产品销售排行数据\r\n    const fetchProductRankingData = async () => {\r\n      try {\r\n        loading.productRanking = true;\r\n\r\n        const response = await axios.get('/api/admin/data-visualization/product-ranking');\r\n        renderProductRankingChart(response.data);\r\n\r\n      } catch (error) {\r\n        console.error('获取产品销售排行数据失败', error);\r\n        ElMessage.error('获取产品销售排行数据失败');\r\n      } finally {\r\n        loading.productRanking = false;\r\n      }\r\n    };\r\n\r\n    // 单独获取区域销售分布数据\r\n    const fetchRegionalDistributionData = async () => {\r\n      try {\r\n        loading.regionalDistribution = true;\r\n\r\n        const response = await axios.get('/api/admin/data-visualization/regional-distribution');\r\n        renderRegionalDistributionChart(response.data);\r\n\r\n      } catch (error) {\r\n        console.error('获取区域销售分布数据失败', error);\r\n        ElMessage.error('获取区域销售分布数据失败');\r\n      } finally {\r\n        loading.regionalDistribution = false;\r\n      }\r\n    };\r\n\r\n    // 单独获取订单状态分布数据\r\n    const fetchOrderStatusDistributionData = async () => {\r\n      try {\r\n        loading.orderStatusDistribution = true;\r\n\r\n        const response = await axios.get('/api/admin/data-visualization/order-status');\r\n        renderOrderStatusDistributionChart(response.data);\r\n\r\n      } catch (error) {\r\n        console.error('获取订单状态分布数据失败', error);\r\n        ElMessage.error('获取订单状态分布数据失败');\r\n      } finally {\r\n        loading.orderStatusDistribution = false;\r\n      }\r\n    };\r\n\r\n    // 渲染销售趋势图\r\n    const renderSalesTrendChart = (data) => {\r\n      const option = {\r\n        title: {\r\n          text: data.title || '平台销售趋势',\r\n          left: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          formatter: '{b}: {c} 元'\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: data.xAxis || []\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          name: '销售额(元)'\r\n        },\r\n        series: [{\r\n          name: '销售额',\r\n          type: 'line',\r\n          data: data.series || [],\r\n          smooth: true,\r\n          areaStyle: {},\r\n          itemStyle: {\r\n            color: '#409EFF'\r\n          }\r\n        }]\r\n      };\r\n\r\n      salesTrendChartInstance.setOption(option);\r\n    };\r\n\r\n    // 渲染商家销售排行图\r\n    const renderMerchantRankingChart = (data) => {\r\n      const option = {\r\n        title: {\r\n          text: data.title || '商家销售排行',\r\n          left: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          },\r\n          formatter: '{b}: {c} 元'\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'value',\r\n          name: '销售额(元)'\r\n        },\r\n        yAxis: {\r\n          type: 'category',\r\n          data: data.merchantNames || [],\r\n          axisLabel: {\r\n            interval: 0,\r\n            rotate: 30\r\n          }\r\n        },\r\n        series: [{\r\n          name: '销售额',\r\n          type: 'bar',\r\n          data: data.salesValues || [],\r\n          itemStyle: {\r\n            color: function (params) {\r\n              const colorList = ['#409EFF', '#67C23A', '#E6A23C', '#F56C6C', '#909399'];\r\n              return colorList[params.dataIndex % colorList.length];\r\n            }\r\n          }\r\n        }]\r\n      };\r\n\r\n      merchantRankingChartInstance.setOption(option);\r\n    };\r\n\r\n    // 渲染产品销售排行图\r\n    const renderProductRankingChart = (data) => {\r\n      const option = {\r\n        title: {\r\n          text: data.title || '产品销售排行',\r\n          left: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          },\r\n          formatter: '{b}: {c} 元'\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'value',\r\n          name: '销售额(元)'\r\n        },\r\n        yAxis: {\r\n          type: 'category',\r\n          data: data.productNames || [],\r\n          axisLabel: {\r\n            interval: 0,\r\n            rotate: 30\r\n          }\r\n        },\r\n        series: [{\r\n          name: '销售额',\r\n          type: 'bar',\r\n          data: data.salesValues || [],\r\n          itemStyle: {\r\n            color: function (params) {\r\n              const colorList = ['#67C23A', '#409EFF', '#E6A23C', '#F56C6C', '#909399'];\r\n              return colorList[params.dataIndex % colorList.length];\r\n            }\r\n          }\r\n        }]\r\n      };\r\n\r\n      productRankingChartInstance.setOption(option);\r\n    };\r\n\r\n    // 渲染区域销售分布图\r\n    const renderRegionalDistributionChart = (data) => {\r\n      const option = {\r\n        title: {\r\n          text: data.title || '区域销售分布',\r\n          left: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{b}: {c} 元 ({d}%)'\r\n        },\r\n        legend: {\r\n          type: 'scroll',\r\n          orient: 'vertical',\r\n          right: 10,\r\n          top: 20,\r\n          bottom: 20,\r\n        },\r\n        series: [{\r\n          name: '区域销售',\r\n          type: 'pie',\r\n          radius: '55%',\r\n          center: ['40%', '50%'],\r\n          data: data.regions ? data.regions.map((region, index) => {\r\n            return {\r\n              name: region,\r\n              value: data.values[index]\r\n            };\r\n          }) : [],\r\n          emphasis: {\r\n            itemStyle: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }]\r\n      };\r\n\r\n      regionalDistributionChartInstance.setOption(option);\r\n    };\r\n\r\n    // 渲染订单状态分布图\r\n    const renderOrderStatusDistributionChart = (data) => {\r\n      const option = {\r\n        title: {\r\n          text: data.title || '订单状态分布',\r\n          left: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 10,\r\n          top: 'center'\r\n        },\r\n        series: [{\r\n          name: '订单状态',\r\n          type: 'pie',\r\n          radius: ['40%', '70%'],\r\n          avoidLabelOverlap: false,\r\n          label: {\r\n            show: false,\r\n            position: 'center'\r\n          },\r\n          emphasis: {\r\n            label: {\r\n              show: true,\r\n              fontSize: '18',\r\n              fontWeight: 'bold'\r\n            }\r\n          },\r\n          labelLine: {\r\n            show: false\r\n          },\r\n          data: data.data || []\r\n        }]\r\n      };\r\n\r\n      orderStatusDistributionChartInstance.setOption(option);\r\n    };\r\n\r\n    // 格式化货币\r\n    const formatCurrency = (value) => {\r\n      if (value === undefined || value === null) return '¥0.00';\r\n      return '¥' + parseFloat(value).toFixed(2);\r\n    };\r\n\r\n    // 组件挂载\r\n    onMounted(async () => {\r\n      await nextTick();\r\n      initCharts();\r\n      fetchDashboardData();\r\n    });\r\n\r\n    // 组件卸载\r\n    onUnmounted(() => {\r\n      // 销毁图表实例，避免内存泄漏\r\n      salesTrendChartInstance && salesTrendChartInstance.dispose();\r\n      merchantRankingChartInstance && merchantRankingChartInstance.dispose();\r\n      productRankingChartInstance && productRankingChartInstance.dispose();\r\n      regionalDistributionChartInstance && regionalDistributionChartInstance.dispose();\r\n      orderStatusDistributionChartInstance && orderStatusDistributionChartInstance.dispose();\r\n\r\n      // 移除窗口大小变化监听\r\n      window.removeEventListener('resize', handleResize);\r\n    });\r\n\r\n    return {\r\n      salesTrendChart,\r\n      merchantRankingChart,\r\n      productRankingChart,\r\n      regionalDistributionChart,\r\n      orderStatusDistributionChart,\r\n      loading,\r\n      timeFilter,\r\n      salesOverview,\r\n      fetchDashboardData,\r\n      formatCurrency\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.admin-visualization-view {\r\n  padding: 20px;\r\n}\r\n\r\n.view-header {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.view-header h2 {\r\n  margin-top: 10px;\r\n}\r\n\r\n.admin-visualization-dashboard {\r\n  padding: 20px;\r\n}\r\n\r\n.dashboard-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.toolbar {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.dashboard-cards {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.data-card {\r\n  margin-bottom: 20px;\r\n  height: 100%;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.card-content {\r\n  text-align: center;\r\n  padding: 10px 0;\r\n}\r\n\r\n.chart-card {\r\n  margin-bottom: 20px;\r\n  height: 100%;\r\n}\r\n\r\n.chart-container {\r\n  height: 350px;\r\n  width: 100%;\r\n}\r\n\r\n.chart {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n.dashboard-charts {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}