{"ast":null,"code":"import { ref, onMounted, computed, nextTick } from 'vue';\nimport AppMerchantNavbar from '../components/MerchantNavbar.vue';\nimport AppAdminNavbar from '../components/AdminNavbar.vue';\nimport gsap from 'gsap';\nexport default {\n  name: 'HomePage',\n  components: {\n    AppMerchantNavbar,\n    AppAdminNavbar\n  },\n  setup() {\n    // 定义引用\n    const title = ref(null);\n    const welcomeMsg = ref(null);\n    const timeMsg = ref(null);\n    const noticeBoard = ref(null);\n    const userInfo = ref(null);\n    const notice1 = ref(null);\n    const notice2 = ref(null);\n    const notice3 = ref(null);\n    const currentUser = ref(null);\n    const currentTime = ref('');\n\n    // 检查是否首次访问\n    const checkFirstVisit = () => {\n      const visited = sessionStorage.getItem('homeVisited');\n      if (!visited) {\n        sessionStorage.setItem('homeVisited', 'true');\n        return true;\n      }\n      return false;\n    };\n\n    // 获取当前用户信息\n    const getCurrentUser = () => {\n      // 从 localStorage 获取用户信息\n      const userData = localStorage.getItem('user');\n      if (userData) {\n        try {\n          const parsedUserData = JSON.parse(userData);\n          if (parsedUserData.success) {\n            currentUser.value = {\n              role: parsedUserData.role,\n              id: parsedUserData.userid,\n              // 使用 userid 作为 id\n              token: parsedUserData.token,\n              username: parsedUserData.username\n            };\n          } else {\n            console.error('用户信息不正确:', parsedUserData);\n          }\n        } catch (e) {\n          console.error('解析用户信息失败:', e);\n        }\n      }\n    };\n\n    // 更新时间\n    const updateTime = () => {\n      const now = new Date();\n      currentTime.value = now.toLocaleString();\n    };\n\n    // 执行入场动画\n    const playEntranceAnimation = () => {\n      try {\n        // 创建要动画的元素数组，过滤掉不存在的元素\n        const elements = [title.value, welcomeMsg.value, timeMsg.value, noticeBoard.value, userInfo.value].filter(el => el !== null && el !== undefined);\n\n        // 创建公告项元素数组，过滤掉不存在的元素\n        const noticeItems = [notice1.value, notice2.value, notice3.value].filter(el => el !== null && el !== undefined);\n\n        // 只有在有元素存在的情况下才设置初始状态\n        if (elements.length > 0) {\n          gsap.set(elements, {\n            opacity: 0\n          });\n        }\n\n        // 为各个存在的元素单独设置初始状态\n        if (title.value) gsap.set(title.value, {\n          y: -50\n        });\n        if (welcomeMsg.value) gsap.set(welcomeMsg.value, {\n          x: -50\n        });\n        if (timeMsg.value) gsap.set(timeMsg.value, {\n          x: 50\n        });\n        if (noticeBoard.value) gsap.set(noticeBoard.value, {\n          scale: 0.8\n        });\n        if (userInfo.value) gsap.set(userInfo.value, {\n          y: -30\n        });\n        if (noticeItems.length > 0) {\n          gsap.set(noticeItems, {\n            x: 20,\n            opacity: 0\n          });\n        }\n\n        // 创建动画时间线\n        const tl = gsap.timeline();\n\n        // 添加动画序列，只对存在的元素进行动画\n        if (title.value) {\n          tl.to(title.value, {\n            opacity: 1,\n            y: 0,\n            duration: 0.8,\n            ease: \"power3.out\"\n          });\n        }\n        if (welcomeMsg.value) {\n          tl.to(welcomeMsg.value, {\n            opacity: 1,\n            x: 0,\n            duration: 0.6,\n            ease: \"power2.out\"\n          }, \"-=0.3\");\n        }\n        if (timeMsg.value) {\n          tl.to(timeMsg.value, {\n            opacity: 1,\n            x: 0,\n            duration: 0.6,\n            ease: \"power2.out\"\n          }, \"-=0.4\");\n        }\n        if (userInfo.value) {\n          tl.to(userInfo.value, {\n            opacity: 1,\n            y: 0,\n            duration: 0.5,\n            ease: \"back.out(1.7)\"\n          }, \"-=0.5\");\n        }\n        if (noticeBoard.value) {\n          tl.to(noticeBoard.value, {\n            opacity: 1,\n            scale: 1,\n            duration: 0.8,\n            ease: \"back.out(1.2)\"\n          }, \"-=0.3\");\n        }\n        if (noticeItems.length > 0) {\n          tl.to(noticeItems, {\n            opacity: 1,\n            x: 0,\n            duration: 0.5,\n            stagger: 0.15,\n            ease: \"power1.out\"\n          }, \"-=0.5\");\n        }\n      } catch (error) {\n        console.error('动画执行出错:', error);\n        // 发生错误时，确保所有元素可见\n        makeAllElementsVisible();\n      }\n    };\n\n    // 使所有元素可见的辅助函数\n    const makeAllElementsVisible = () => {\n      const allElements = [title.value, welcomeMsg.value, timeMsg.value, noticeBoard.value, userInfo.value, notice1.value, notice2.value, notice3.value].filter(el => el !== null && el !== undefined);\n      if (allElements.length > 0) {\n        gsap.set(allElements, {\n          opacity: 1,\n          x: 0,\n          y: 0,\n          scale: 1\n        });\n      }\n    };\n    onMounted(() => {\n      // 加载用户数据和开始时间更新\n      getCurrentUser();\n      updateTime();\n      setInterval(updateTime, 1000);\n\n      // 使用 nextTick 确保 DOM 已更新\n      nextTick(() => {\n        // 再添加一个 setTimeout 以确保 DOM 完全渲染\n        setTimeout(() => {\n          try {\n            const isFirstVisit = checkFirstVisit();\n            if (isFirstVisit) {\n              playEntranceAnimation();\n            } else {\n              // 非首次访问，直接显示所有元素\n              makeAllElementsVisible();\n            }\n          } catch (error) {\n            console.error('动画初始化错误:', error);\n            makeAllElementsVisible();\n          }\n        }, 100); // 给予足够的时间让DOM完全渲染\n      });\n    });\n\n    // 计算当前应该使用的导航栏组件\n    const navbarComponent = computed(() => {\n      if (currentUser.value && currentUser.value.role === 'admin') {\n        return 'AppAdminNavbar';\n      }\n      return 'AppMerchantNavbar';\n    });\n    return {\n      // 返回所有引用和数据\n      title,\n      welcomeMsg,\n      timeMsg,\n      noticeBoard,\n      userInfo,\n      notice1,\n      notice2,\n      notice3,\n      currentUser,\n      currentTime,\n      navbarComponent\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","nextTick","AppMerchantNavbar","AppAdminNavbar","gsap","name","components","setup","title","welcomeMsg","timeMsg","noticeBoard","userInfo","notice1","notice2","notice3","currentUser","currentTime","checkFirstVisit","visited","sessionStorage","getItem","setItem","getCurrentUser","userData","localStorage","parsedUserData","JSON","parse","success","value","role","id","userid","token","username","console","error","e","updateTime","now","Date","toLocaleString","playEntranceAnimation","elements","filter","el","undefined","noticeItems","length","set","opacity","y","x","scale","tl","timeline","to","duration","ease","stagger","makeAllElementsVisible","allElements","setInterval","setTimeout","isFirstVisit","navbarComponent"],"sources":["D:\\code_new\\ecms\\ecmsvue\\src\\components\\AdminNavbar.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <component :is=\"navbarComponent\" /> <!-- 根据用户角色动态加载导航栏 -->\r\n    <div class=\"home-container\">\r\n      <h1 ref=\"title\" class=\"title\">欢迎来到首页!</h1>\r\n      <p ref=\"welcomeMsg\" class=\"welcome-msg\">\r\n        欢迎回来，{{ currentUser?.username || '用户' }}！\r\n      </p>\r\n      <p ref=\"timeMsg\" class=\"time-msg\">当前时间：{{ currentTime }}</p>\r\n\r\n      <!-- 公告栏 -->\r\n      <el-card ref=\"noticeBoard\" class=\"notice-board\" shadow=\"hover\">\r\n        <h3>📢 系统公告</h3>\r\n        <ul class=\"notice-list\">\r\n          <li ref=\"notice1\">🛠 系统维护时间：每周日凌晨 2:00 - 4:00</li>\r\n          <li ref=\"notice2\">📊 数据将在每天晚上自动备份</li>\r\n          <li ref=\"notice3\">📌 如遇页面问题，请刷新或重新登录</li>\r\n        </ul>\r\n      </el-card>\r\n\r\n      <div ref=\"userInfo\" class=\"user-info\">\r\n        <el-tag type=\"success\" v-if=\"currentUser\">\r\n          你好，你的{{ currentUser.role }}ID为: {{ currentUser.id }}\r\n        </el-tag>\r\n        <el-tag type=\"info\" v-else>\r\n          未登录\r\n        </el-tag>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, computed, nextTick } from 'vue';\r\nimport AppMerchantNavbar from '../components/MerchantNavbar.vue';\r\nimport AppAdminNavbar from '../components/AdminNavbar.vue';\r\nimport gsap from 'gsap';\r\n\r\nexport default {\r\n  name: 'HomePage',\r\n  components: {\r\n    AppMerchantNavbar,\r\n    AppAdminNavbar\r\n  },\r\n  setup() {\r\n    // 定义引用\r\n    const title = ref(null);\r\n    const welcomeMsg = ref(null);\r\n    const timeMsg = ref(null);\r\n    const noticeBoard = ref(null);\r\n    const userInfo = ref(null);\r\n    const notice1 = ref(null);\r\n    const notice2 = ref(null);\r\n    const notice3 = ref(null);\r\n\r\n    const currentUser = ref(null);\r\n    const currentTime = ref('');\r\n\r\n    // 检查是否首次访问\r\n    const checkFirstVisit = () => {\r\n      const visited = sessionStorage.getItem('homeVisited');\r\n      if (!visited) {\r\n        sessionStorage.setItem('homeVisited', 'true');\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    // 获取当前用户信息\r\n    const getCurrentUser = () => {\r\n      // 从 localStorage 获取用户信息\r\n      const userData = localStorage.getItem('user');\r\n      if (userData) {\r\n        try {\r\n          const parsedUserData = JSON.parse(userData);\r\n          if (parsedUserData.success) {\r\n            currentUser.value = {\r\n              role: parsedUserData.role,\r\n              id: parsedUserData.userid, // 使用 userid 作为 id\r\n              token: parsedUserData.token,\r\n              username: parsedUserData.username\r\n            };\r\n          } else {\r\n            console.error('用户信息不正确:', parsedUserData);\r\n          }\r\n        } catch (e) {\r\n          console.error('解析用户信息失败:', e);\r\n        }\r\n      }\r\n    };\r\n\r\n    // 更新时间\r\n    const updateTime = () => {\r\n      const now = new Date();\r\n      currentTime.value = now.toLocaleString();\r\n    };\r\n\r\n    // 执行入场动画\r\n    const playEntranceAnimation = () => {\r\n      try {\r\n        // 创建要动画的元素数组，过滤掉不存在的元素\r\n        const elements = [\r\n          title.value,\r\n          welcomeMsg.value,\r\n          timeMsg.value,\r\n          noticeBoard.value,\r\n          userInfo.value\r\n        ].filter(el => el !== null && el !== undefined);\r\n\r\n        // 创建公告项元素数组，过滤掉不存在的元素\r\n        const noticeItems = [\r\n          notice1.value,\r\n          notice2.value,\r\n          notice3.value\r\n        ].filter(el => el !== null && el !== undefined);\r\n\r\n        // 只有在有元素存在的情况下才设置初始状态\r\n        if (elements.length > 0) {\r\n          gsap.set(elements, { opacity: 0 });\r\n        }\r\n\r\n        // 为各个存在的元素单独设置初始状态\r\n        if (title.value) gsap.set(title.value, { y: -50 });\r\n        if (welcomeMsg.value) gsap.set(welcomeMsg.value, { x: -50 });\r\n        if (timeMsg.value) gsap.set(timeMsg.value, { x: 50 });\r\n        if (noticeBoard.value) gsap.set(noticeBoard.value, { scale: 0.8 });\r\n        if (userInfo.value) gsap.set(userInfo.value, { y: -30 });\r\n\r\n        if (noticeItems.length > 0) {\r\n          gsap.set(noticeItems, { x: 20, opacity: 0 });\r\n        }\r\n\r\n        // 创建动画时间线\r\n        const tl = gsap.timeline();\r\n\r\n        // 添加动画序列，只对存在的元素进行动画\r\n        if (title.value) {\r\n          tl.to(title.value, {\r\n            opacity: 1,\r\n            y: 0,\r\n            duration: 0.8,\r\n            ease: \"power3.out\"\r\n          });\r\n        }\r\n\r\n        if (welcomeMsg.value) {\r\n          tl.to(welcomeMsg.value, {\r\n            opacity: 1,\r\n            x: 0,\r\n            duration: 0.6,\r\n            ease: \"power2.out\"\r\n          }, \"-=0.3\");\r\n        }\r\n\r\n        if (timeMsg.value) {\r\n          tl.to(timeMsg.value, {\r\n            opacity: 1,\r\n            x: 0,\r\n            duration: 0.6,\r\n            ease: \"power2.out\"\r\n          }, \"-=0.4\");\r\n        }\r\n\r\n        if (userInfo.value) {\r\n          tl.to(userInfo.value, {\r\n            opacity: 1,\r\n            y: 0,\r\n            duration: 0.5,\r\n            ease: \"back.out(1.7)\"\r\n          }, \"-=0.5\");\r\n        }\r\n\r\n        if (noticeBoard.value) {\r\n          tl.to(noticeBoard.value, {\r\n            opacity: 1,\r\n            scale: 1,\r\n            duration: 0.8,\r\n            ease: \"back.out(1.2)\"\r\n          }, \"-=0.3\");\r\n        }\r\n\r\n        if (noticeItems.length > 0) {\r\n          tl.to(noticeItems, {\r\n            opacity: 1,\r\n            x: 0,\r\n            duration: 0.5,\r\n            stagger: 0.15,\r\n            ease: \"power1.out\"\r\n          }, \"-=0.5\");\r\n        }\r\n      } catch (error) {\r\n        console.error('动画执行出错:', error);\r\n        // 发生错误时，确保所有元素可见\r\n        makeAllElementsVisible();\r\n      }\r\n    };\r\n\r\n    // 使所有元素可见的辅助函数\r\n    const makeAllElementsVisible = () => {\r\n      const allElements = [\r\n        title.value,\r\n        welcomeMsg.value,\r\n        timeMsg.value,\r\n        noticeBoard.value,\r\n        userInfo.value,\r\n        notice1.value,\r\n        notice2.value,\r\n        notice3.value\r\n      ].filter(el => el !== null && el !== undefined);\r\n\r\n      if (allElements.length > 0) {\r\n        gsap.set(allElements, { opacity: 1, x: 0, y: 0, scale: 1 });\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      // 加载用户数据和开始时间更新\r\n      getCurrentUser();\r\n      updateTime();\r\n      setInterval(updateTime, 1000);\r\n\r\n      // 使用 nextTick 确保 DOM 已更新\r\n      nextTick(() => {\r\n        // 再添加一个 setTimeout 以确保 DOM 完全渲染\r\n        setTimeout(() => {\r\n          try {\r\n            const isFirstVisit = checkFirstVisit();\r\n            if (isFirstVisit) {\r\n              playEntranceAnimation();\r\n            } else {\r\n              // 非首次访问，直接显示所有元素\r\n              makeAllElementsVisible();\r\n            }\r\n          } catch (error) {\r\n            console.error('动画初始化错误:', error);\r\n            makeAllElementsVisible();\r\n          }\r\n        }, 100); // 给予足够的时间让DOM完全渲染\r\n      });\r\n    });\r\n\r\n    // 计算当前应该使用的导航栏组件\r\n    const navbarComponent = computed(() => {\r\n      if (currentUser.value && currentUser.value.role === 'admin') {\r\n        return 'AppAdminNavbar';\r\n      }\r\n      return 'AppMerchantNavbar';\r\n    });\r\n\r\n    return {\r\n      // 返回所有引用和数据\r\n      title,\r\n      welcomeMsg,\r\n      timeMsg,\r\n      noticeBoard,\r\n      userInfo,\r\n      notice1,\r\n      notice2,\r\n      notice3,\r\n      currentUser,\r\n      currentTime,\r\n      navbarComponent\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.home-container {\r\n  position: relative;\r\n  padding: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.title {\r\n  font-size: 36px;\r\n  color: #409EFF;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.welcome-msg {\r\n  font-size: 20px;\r\n  margin: 10px 0;\r\n}\r\n\r\n.time-msg {\r\n  font-size: 16px;\r\n  color: #888;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.user-info {\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n}\r\n\r\n.notice-board {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  text-align: left;\r\n  padding: 20px;\r\n  border-left: 5px solid #409EFF;\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.notice-board:hover {\r\n  transform: translateY(-5px);\r\n}\r\n\r\n.notice-list {\r\n  list-style: none;\r\n  padding-left: 0;\r\n  margin-top: 10px;\r\n}\r\n\r\n.notice-list li {\r\n  margin-bottom: 10px;\r\n  font-size: 16px;\r\n  color: #333;\r\n  padding: 5px 0;\r\n}\r\n\r\n/* 响应式优化 */\r\n@media (max-width: 768px) {\r\n  .user-info {\r\n    position: static;\r\n    margin-top: 20px;\r\n    text-align: center;\r\n  }\r\n\r\n  .notice-board {\r\n    width: 90%;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}