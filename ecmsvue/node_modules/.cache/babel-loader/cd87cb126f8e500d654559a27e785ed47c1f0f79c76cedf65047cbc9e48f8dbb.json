{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, resolveDirective as _resolveDirective, openBlock as _openBlock, createElementBlock as _createElementBlock, withDirectives as _withDirectives, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"admin-visualization-view\"\n};\nconst _hoisted_2 = {\n  class: \"view-header\"\n};\nconst _hoisted_3 = {\n  class: \"admin-visualization-dashboard\"\n};\nconst _hoisted_4 = {\n  class: \"dashboard-header\"\n};\nconst _hoisted_5 = {\n  class: \"toolbar\"\n};\nconst _hoisted_6 = {\n  class: \"chart-selector\"\n};\nconst _hoisted_7 = {\n  class: \"card-header\"\n};\nconst _hoisted_8 = {\n  class: \"card-content\"\n};\nconst _hoisted_9 = {\n  class: \"card-value\"\n};\nconst _hoisted_10 = {\n  class: \"card-header\"\n};\nconst _hoisted_11 = {\n  class: \"card-content\"\n};\nconst _hoisted_12 = {\n  class: \"card-value\"\n};\nconst _hoisted_13 = {\n  class: \"card-header\"\n};\nconst _hoisted_14 = {\n  class: \"card-content\"\n};\nconst _hoisted_15 = {\n  class: \"card-value\"\n};\nconst _hoisted_16 = {\n  class: \"card-header\"\n};\nconst _hoisted_17 = {\n  class: \"card-content\"\n};\nconst _hoisted_18 = {\n  class: \"card-value\"\n};\nconst _hoisted_19 = {\n  class: \"card-header\"\n};\nconst _hoisted_20 = {\n  class: \"card-content\"\n};\nconst _hoisted_21 = {\n  class: \"card-value\"\n};\nconst _hoisted_22 = {\n  class: \"card-header\"\n};\nconst _hoisted_23 = {\n  class: \"card-content\"\n};\nconst _hoisted_24 = {\n  class: \"card-value\"\n};\nconst _hoisted_25 = {\n  class: \"card-header\"\n};\nconst _hoisted_26 = {\n  class: \"chart-container\"\n};\nconst _hoisted_27 = {\n  ref: \"salesTrendChart\",\n  class: \"chart\"\n};\nconst _hoisted_28 = {\n  class: \"card-header\"\n};\nconst _hoisted_29 = {\n  class: \"chart-container\"\n};\nconst _hoisted_30 = {\n  ref: \"merchantRankingChart\",\n  class: \"chart\"\n};\nconst _hoisted_31 = {\n  class: \"card-header\"\n};\nconst _hoisted_32 = {\n  class: \"chart-container\"\n};\nconst _hoisted_33 = {\n  ref: \"productRankingChart\",\n  class: \"chart\"\n};\nconst _hoisted_34 = {\n  class: \"card-header\"\n};\nconst _hoisted_35 = {\n  class: \"chart-container\"\n};\nconst _hoisted_36 = {\n  ref: \"regionalDistributionChart\",\n  class: \"chart\"\n};\nconst _hoisted_37 = {\n  class: \"card-header\"\n};\nconst _hoisted_38 = {\n  class: \"chart-container\"\n};\nconst _hoisted_39 = {\n  ref: \"orderStatusDistributionChart\",\n  class: \"chart\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_breadcrumb_item = _resolveComponent(\"el-breadcrumb-item\");\n  const _component_el_breadcrumb = _resolveComponent(\"el-breadcrumb\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_Refresh = _resolveComponent(\"Refresh\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_radio_button = _resolveComponent(\"el-radio-button\");\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_breadcrumb, {\n    separator: \"/\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_breadcrumb_item, {\n      to: {\n        path: '/admin'\n      }\n    }, {\n      default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"首页\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_breadcrumb_item, null, {\n      default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"数据分析\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_breadcrumb_item, null, {\n      default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"平台数据可视化\")])),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _cache[5] || (_cache[5] = _createElementVNode(\"h2\", null, \"平台数据可视化\", -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[7] || (_cache[7] = _createElementVNode(\"h1\", {\n    class: \"dashboard-title\"\n  }, \"平台数据分析仪表板\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_select, {\n    modelValue: $setup.timeFilter,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.timeFilter = $event),\n    placeholder: \"选择时间周期\",\n    onChange: $setup.fetchDashboardData,\n    class: \"time-filter\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_option, {\n      label: \"每日\",\n      value: \"daily\"\n    }), _createVNode(_component_el_option, {\n      label: \"每周\",\n      value: \"weekly\"\n    }), _createVNode(_component_el_option, {\n      label: \"每月\",\n      value: \"monthly\"\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"onChange\"]), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $setup.fetchDashboardData,\n    loading: $setup.loading.dashboard,\n    class: \"refresh-btn\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n      default: _withCtx(() => [_createVNode(_component_Refresh)]),\n      _: 1 /* STABLE */\n    }), _cache[6] || (_cache[6] = _createTextVNode(\" 刷新数据 \"))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\", \"loading\"])])]), _createCommentVNode(\" 图表选择器 \"), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_radio_group, {\n    modelValue: $setup.selectedChartType,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.selectedChartType = $event),\n    onChange: $setup.handleChartTypeChange,\n    size: \"large\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_radio_button, {\n      label: \"all\"\n    }, {\n      default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\"全部图表\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_radio_button, {\n      label: \"trend\"\n    }, {\n      default: _withCtx(() => _cache[9] || (_cache[9] = [_createTextVNode(\"销售趋势\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_radio_button, {\n      label: \"merchant\"\n    }, {\n      default: _withCtx(() => _cache[10] || (_cache[10] = [_createTextVNode(\"商家排行\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_radio_button, {\n      label: \"product\"\n    }, {\n      default: _withCtx(() => _cache[11] || (_cache[11] = [_createTextVNode(\"产品排行\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_radio_button, {\n      label: \"region\"\n    }, {\n      default: _withCtx(() => _cache[12] || (_cache[12] = [_createTextVNode(\"区域分布\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_radio_button, {\n      label: \"status\"\n    }, {\n      default: _withCtx(() => _cache[13] || (_cache[13] = [_createTextVNode(\"订单状态\")])),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]), _createCommentVNode(\" 销售概览卡片 \"), _createVNode(_component_el_row, {\n    gutter: 24,\n    class: \"dashboard-cards\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      xs: 24,\n      sm: 12,\n      md: 8,\n      lg: 6,\n      xl: 4\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\",\n        class: \"data-card\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_7, [_cache[15] || (_cache[15] = _createElementVNode(\"span\", null, \"总销售额\", -1 /* HOISTED */)), _createVNode(_component_el_tag, {\n          type: \"success\",\n          effect: \"plain\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => _cache[14] || (_cache[14] = [_createTextVNode(\"统计\")])),\n          _: 1 /* STABLE */\n        })])]),\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"h2\", _hoisted_9, _toDisplayString($setup.formatCurrency($setup.salesOverview.totalSales)), 1 /* TEXT */)])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      xs: 24,\n      sm: 12,\n      md: 8,\n      lg: 6,\n      xl: 4\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\",\n        class: \"data-card\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_10, [_cache[17] || (_cache[17] = _createElementVNode(\"span\", null, \"总订单数\", -1 /* HOISTED */)), _createVNode(_component_el_tag, {\n          type: \"primary\",\n          effect: \"plain\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => _cache[16] || (_cache[16] = [_createTextVNode(\"统计\")])),\n          _: 1 /* STABLE */\n        })])]),\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"h2\", _hoisted_12, _toDisplayString($setup.salesOverview.totalOrders || 0), 1 /* TEXT */)])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      xs: 24,\n      sm: 12,\n      md: 8,\n      lg: 6,\n      xl: 4\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\",\n        class: \"data-card\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_13, [_cache[19] || (_cache[19] = _createElementVNode(\"span\", null, \"平均订单金额\", -1 /* HOISTED */)), _createVNode(_component_el_tag, {\n          type: \"warning\",\n          effect: \"plain\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => _cache[18] || (_cache[18] = [_createTextVNode(\"统计\")])),\n          _: 1 /* STABLE */\n        })])]),\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"h2\", _hoisted_15, _toDisplayString($setup.formatCurrency($setup.salesOverview.avgOrderValue)), 1 /* TEXT */)])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      xs: 24,\n      sm: 12,\n      md: 8,\n      lg: 6,\n      xl: 4\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\",\n        class: \"data-card\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_16, [_cache[21] || (_cache[21] = _createElementVNode(\"span\", null, \"最近30天销售额\", -1 /* HOISTED */)), _createVNode(_component_el_tag, {\n          type: \"info\",\n          effect: \"plain\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => _cache[20] || (_cache[20] = [_createTextVNode(\"统计\")])),\n          _: 1 /* STABLE */\n        })])]),\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"h2\", _hoisted_18, _toDisplayString($setup.formatCurrency($setup.salesOverview.recentSales)), 1 /* TEXT */)])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      xs: 24,\n      sm: 12,\n      md: 8,\n      lg: 6,\n      xl: 4\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\",\n        class: \"data-card\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_19, [_cache[23] || (_cache[23] = _createElementVNode(\"span\", null, \"商家总数\", -1 /* HOISTED */)), _createVNode(_component_el_tag, {\n          type: \"danger\",\n          effect: \"plain\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => _cache[22] || (_cache[22] = [_createTextVNode(\"统计\")])),\n          _: 1 /* STABLE */\n        })])]),\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"h2\", _hoisted_21, _toDisplayString($setup.salesOverview.merchantCount || 0), 1 /* TEXT */)])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      xs: 24,\n      sm: 12,\n      md: 8,\n      lg: 6,\n      xl: 4\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\",\n        class: \"data-card\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_22, [_cache[25] || (_cache[25] = _createElementVNode(\"span\", null, \"活跃商家\", -1 /* HOISTED */)), _createVNode(_component_el_tag, {\n          type: \"success\",\n          effect: \"plain\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => _cache[24] || (_cache[24] = [_createTextVNode(\"统计\")])),\n          _: 1 /* STABLE */\n        })])]),\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"h2\", _hoisted_24, _toDisplayString($setup.salesOverview.activeMerchantCount || 0), 1 /* TEXT */)])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 图表区域 \"), _createVNode(_component_el_row, {\n    gutter: 24,\n    class: \"dashboard-charts\"\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" 销售趋势图 \"), $setup.isChartVisible('trend') ? (_openBlock(), _createBlock(_component_el_col, {\n      key: 0,\n      xs: 24,\n      sm: 24,\n      md: 24,\n      lg: 24,\n      xl: 24\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\",\n        class: \"chart-card\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_25, [_cache[26] || (_cache[26] = _createElementVNode(\"span\", null, \"平台销售趋势\", -1 /* HOISTED */)), _createVNode(_component_el_tag, {\n          type: \"primary\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.timeFilterLabel), 1 /* TEXT */)]),\n          _: 1 /* STABLE */\n        })])]),\n        default: _withCtx(() => [_withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_26, [_createElementVNode(\"div\", _hoisted_27, null, 512 /* NEED_PATCH */)])), [[_directive_loading, $setup.loading.salesTrend]])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 商家销售排行图 \"), $setup.isChartVisible('merchant') ? (_openBlock(), _createBlock(_component_el_col, {\n      key: 1,\n      xs: 24,\n      sm: 24,\n      md: 12,\n      lg: 12,\n      xl: 12\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\",\n        class: \"chart-card\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_28, [_cache[28] || (_cache[28] = _createElementVNode(\"span\", null, \"商家销售排行\", -1 /* HOISTED */)), _createVNode(_component_el_tag, {\n          type: \"success\"\n        }, {\n          default: _withCtx(() => _cache[27] || (_cache[27] = [_createTextVNode(\"排名\")])),\n          _: 1 /* STABLE */\n        })])]),\n        default: _withCtx(() => [_withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_29, [_createElementVNode(\"div\", _hoisted_30, null, 512 /* NEED_PATCH */)])), [[_directive_loading, $setup.loading.merchantRanking]])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 产品销售排行图 \"), $setup.isChartVisible('product') ? (_openBlock(), _createBlock(_component_el_col, {\n      key: 2,\n      xs: 24,\n      sm: 24,\n      md: 12,\n      lg: 12,\n      xl: 12\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\",\n        class: \"chart-card\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_31, [_cache[30] || (_cache[30] = _createElementVNode(\"span\", null, \"产品销售排行\", -1 /* HOISTED */)), _createVNode(_component_el_tag, {\n          type: \"warning\"\n        }, {\n          default: _withCtx(() => _cache[29] || (_cache[29] = [_createTextVNode(\"排名\")])),\n          _: 1 /* STABLE */\n        })])]),\n        default: _withCtx(() => [_withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_32, [_createElementVNode(\"div\", _hoisted_33, null, 512 /* NEED_PATCH */)])), [[_directive_loading, $setup.loading.productRanking]])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 区域销售分布图 \"), $setup.isChartVisible('region') ? (_openBlock(), _createBlock(_component_el_col, {\n      key: 3,\n      xs: 24,\n      sm: 24,\n      md: 12,\n      lg: 12,\n      xl: 12\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\",\n        class: \"chart-card\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_34, [_cache[32] || (_cache[32] = _createElementVNode(\"span\", null, \"区域销售分布\", -1 /* HOISTED */)), _createVNode(_component_el_tag, {\n          type: \"info\"\n        }, {\n          default: _withCtx(() => _cache[31] || (_cache[31] = [_createTextVNode(\"分布\")])),\n          _: 1 /* STABLE */\n        })])]),\n        default: _withCtx(() => [_withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_35, [_createElementVNode(\"div\", _hoisted_36, null, 512 /* NEED_PATCH */)])), [[_directive_loading, $setup.loading.regionalDistribution]])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 订单状态分布图 \"), $setup.isChartVisible('status') ? (_openBlock(), _createBlock(_component_el_col, {\n      key: 4,\n      xs: 24,\n      sm: 24,\n      md: 12,\n      lg: 12,\n      xl: 12\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\",\n        class: \"chart-card\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_37, [_cache[34] || (_cache[34] = _createElementVNode(\"span\", null, \"订单状态分布\", -1 /* HOISTED */)), _createVNode(_component_el_tag, {\n          type: \"danger\"\n        }, {\n          default: _withCtx(() => _cache[33] || (_cache[33] = [_createTextVNode(\"分布\")])),\n          _: 1 /* STABLE */\n        })])]),\n        default: _withCtx(() => [_withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_38, [_createElementVNode(\"div\", _hoisted_39, null, 512 /* NEED_PATCH */)])), [[_directive_loading, $setup.loading.orderStatusDistribution]])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  })])]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_breadcrumb","separator","default","_withCtx","_component_el_breadcrumb_item","to","path","_cache","_createTextVNode","_","_hoisted_3","_hoisted_4","_hoisted_5","_component_el_select","modelValue","$setup","timeFilter","$event","placeholder","onChange","fetchDashboardData","_component_el_option","label","value","_component_el_button","type","onClick","loading","dashboard","_component_el_icon","_component_Refresh","_createCommentVNode","_hoisted_6","_component_el_radio_group","selectedChartType","handleChartTypeChange","size","_component_el_radio_button","_component_el_row","gutter","_component_el_col","xs","sm","md","lg","xl","_component_el_card","shadow","header","_hoisted_7","_component_el_tag","effect","_hoisted_8","_hoisted_9","_toDisplayString","formatCurrency","salesOverview","totalSales","_hoisted_10","_hoisted_11","_hoisted_12","totalOrders","_hoisted_13","_hoisted_14","_hoisted_15","avgOrderValue","_hoisted_16","_hoisted_17","_hoisted_18","recentSales","_hoisted_19","_hoisted_20","_hoisted_21","merchantCount","_hoisted_22","_hoisted_23","_hoisted_24","activeMerchantCount","isChartVisible","_createBlock","key","_hoisted_25","timeFilterLabel","_hoisted_26","_hoisted_27","salesTrend","_hoisted_28","_hoisted_29","_hoisted_30","merchantRanking","_hoisted_31","_hoisted_32","_hoisted_33","productRanking","_hoisted_34","_hoisted_35","_hoisted_36","regionalDistribution","_hoisted_37","_hoisted_38","_hoisted_39","orderStatusDistribution"],"sources":["E:\\shixun\\420\\ecms\\ecmsvue\\src\\views\\AdminDataVisualizationView.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-visualization-view\">\r\n    <div class=\"view-header\">\r\n      <el-breadcrumb separator=\"/\">\r\n        <el-breadcrumb-item :to=\"{ path: '/admin' }\">首页</el-breadcrumb-item>\r\n        <el-breadcrumb-item>数据分析</el-breadcrumb-item>\r\n        <el-breadcrumb-item>平台数据可视化</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n      <h2>平台数据可视化</h2>\r\n    </div>\r\n\r\n    <div class=\"admin-visualization-dashboard\">\r\n      <div class=\"dashboard-header\">\r\n        <h1 class=\"dashboard-title\">平台数据分析仪表板</h1>\r\n\r\n        <div class=\"toolbar\">\r\n          <el-select v-model=\"timeFilter\" placeholder=\"选择时间周期\" @change=\"fetchDashboardData\" class=\"time-filter\">\r\n            <el-option label=\"每日\" value=\"daily\"></el-option>\r\n            <el-option label=\"每周\" value=\"weekly\"></el-option>\r\n            <el-option label=\"每月\" value=\"monthly\"></el-option>\r\n          </el-select>\r\n\r\n          <el-button type=\"primary\" @click=\"fetchDashboardData\" :loading=\"loading.dashboard\" class=\"refresh-btn\">\r\n            <el-icon><Refresh /></el-icon> 刷新数据\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 图表选择器 -->\r\n      <div class=\"chart-selector\">\r\n        <el-radio-group v-model=\"selectedChartType\" @change=\"handleChartTypeChange\" size=\"large\">\r\n          <el-radio-button label=\"all\">全部图表</el-radio-button>\r\n          <el-radio-button label=\"trend\">销售趋势</el-radio-button>\r\n          <el-radio-button label=\"merchant\">商家排行</el-radio-button>\r\n          <el-radio-button label=\"product\">产品排行</el-radio-button>\r\n          <el-radio-button label=\"region\">区域分布</el-radio-button>\r\n          <el-radio-button label=\"status\">订单状态</el-radio-button>\r\n        </el-radio-group>\r\n      </div>\r\n\r\n      <!-- 销售概览卡片 -->\r\n      <el-row :gutter=\"24\" class=\"dashboard-cards\">\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>总销售额</span>\r\n                <el-tag type=\"success\" effect=\"plain\" size=\"small\">统计</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2 class=\"card-value\">{{ formatCurrency(salesOverview.totalSales) }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>总订单数</span>\r\n                <el-tag type=\"primary\" effect=\"plain\" size=\"small\">统计</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2 class=\"card-value\">{{ salesOverview.totalOrders || 0 }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>平均订单金额</span>\r\n                <el-tag type=\"warning\" effect=\"plain\" size=\"small\">统计</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2 class=\"card-value\">{{ formatCurrency(salesOverview.avgOrderValue) }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>最近30天销售额</span>\r\n                <el-tag type=\"info\" effect=\"plain\" size=\"small\">统计</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2 class=\"card-value\">{{ formatCurrency(salesOverview.recentSales) }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>商家总数</span>\r\n                <el-tag type=\"danger\" effect=\"plain\" size=\"small\">统计</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2 class=\"card-value\">{{ salesOverview.merchantCount || 0 }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>活跃商家</span>\r\n                <el-tag type=\"success\" effect=\"plain\" size=\"small\">统计</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2 class=\"card-value\">{{ salesOverview.activeMerchantCount || 0 }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 图表区域 -->\r\n      <el-row :gutter=\"24\" class=\"dashboard-charts\">\r\n        <!-- 销售趋势图 -->\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\" v-if=\"isChartVisible('trend')\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>平台销售趋势</span>\r\n                <el-tag type=\"primary\">{{ timeFilterLabel }}</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.salesTrend\">\r\n              <div ref=\"salesTrendChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <!-- 商家销售排行图 -->\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\" v-if=\"isChartVisible('merchant')\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>商家销售排行</span>\r\n                <el-tag type=\"success\">排名</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.merchantRanking\">\r\n              <div ref=\"merchantRankingChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <!-- 产品销售排行图 -->\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\" v-if=\"isChartVisible('product')\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>产品销售排行</span>\r\n                <el-tag type=\"warning\">排名</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.productRanking\">\r\n              <div ref=\"productRankingChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <!-- 区域销售分布图 -->\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\" v-if=\"isChartVisible('region')\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>区域销售分布</span>\r\n                <el-tag type=\"info\">分布</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.regionalDistribution\">\r\n              <div ref=\"regionalDistributionChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <!-- 订单状态分布图 -->\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\" v-if=\"isChartVisible('status')\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>订单状态分布</span>\r\n                <el-tag type=\"danger\">分布</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.orderStatusDistribution\">\r\n              <div ref=\"orderStatusDistributionChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted, onUnmounted, nextTick, computed } from 'vue';\r\nimport { ElMessage, ElNotification } from 'element-plus';\r\nimport { Refresh } from '@element-plus/icons-vue';\r\nimport * as echarts from 'echarts';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'AdminDataVisualizationView',\r\n  components: {\r\n    Refresh\r\n  },\r\n  setup() {\r\n    // 图表引用\r\n    const salesTrendChart = ref(null);\r\n    const merchantRankingChart = ref(null);\r\n    const productRankingChart = ref(null);\r\n    const regionalDistributionChart = ref(null);\r\n    const orderStatusDistributionChart = ref(null);\r\n\r\n    // 图表实例\r\n    let salesTrendChartInstance = null;\r\n    let merchantRankingChartInstance = null;\r\n    let productRankingChartInstance = null;\r\n    let regionalDistributionChartInstance = null;\r\n    let orderStatusDistributionChartInstance = null;\r\n\r\n    // 数据状态\r\n    const loading = reactive({\r\n      dashboard: false,\r\n      salesTrend: false,\r\n      merchantRanking: false,\r\n      productRanking: false,\r\n      regionalDistribution: false,\r\n      orderStatusDistribution: false\r\n    });\r\n\r\n    const timeFilter = ref('monthly');\r\n    const timeFilterLabel = computed(() => {\r\n      switch (timeFilter.value) {\r\n        case 'daily': return '每日';\r\n        case 'weekly': return '每周';\r\n        case 'monthly': return '每月';\r\n        default: return '每月';\r\n      }\r\n    });\r\n\r\n    // 图表选择\r\n    const selectedChartType = ref('all');\r\n\r\n    // 用于判断图表是否显示\r\n    const isChartVisible = (chartType) => {\r\n      return selectedChartType.value === 'all' || selectedChartType.value === chartType;\r\n    };\r\n\r\n    // 处理图表类型变更\r\n    const handleChartTypeChange = (value) => {\r\n      // 重新调整图表大小\r\n      nextTick(() => {\r\n        if (value === 'all' || value === 'trend') {\r\n          salesTrendChartInstance && salesTrendChartInstance.resize();\r\n        }\r\n        if (value === 'all' || value === 'merchant') {\r\n          merchantRankingChartInstance && merchantRankingChartInstance.resize();\r\n        }\r\n        if (value === 'all' || value === 'product') {\r\n          productRankingChartInstance && productRankingChartInstance.resize();\r\n        }\r\n        if (value === 'all' || value === 'region') {\r\n          regionalDistributionChartInstance && regionalDistributionChartInstance.resize();\r\n        }\r\n        if (value === 'all' || value === 'status') {\r\n          orderStatusDistributionChartInstance && orderStatusDistributionChartInstance.resize();\r\n        }\r\n      });\r\n\r\n      // 通知用户\r\n      ElNotification({\r\n        title: '图表显示已更新',\r\n        message: value === 'all' ? '显示所有图表' : `仅显示${getChartTypeName(value)}图表`,\r\n        type: 'success',\r\n        duration: 2000\r\n      });\r\n    };\r\n\r\n    // 获取图表类型名称\r\n    const getChartTypeName = (chartType) => {\r\n      switch (chartType) {\r\n        case 'trend': return '销售趋势';\r\n        case 'merchant': return '商家销售排行';\r\n        case 'product': return '产品销售排行';\r\n        case 'region': return '区域销售分布';\r\n        case 'status': return '订单状态分布';\r\n        default: return '';\r\n      }\r\n    };\r\n\r\n    const salesOverview = reactive({\r\n      totalSales: 0,\r\n      totalOrders: 0,\r\n      avgOrderValue: 0,\r\n      pendingOrders: 0,\r\n      completedOrders: 0,\r\n      recentSales: 0,\r\n      merchantCount: 0,\r\n      activeMerchantCount: 0\r\n    });\r\n\r\n    // 初始化图表\r\n    const initCharts = () => {\r\n      // 创建图表并应用主题\r\n      const theme = {\r\n        color: ['#409EFF', '#67C23A', '#E6A23C', '#F56C6C', '#909399', '#9254de', '#36cfc9', '#ff9c6e'],\r\n        backgroundColor: 'rgba(252,252,252,0.6)',\r\n        textStyle: {\r\n          fontFamily: 'Arial, \"Microsoft YaHei\", sans-serif'\r\n        },\r\n        title: {\r\n          textStyle: {\r\n            color: '#303133',\r\n            fontSize: 16,\r\n            fontWeight: 'normal'\r\n          },\r\n          left: 'center'\r\n        },\r\n        legend: {\r\n          textStyle: {\r\n            color: '#606266'\r\n          }\r\n        },\r\n        grid: {\r\n          containLabel: true,\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%'\r\n        }\r\n      };\r\n\r\n      echarts.registerTheme('ecmsTheme', theme);\r\n\r\n      // 销售趋势图\r\n      salesTrendChartInstance = echarts.init(salesTrendChart.value, 'ecmsTheme');\r\n\r\n      // 商家销售排行图\r\n      merchantRankingChartInstance = echarts.init(merchantRankingChart.value, 'ecmsTheme');\r\n\r\n      // 产品销售排行图\r\n      productRankingChartInstance = echarts.init(productRankingChart.value, 'ecmsTheme');\r\n\r\n      // 区域销售分布图\r\n      regionalDistributionChartInstance = echarts.init(regionalDistributionChart.value, 'ecmsTheme');\r\n\r\n      // 订单状态分布图\r\n      orderStatusDistributionChartInstance = echarts.init(orderStatusDistributionChart.value, 'ecmsTheme');\r\n\r\n      // 监听窗口大小变化，调整图表大小\r\n      window.addEventListener('resize', handleResize);\r\n    };\r\n\r\n    // 处理窗口大小变化\r\n    const handleResize = () => {\r\n      if (isChartVisible('trend')) {\r\n        salesTrendChartInstance && salesTrendChartInstance.resize();\r\n      }\r\n      if (isChartVisible('merchant')) {\r\n        merchantRankingChartInstance && merchantRankingChartInstance.resize();\r\n      }\r\n      if (isChartVisible('product')) {\r\n        productRankingChartInstance && productRankingChartInstance.resize();\r\n      }\r\n      if (isChartVisible('region')) {\r\n        regionalDistributionChartInstance && regionalDistributionChartInstance.resize();\r\n      }\r\n      if (isChartVisible('status')) {\r\n        orderStatusDistributionChartInstance && orderStatusDistributionChartInstance.resize();\r\n      }\r\n    };\r\n\r\n    // 获取仪表板数据\r\n    // 获取仪表板数据\r\n    const fetchDashboardData = async () => {\r\n      try {\r\n        loading.dashboard = true;\r\n\r\n        const response = await axios.get(`http://localhost:8080/api/admin/data-visualization/dashboard?period=${timeFilter.value}`);\r\n        const dashboardData = response.data;\r\n\r\n        // 更新销售概览数据\r\n        Object.assign(salesOverview, dashboardData.salesOverview);\r\n\r\n        // 等待下一个 DOM 更新周期后再渲染图表\r\n        await nextTick();\r\n\r\n        // 确保图表实例存在，如果不存在则重新初始化\r\n        if (!salesTrendChartInstance && salesTrendChart.value) {\r\n          salesTrendChartInstance = echarts.init(salesTrendChart.value, 'ecmsTheme');\r\n        }\r\n        if (!merchantRankingChartInstance && merchantRankingChart.value) {\r\n          merchantRankingChartInstance = echarts.init(merchantRankingChart.value, 'ecmsTheme');\r\n        }\r\n        if (!productRankingChartInstance && productRankingChart.value) {\r\n          productRankingChartInstance = echarts.init(productRankingChart.value, 'ecmsTheme');\r\n        }\r\n        if (!regionalDistributionChartInstance && regionalDistributionChart.value) {\r\n          regionalDistributionChartInstance = echarts.init(regionalDistributionChart.value, 'ecmsTheme');\r\n        }\r\n        if (!orderStatusDistributionChartInstance && orderStatusDistributionChart.value) {\r\n          orderStatusDistributionChartInstance = echarts.init(orderStatusDistributionChart.value, 'ecmsTheme');\r\n        }\r\n\r\n        // 检查数据是否有效\r\n        console.log('更新前图表数据:', dashboardData);\r\n\r\n        // 更新各个图表\r\n        if (dashboardData.salesTrend && Object.keys(dashboardData.salesTrend).length > 0) {\r\n          renderSalesTrendChart(dashboardData.salesTrend);\r\n        } else {\r\n          console.warn('销售趋势数据为空');\r\n        }\r\n\r\n        if (dashboardData.merchantRanking && Object.keys(dashboardData.merchantRanking).length > 0) {\r\n          renderMerchantRankingChart(dashboardData.merchantRanking);\r\n        } else {\r\n          console.warn('商家排行数据为空');\r\n        }\r\n\r\n        if (dashboardData.productRanking && Object.keys(dashboardData.productRanking).length > 0) {\r\n          renderProductRankingChart(dashboardData.productRanking);\r\n        } else {\r\n          console.warn('产品排行数据为空');\r\n        }\r\n\r\n        if (dashboardData.regionalDistribution && Object.keys(dashboardData.regionalDistribution).length > 0) {\r\n          renderRegionalDistributionChart(dashboardData.regionalDistribution);\r\n        } else {\r\n          console.warn('区域分布数据为空');\r\n        }\r\n\r\n        if (dashboardData.orderStatusDistribution && Object.keys(dashboardData.orderStatusDistribution).length > 0) {\r\n          renderOrderStatusDistributionChart(dashboardData.orderStatusDistribution);\r\n        } else {\r\n          console.warn('订单状态数据为空');\r\n        }\r\n\r\n        ElMessage({\r\n          message: '数据已成功更新',\r\n          type: 'success',\r\n          duration: 2000\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error('获取仪表板数据失败', error);\r\n        ElMessage({\r\n          message: '获取仪表板数据失败: ' + (error.response?.data?.message || error.message),\r\n          type: 'error'\r\n        });\r\n      } finally {\r\n        loading.dashboard = false;\r\n      }\r\n    };\r\n\r\n    // 渲染销售趋势图\r\n    const renderSalesTrendChart = (data) => {\r\n      const option = {\r\n        title: {\r\n          text: data.title || '平台销售趋势',\r\n          subtext: `按${timeFilterLabel.value}统计`\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          formatter: '{b}: {c} 元',\r\n          backgroundColor: 'rgba(255,255,255,0.8)',\r\n          borderColor: '#eee',\r\n          borderWidth: 1,\r\n          textStyle: {\r\n            color: '#333'\r\n          },\r\n          extraCssText: 'box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);'\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: data.xAxis || [],\r\n          boundaryGap: false,\r\n          axisTick: {\r\n            alignWithLabel: true\r\n          },\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#dcdfe6'\r\n            }\r\n          },\r\n          axisLabel: {\r\n            color: '#606266',\r\n            rotate: data.xAxis && data.xAxis.length > 10 ? 30 : 0\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          name: '销售额(元)',\r\n          nameTextStyle: {\r\n            color: '#606266'\r\n          },\r\n          axisLine: {\r\n            show: true,\r\n            lineStyle: {\r\n              color: '#dcdfe6'\r\n            }\r\n          },\r\n          splitLine: {\r\n            lineStyle: {\r\n              color: '#ebeef5'\r\n            }\r\n          }\r\n        },\r\n        series: [{\r\n          name: '销售额',\r\n          type: 'line',\r\n          data: data.series || [],\r\n          smooth: true,\r\n          symbol: 'circle',\r\n          symbolSize: 6,\r\n          itemStyle: {\r\n            color: '#409EFF'\r\n          },\r\n          lineStyle: {\r\n            width: 3\r\n          },\r\n          areaStyle: {\r\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n              { offset: 0, color: 'rgba(64, 158, 255, 0.5)' },\r\n              { offset: 1, color: 'rgba(64, 158, 255, 0.1)' }\r\n            ])\r\n          },\r\n          markPoint: {\r\n            data: [\r\n              { type: 'max', name: '最大值' },\r\n              { type: 'min', name: '最小值' }\r\n            ]\r\n          },\r\n          markLine: {\r\n            data: [\r\n              { type: 'average', name: '平均值' }\r\n            ]\r\n          }\r\n        }]\r\n      };\r\n\r\n      salesTrendChartInstance.setOption(option);\r\n    };\r\n\r\n    // 渲染商家销售排行图\r\n    const renderMerchantRankingChart = (data) => {\r\n      const option = {\r\n        title: {\r\n          text: data.title || '商家销售排行',\r\n          subtext: '按销售额排名'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          },\r\n          formatter: '{b}: {c} 元',\r\n          backgroundColor: 'rgba(255,255,255,0.8)',\r\n          borderColor: '#eee',\r\n          borderWidth: 1,\r\n          textStyle: {\r\n            color: '#333'\r\n          },\r\n          extraCssText: 'box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);'\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'value',\r\n          name: '销售额(元)',\r\n          nameTextStyle: {\r\n            color: '#606266'\r\n          },\r\n          axisLine: {\r\n            show: true,\r\n            lineStyle: {\r\n              color: '#dcdfe6'\r\n            }\r\n          },\r\n          splitLine: {\r\n            lineStyle: {\r\n              color: '#ebeef5'\r\n            }\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'category',\r\n          data: data.merchantNames || [],\r\n          axisLabel: {\r\n            interval: 0,\r\n            rotate: 0,\r\n            color: '#606266'\r\n          },\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#dcdfe6'\r\n            }\r\n          }\r\n        },\r\n        visualMap: {\r\n          min: 0,\r\n          max: Math.max(...(data.salesValues || [0])),\r\n          text: ['高', '低'],\r\n          inRange: {\r\n            color: ['#67C23A', '#409EFF']\r\n          },\r\n          calculable: true,\r\n          orient: 'horizontal',\r\n          left: 'center',\r\n          bottom: '0%',\r\n          show: false\r\n        },\r\n        series: [{\r\n          name: '销售额',\r\n          type: 'bar',\r\n          data: data.salesValues || [],\r\n          barWidth: '50%',\r\n          itemStyle: {\r\n            color: function (params) {\r\n              const value = params.value;\r\n              const max = Math.max(...(data.salesValues || [0]));\r\n              return new echarts.graphic.LinearGradient(0, 0, 1, 0, [\r\n                { offset: 0, color: '#67C23A' },\r\n                { offset: value / max, color: '#409EFF' }\r\n              ]);\r\n            },\r\n            borderRadius: [0, 4, 4, 0]\r\n          },\r\n          label: {\r\n            show: true,\r\n            position: 'right',\r\n            formatter: '{c} 元'\r\n          }\r\n        }]\r\n      };\r\n\r\n      merchantRankingChartInstance.setOption(option);\r\n    };\r\n\r\n    // 渲染产品销售排行图\r\n    const renderProductRankingChart = (data) => {\r\n      const option = {\r\n        title: {\r\n          text: data.title || '产品销售排行',\r\n          subtext: '按销售额排名'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          },\r\n          formatter: '{b}: {c} 元',\r\n          backgroundColor: 'rgba(255,255,255,0.8)',\r\n          borderColor: '#eee',\r\n          borderWidth: 1,\r\n          textStyle: {\r\n            color: '#333'\r\n          },\r\n          extraCssText: 'box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);'\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'value',\r\n          name: '销售额(元)',\r\n          nameTextStyle: {\r\n            color: '#606266'\r\n          },\r\n          axisLine: {\r\n            show: true,\r\n            lineStyle: {\r\n              color: '#dcdfe6'\r\n            }\r\n          },\r\n          splitLine: {\r\n            lineStyle: {\r\n              color: '#ebeef5'\r\n            }\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'category',\r\n          data: data.productNames || [],\r\n          axisLabel: {\r\n            interval: 0,\r\n            rotate: 0,\r\n            color: '#606266'\r\n          },\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#dcdfe6'\r\n            }\r\n          }\r\n        },\r\n        series: [{\r\n          name: '销售额',\r\n          type: 'bar',\r\n          data: data.salesValues || [],\r\n          barWidth: '50%',\r\n          itemStyle: {\r\n            color: function (params) {\r\n              const colorList = ['#67C23A', '#409EFF', '#E6A23C', '#F56C6C', '#909399'];\r\n              return new echarts.graphic.LinearGradient(0, 0, 1, 0, [\r\n                { offset: 0, color: '#E6A23C' },\r\n                { offset: 1, color: colorList[params.dataIndex % colorList.length] }\r\n              ]);\r\n            },\r\n            borderRadius: [0, 4, 4, 0]\r\n          },\r\n          label: {\r\n            show: true,\r\n            position: 'right',\r\n            formatter: '{c} 元'\r\n          }\r\n        }]\r\n      };\r\n\r\n      productRankingChartInstance.setOption(option);\r\n    };\r\n\r\n    // 渲染区域销售分布图\r\n    const renderRegionalDistributionChart = (data) => {\r\n      const option = {\r\n        title: {\r\n          text: data.title || '区域销售分布',\r\n          subtext: '按地区统计'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{b}: {c} 元 ({d}%)',\r\n          backgroundColor: 'rgba(255,255,255,0.8)',\r\n          borderColor: '#eee',\r\n          borderWidth: 1,\r\n          textStyle: {\r\n            color: '#333'\r\n          },\r\n          extraCssText: 'box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);'\r\n        },\r\n        legend: {\r\n          type: 'scroll',\r\n          orient: 'vertical',\r\n          right: 10,\r\n          top: 20,\r\n          bottom: 20,\r\n          textStyle: {\r\n            color: '#606266'\r\n          }\r\n        },\r\n        series: [{\r\n          name: '区域销售',\r\n          type: 'pie',\r\n          radius: ['40%', '70%'],\r\n          center: ['40%', '50%'],\r\n          avoidLabelOverlap: true,\r\n          itemStyle: {\r\n            borderRadius: 4,\r\n            borderColor: '#fff',\r\n            borderWidth: 2\r\n          },\r\n          label: {\r\n            show: false,\r\n            position: 'center'\r\n          },\r\n          emphasis: {\r\n            label: {\r\n              show: true,\r\n              fontSize: '18',\r\n              fontWeight: 'bold'\r\n            }\r\n          },\r\n          labelLine: {\r\n            show: false\r\n          },\r\n          data: data.regions ? data.regions.map((region, index) => {\r\n            return {\r\n              name: region,\r\n              value: data.values[index]\r\n            };\r\n          }) : []\r\n        }]\r\n      };\r\n\r\n      regionalDistributionChartInstance.setOption(option);\r\n    };\r\n\r\n    // 渲染订单状态分布图\r\n    const renderOrderStatusDistributionChart = (data) => {\r\n      const option = {\r\n        title: {\r\n          text: data.title || '订单状态分布',\r\n          subtext: '按状态统计'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{a} <br/>{b}: {c} ({d}%)',\r\n          backgroundColor: 'rgba(255,255,255,0.8)',\r\n          borderColor: '#eee',\r\n          borderWidth: 1,\r\n          textStyle: {\r\n            color: '#333'\r\n          },\r\n          extraCssText: 'box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 10,\r\n          top: 'center',\r\n          textStyle: {\r\n            color: '#606266'\r\n          }\r\n        },\r\n        series: [{\r\n          name: '订单状态',\r\n          type: 'pie',\r\n          radius: ['40%', '70%'],\r\n          avoidLabelOverlap: false,\r\n          itemStyle: {\r\n            borderRadius: 4,\r\n            borderColor: '#fff',\r\n            borderWidth: 2\r\n          },\r\n          label: {\r\n            show: false,\r\n            position: 'center'\r\n          },\r\n          emphasis: {\r\n            label: {\r\n              show: true,\r\n              fontSize: '18',\r\n              fontWeight: 'bold'\r\n            }\r\n          },\r\n          labelLine: {\r\n            show: false\r\n          },\r\n          data: data.data ? data.data.map(item => {\r\n            // 为不同状态设置不同颜色\r\n            const colorMap = {\r\n              '待处理': '#E6A23C',\r\n              '已发货': '#409EFF',\r\n              '已完成': '#67C23A',\r\n              '已退款': '#F56C6C'\r\n            };\r\n\r\n            return {\r\n              ...item,\r\n              itemStyle: {\r\n                color: colorMap[item.name] || undefined\r\n              }\r\n            };\r\n          }) : []\r\n        }]\r\n      };\r\n\r\n      orderStatusDistributionChartInstance.setOption(option);\r\n    };\r\n\r\n    // 格式化货币\r\n    const formatCurrency = (value) => {\r\n      if (value === undefined || value === null) return '¥0.00';\r\n      return '¥' + parseFloat(value).toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','); // 添加千位分隔符\r\n    };\r\n\r\n    // 组件挂载\r\n    onMounted(async () => {\r\n      await nextTick();\r\n      initCharts();\r\n      fetchDashboardData();\r\n\r\n      // 显示欢迎提示\r\n      ElNotification({\r\n        title: '数据仪表板已加载',\r\n        message: '欢迎使用平台数据可视化系统',\r\n        type: 'success',\r\n        duration: 3000\r\n      });\r\n    });\r\n\r\n    // 组件卸载\r\n    onUnmounted(() => {\r\n      // 销毁图表实例，避免内存泄漏\r\n      salesTrendChartInstance && salesTrendChartInstance.dispose();\r\n      merchantRankingChartInstance && merchantRankingChartInstance.dispose();\r\n      productRankingChartInstance && productRankingChartInstance.dispose();\r\n      regionalDistributionChartInstance && regionalDistributionChartInstance.dispose();\r\n      orderStatusDistributionChartInstance && orderStatusDistributionChartInstance.dispose();\r\n\r\n      // 移除窗口大小变化监听\r\n      window.removeEventListener('resize', handleResize);\r\n    });\r\n\r\n    return {\r\n      salesTrendChart,\r\n      merchantRankingChart,\r\n      productRankingChart,\r\n      regionalDistributionChart,\r\n      orderStatusDistributionChart,\r\n      loading,\r\n      timeFilter,\r\n      timeFilterLabel,\r\n      salesOverview,\r\n      fetchDashboardData,\r\n      formatCurrency,\r\n      selectedChartType,\r\n      isChartVisible,\r\n      handleChartTypeChange\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.admin-visualization-view {\r\n  padding: 20px;\r\n}\r\n\r\n.view-header {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.view-header h2 {\r\n  margin-top: 10px;\r\n}\r\n\r\n.admin-visualization-dashboard {\r\n  padding: 20px;\r\n}\r\n\r\n.dashboard-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.toolbar {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.dashboard-cards {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.data-card {\r\n  margin-bottom: 20px;\r\n  height: 100%;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.card-content {\r\n  text-align: center;\r\n  padding: 10px 0;\r\n}\r\n\r\n.chart-card {\r\n  margin-bottom: 20px;\r\n  height: 100%;\r\n}\r\n\r\n.chart-container {\r\n  height: 350px;\r\n  width: 100%;\r\n}\r\n\r\n.chart {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n.dashboard-charts {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}