{"ast":null,"code":"import axios from 'axios';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nexport default {\n  name: 'OrderManagement',\n  data() {\n    return {\n      orders: [],\n      merchants: [],\n      // 存储商家列表\n      customers: [],\n      // 存储顾客列表\n      orderForm: {\n        orderNumber: '',\n        totalAmount: 0,\n        orderStatus: 'pending',\n        merchantId: null,\n        customerId: null\n      },\n      selectedOrder: null,\n      dialogVisible: false\n    };\n  },\n  methods: {\n    getStatusTagType(status) {\n      const map = {\n        pending: 'warning',\n        shipped: 'primary',\n        completed: 'success',\n        refunded: 'danger'\n      };\n      return map[status] || '';\n    },\n    getStatusText(status) {\n      const map = {\n        pending: '待处理',\n        shipped: '已发货',\n        completed: '已完成',\n        refunded: '已退款'\n      };\n      return map[status] || status;\n    },\n    fetchOrders() {\n      axios.get('http://localhost:8080/api/orders').then(response => {\n        this.orders = response.data;\n      }).catch(error => {\n        ElMessage.error('获取订单列表失败: ' + error.message);\n        console.error('获取订单时出错:', error);\n      });\n    },\n    fetchMerchants() {\n      axios.get('http://localhost:8080/api/merchants') // 假设有一个 API 获取商家列表\n      .then(response => {\n        this.merchants = response.data;\n      }).catch(error => {\n        ElMessage.error('获取商家列表失败: ' + error.message);\n        console.error('获取商家时出错:', error);\n      });\n    },\n    fetchCustomers() {\n      axios.get('http://localhost:8080/api/customers') // 假设有一个 API 获取顾客列表\n      .then(response => {\n        this.customers = response.data;\n      }).catch(error => {\n        ElMessage.error('获取顾客列表失败: ' + error.message);\n        console.error('获取顾客时出错:', error);\n      });\n    },\n    showOrderForm() {\n      this.selectedOrder = null;\n      this.orderForm = {\n        orderNumber: '',\n        totalAmount: 0,\n        orderStatus: 'pending',\n        merchantId: null,\n        customerId: null\n      };\n      this.dialogVisible = true;\n    },\n    editOrder(order) {\n      this.selectedOrder = order;\n      this.orderForm = {\n        orderNumber: order.orderNumber,\n        totalAmount: order.totalAmount,\n        orderStatus: order.orderStatus,\n        merchantId: order.merchantId,\n        customerId: order.customerId\n      };\n      this.dialogVisible = true;\n    },\n    clearForm() {\n      this.selectedOrder = null;\n      this.orderForm = {\n        orderNumber: '',\n        totalAmount: 0,\n        orderStatus: 'pending',\n        merchantId: null,\n        customerId: null\n      };\n    },\n    saveOrder() {\n      const url = this.selectedOrder ? `http://localhost:8080/api/orders/${this.selectedOrder.orderId}` : 'http://localhost:8080/api/orders';\n      const method = this.selectedOrder ? 'put' : 'post';\n      const orderData = {\n        merchantId: this.orderForm.merchantId,\n        customerId: this.orderForm.customerId,\n        orderNumber: this.orderForm.orderNumber,\n        totalAmount: this.orderForm.totalAmount,\n        orderStatus: this.orderForm.orderStatus\n      };\n      axios[method](url, orderData).then(() => {\n        ElMessage.success(this.selectedOrder ? '订单更新成功' : '订单添加成功');\n        this.fetchOrders();\n        this.dialogVisible = false;\n      }).catch(error => {\n        ElMessage.error('操作失败: ' + error.message);\n        console.error('保存订单时出错:', error);\n      });\n    },\n    confirmDelete(orderId) {\n      ElMessageBox.confirm('确定要删除这个订单吗？此操作不可撤销。', '警告', {\n        confirmButtonText: '确认删除',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.deleteOrder(orderId);\n      }).catch(() => {\n        ElMessage.info('已取消删除');\n      });\n    },\n    deleteOrder(orderId) {\n      axios.delete(`http://localhost:8080/api/orders/${orderId}`).then(() => {\n        ElMessage.success('订单删除成功');\n        this.fetchOrders();\n      }).catch(error => {\n        ElMessage.error('删除失败: ' + error.message);\n        console.error('删除订单时出错:', error);\n      });\n    }\n  },\n  mounted() {\n    this.fetchOrders();\n  }\n};","map":{"version":3,"names":["axios","ElMessage","ElMessageBox","name","data","orders","merchants","customers","orderForm","orderNumber","totalAmount","orderStatus","merchantId","customerId","selectedOrder","dialogVisible","methods","getStatusTagType","status","map","pending","shipped","completed","refunded","getStatusText","fetchOrders","get","then","response","catch","error","message","console","fetchMerchants","fetchCustomers","showOrderForm","editOrder","order","clearForm","saveOrder","url","orderId","method","orderData","success","confirmDelete","confirm","confirmButtonText","cancelButtonText","type","deleteOrder","info","delete","mounted"],"sources":["E:\\ecms\\ecmsvue\\src\\views\\Orders.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>订单管理</h1>\r\n    <el-button type=\"primary\" @click=\"showOrderForm\" style=\"margin-bottom: 20px;\">添加订单</el-button>\r\n\r\n    <!-- 订单表格 -->\r\n    <el-table :data=\"orders\" style=\"width: 100%;\">\r\n      <el-table-column prop=\"orderNumber\" label=\"订单编号\" />\r\n      <el-table-column prop=\"totalAmount\" label=\"总金额\">\r\n        <template #default=\"scope\">\r\n          ¥{{ scope.row.totalAmount.toFixed(2) }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"orderStatus\" label=\"状态\">\r\n        <template #default=\"scope\">\r\n          <el-tag :type=\"getStatusTagType(scope.row.orderStatus)\">\r\n            {{ getStatusText(scope.row.orderStatus) }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\">\r\n        <template #default=\"scope\">\r\n          <el-button size=\"small\" @click=\"editOrder(scope.row)\">编辑</el-button>\r\n          <el-button size=\"small\" type=\"danger\" @click=\"confirmDelete(scope.row.orderId)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 订单表单对话框 -->\r\n    <el-dialog\r\n        v-model=\"dialogVisible\"\r\n        :title=\"selectedOrder ? '编辑订单' : '添加订单'\"\r\n        width=\"50%\"\r\n        @close=\"clearForm\"\r\n    >\r\n      <el-form :model=\"orderForm\" label-width=\"120px\" size=\"medium\">\r\n        <el-form-item label=\"订单编号\" prop=\"orderNumber\">\r\n          <el-input v-model=\"orderForm.orderNumber\" placeholder=\"请输入订单编号\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"总金额\" prop=\"totalAmount\">\r\n          <el-input-number v-model=\"orderForm.totalAmount\" :min=\"0\" :precision=\"2\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\" prop=\"orderStatus\">\r\n          <el-select v-model=\"orderForm.orderStatus\" placeholder=\"选择状态\">\r\n            <el-option label=\"待处理\" value=\"pending\" />\r\n            <el-option label=\"已发货\" value=\"shipped\" />\r\n            <el-option label=\"已完成\" value=\"completed\" />\r\n            <el-option label=\"已退款\" value=\"refunded\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"商家\" prop=\"merchantId\">\r\n          <el-select v-model=\"orderForm.merchantId\" placeholder=\"选择商家\">\r\n            <el-option v-for=\"merchant in merchants\" :key=\"merchant.merchantId\" :label=\"merchant.merchantName\" :value=\"merchant.merchantId\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"顾客\" prop=\"customerId\">\r\n          <el-select v-model=\"orderForm.customerId\" placeholder=\"选择顾客\">\r\n            <el-option v-for=\"customer in customers\" :key=\"customer.customerId\" :label=\"customer.phone\" :value=\"customer.customerId\" />\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"saveOrder\">保存</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport {ElMessage, ElMessageBox} from 'element-plus';\r\n\r\nexport default {\r\n  name: 'OrderManagement',\r\n  data() {\r\n    return {\r\n      orders: [],\r\n      merchants: [], // 存储商家列表\r\n      customers: [], // 存储顾客列表\r\n      orderForm: {\r\n        orderNumber: '',\r\n        totalAmount: 0,\r\n        orderStatus: 'pending',\r\n        merchantId: null,\r\n        customerId: null\r\n      },\r\n      selectedOrder: null,\r\n      dialogVisible: false\r\n    };\r\n  },\r\n  methods: {\r\n    getStatusTagType(status) {\r\n      const map = {\r\n        pending: 'warning',\r\n        shipped: 'primary',\r\n        completed: 'success',\r\n        refunded: 'danger'\r\n      };\r\n      return map[status] || '';\r\n    },\r\n    getStatusText(status) {\r\n      const map = {\r\n        pending: '待处理',\r\n        shipped: '已发货',\r\n        completed: '已完成',\r\n        refunded: '已退款'\r\n      };\r\n      return map[status] || status;\r\n    },\r\n    fetchOrders() {\r\n      axios.get('http://localhost:8080/api/orders')\r\n          .then(response => {\r\n            this.orders = response.data;\r\n          })\r\n          .catch(error => {\r\n            ElMessage.error('获取订单列表失败: ' + error.message);\r\n            console.error('获取订单时出错:', error);\r\n          });\r\n    },\r\n    fetchMerchants() {\r\n      axios.get('http://localhost:8080/api/merchants') // 假设有一个 API 获取商家列表\r\n          .then(response => {\r\n            this.merchants = response.data;\r\n          })\r\n          .catch(error => {\r\n            ElMessage.error('获取商家列表失败: ' + error.message);\r\n            console.error('获取商家时出错:', error);\r\n          });\r\n    },\r\n    fetchCustomers() {\r\n      axios.get('http://localhost:8080/api/customers') // 假设有一个 API 获取顾客列表\r\n          .then(response => {\r\n            this.customers = response.data;\r\n          })\r\n          .catch(error => {\r\n            ElMessage.error('获取顾客列表失败: ' + error.message);\r\n            console.error('获取顾客时出错:', error);\r\n          });\r\n    },\r\n    showOrderForm() {\r\n      this.selectedOrder = null;\r\n      this.orderForm = {\r\n        orderNumber: '',\r\n        totalAmount: 0,\r\n        orderStatus: 'pending',\r\n        merchantId: null,\r\n        customerId: null\r\n      };\r\n      this.dialogVisible = true;\r\n    },\r\n    editOrder(order) {\r\n      this.selectedOrder = order;\r\n      this.orderForm = {\r\n        orderNumber: order.orderNumber,\r\n        totalAmount: order.totalAmount,\r\n        orderStatus: order.orderStatus,\r\n        merchantId: order.merchantId,\r\n        customerId: order.customerId\r\n      };\r\n      this.dialogVisible = true;\r\n    },\r\n    clearForm() {\r\n      this.selectedOrder = null;\r\n      this.orderForm = {\r\n        orderNumber: '',\r\n        totalAmount: 0,\r\n        orderStatus: 'pending',\r\n        merchantId: null,\r\n        customerId: null\r\n      };\r\n    },\r\n    saveOrder() {\r\n      const url = this.selectedOrder\r\n          ? `http://localhost:8080/api/orders/${this.selectedOrder.orderId}`\r\n          : 'http://localhost:8080/api/orders';\r\n\r\n      const method = this.selectedOrder ? 'put' : 'post';\r\n\r\n      const orderData = {\r\n        merchantId: this.orderForm.merchantId,\r\n        customerId: this.orderForm.customerId,\r\n        orderNumber: this.orderForm.orderNumber,\r\n        totalAmount: this.orderForm.totalAmount,\r\n        orderStatus: this.orderForm.orderStatus\r\n      };\r\n\r\n      axios[method](url, orderData)\r\n          .then(() => {\r\n            ElMessage.success(this.selectedOrder ? '订单更新成功' : '订单添加成功');\r\n            this.fetchOrders();\r\n            this.dialogVisible = false;\r\n          })\r\n          .catch(error => {\r\n            ElMessage.error('操作失败: ' + error.message);\r\n            console.error('保存订单时出错:', error);\r\n          });\r\n    },\r\n    confirmDelete(orderId) {\r\n      ElMessageBox.confirm(\r\n          '确定要删除这个订单吗？此操作不可撤销。',\r\n          '警告',\r\n          {\r\n            confirmButtonText: '确认删除',\r\n            cancelButtonText: '取消',\r\n            type: 'warning',\r\n          }\r\n      )\r\n          .then(() => {\r\n            this.deleteOrder(orderId);\r\n          })\r\n          .catch(() => {\r\n            ElMessage.info('已取消删除');\r\n          });\r\n    },\r\n    deleteOrder(orderId) {\r\n      axios.delete(`http://localhost:8080/api/orders/${orderId}`)\r\n          .then(() => {\r\n            ElMessage.success('订单删除成功');\r\n            this.fetchOrders();\r\n          })\r\n          .catch(error => {\r\n            ElMessage.error('删除失败: ' + error.message);\r\n            console.error('删除订单时出错:', error);\r\n          });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchOrders();\r\n\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.el-table {\r\n  width: 100%;\r\n}\r\n\r\n.dialog-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}