{"ast":null,"code":"import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home-container\"\n};\nconst _hoisted_2 = {\n  ref: \"title\",\n  class: \"title\"\n};\nconst _hoisted_3 = {\n  class: \"notice-list\"\n};\nconst _hoisted_4 = {\n  ref: \"notice1\"\n};\nconst _hoisted_5 = {\n  ref: \"notice2\"\n};\nconst _hoisted_6 = {\n  ref: \"notice3\"\n};\nconst _hoisted_7 = {\n  ref: \"userInfo\",\n  class: \"user-info\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(), _createBlock(_resolveDynamicComponent($setup.navbarComponent))), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" 添加了ref以便GSAP可以找到它们 \"), _createElementVNode(\"h1\", _hoisted_2, \"欢迎来到首页!\", 512 /* NEED_PATCH */), _createElementVNode(\"p\", {\n    ref: \"welcomeMsg\",\n    class: \"welcome-msg\"\n  }, \" 欢迎回来，\" + _toDisplayString($setup.currentUser?.username || '用户') + \"！ \", 513 /* TEXT, NEED_PATCH */), _createElementVNode(\"p\", {\n    ref: \"timeMsg\",\n    class: \"time-msg\"\n  }, \"当前时间：\" + _toDisplayString($setup.currentTime), 513 /* TEXT, NEED_PATCH */), _createCommentVNode(\" 公告栏 \"), _createVNode(_component_el_card, {\n    ref: \"noticeBoard\",\n    class: \"notice-board\",\n    shadow: \"hover\"\n  }, {\n    default: _withCtx(() => [_cache[0] || (_cache[0] = _createElementVNode(\"h3\", null, \"📢 系统公告\", -1 /* HOISTED */)), _createElementVNode(\"ul\", _hoisted_3, [_createElementVNode(\"li\", _hoisted_4, \"🛠 系统维护时间：每周日凌晨 2:00 - 4:00\", 512 /* NEED_PATCH */), _createElementVNode(\"li\", _hoisted_5, \"📊 数据将在每天晚上自动备份\", 512 /* NEED_PATCH */), _createElementVNode(\"li\", _hoisted_6, \"📌 如遇页面问题，请刷新或重新登录\", 512 /* NEED_PATCH */)])]),\n    _: 1 /* STABLE */\n  }, 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_7, [$setup.currentUser ? (_openBlock(), _createBlock(_component_el_tag, {\n    key: 0,\n    type: \"success\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" 你好，你的\" + _toDisplayString($setup.currentUser.role) + \"ID为: \" + _toDisplayString($setup.currentUser.id), 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  })) : (_openBlock(), _createBlock(_component_el_tag, {\n    key: 1,\n    type: \"info\"\n  }, {\n    default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\" 未登录 \")])),\n    _: 1 /* STABLE */\n  }))], 512 /* NEED_PATCH */)])]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_createBlock","_resolveDynamicComponent","$setup","navbarComponent","_createElementVNode","_hoisted_1","_createCommentVNode","_hoisted_2","_toDisplayString","currentUser","username","currentTime","_createVNode","_component_el_card","shadow","default","_withCtx","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_","_hoisted_7","_component_el_tag","key","type","_createTextVNode","role","id","_cache"],"sources":["D:\\code_new\\ecms\\ecmsvue\\src\\views\\Home.vue"],"sourcesContent":["<template>\n  <div>\n    <component :is=\"navbarComponent\" />\n    <div class=\"home-container\">\n      <!-- 添加了ref以便GSAP可以找到它们 -->\n      <h1 ref=\"title\" class=\"title\">欢迎来到首页!</h1>\n      <p ref=\"welcomeMsg\" class=\"welcome-msg\">\n        欢迎回来，{{ currentUser?.username || '用户' }}！\n      </p>\n      <p ref=\"timeMsg\" class=\"time-msg\">当前时间：{{ currentTime }}</p>\n\n      <!-- 公告栏 -->\n      <el-card ref=\"noticeBoard\" class=\"notice-board\" shadow=\"hover\">\n        <h3>📢 系统公告</h3>\n        <ul class=\"notice-list\">\n          <li ref=\"notice1\">🛠 系统维护时间：每周日凌晨 2:00 - 4:00</li>\n          <li ref=\"notice2\">📊 数据将在每天晚上自动备份</li>\n          <li ref=\"notice3\">📌 如遇页面问题，请刷新或重新登录</li>\n        </ul>\n      </el-card>\n\n      <div ref=\"userInfo\" class=\"user-info\">\n        <el-tag type=\"success\" v-if=\"currentUser\">\n          你好，你的{{ currentUser.role }}ID为: {{ currentUser.id }}\n        </el-tag>\n        <el-tag type=\"info\" v-else>\n          未登录\n        </el-tag>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport AppMerchantNavbar from '../components/MerchantNavbar.vue';\nimport AppAdminNavbar from '../components/AdminNavbar.vue';\nimport gsap from 'gsap'; // 导入GSAP\n\nexport default {\n  name: 'HomePage',\n  components: {\n    AppMerchantNavbar,\n    AppAdminNavbar\n  },\n  setup() {\n    // 使用组合式API重构组件\n    const title = ref(null);\n    const welcomeMsg = ref(null);\n    const timeMsg = ref(null);\n    const noticeBoard = ref(null);\n    const userInfo = ref(null);\n    const notice1 = ref(null);\n    const notice2 = ref(null);\n    const notice3 = ref(null);\n\n    const currentUser = ref(null);\n    const currentTime = ref('');\n\n    // 检查是否首次访问\n    const checkFirstVisit = () => {\n      const visited = sessionStorage.getItem('homeVisited');\n      if (!visited) {\n        sessionStorage.setItem('homeVisited', 'true');\n        return true;\n      }\n      return false;\n    };\n\n    // 获取当前用户信息\n    const getCurrentUser = () => {\n      const userData = localStorage.getItem('user');\n      if (userData) {\n        try {\n          const parsedUserData = JSON.parse(userData);\n          if (parsedUserData.success) {\n            currentUser.value = {\n              role: parsedUserData.role,\n              id: parsedUserData.userid,\n              token: parsedUserData.token,\n              username: parsedUserData.username\n            };\n          } else {\n            console.error('用户信息不正确:', parsedUserData);\n          }\n        } catch (e) {\n          console.error('解析用户信息失败:', e);\n        }\n      }\n    };\n\n    // 更新时间\n    const updateTime = () => {\n      const now = new Date();\n      currentTime.value = now.toLocaleString();\n    };\n\n    // 执行动画\n    const playEntranceAnimation = () => {\n      // 设置初始状态 - 所有元素隐藏\n      gsap.set([title.value, welcomeMsg.value, timeMsg.value, noticeBoard.value, userInfo.value], {\n        opacity: 0\n      });\n\n      // 设置各个元素的初始位置\n      gsap.set(title.value, { y: -50 });\n      gsap.set(welcomeMsg.value, { x: -50 });\n      gsap.set(timeMsg.value, { x: 50 });\n      gsap.set(noticeBoard.value, { scale: 0.8 });\n      gsap.set(userInfo.value, { y: -30 });\n      gsap.set([notice1.value, notice2.value, notice3.value], { x: 20, opacity: 0 });\n\n      // 创建动画时间线\n      const tl = gsap.timeline();\n\n      // 添加动画序列\n      // 标题动画\n      tl.to(title.value, {\n        opacity: 1,\n        y: 0,\n        duration: 0.8,\n        ease: \"power3.out\"\n      });\n\n      // 欢迎消息动画\n      tl.to(welcomeMsg.value, {\n        opacity: 1,\n        x: 0,\n        duration: 0.6,\n        ease: \"power2.out\"\n      }, \"-=0.3\");\n\n      // 时间消息动画\n      tl.to(timeMsg.value, {\n        opacity: 1,\n        x: 0,\n        duration: 0.6,\n        ease: \"power2.out\"\n      }, \"-=0.4\");\n\n      // 用户信息标签动画\n      tl.to(userInfo.value, {\n        opacity: 1,\n        y: 0,\n        duration: 0.5,\n        ease: \"back.out(1.7)\"\n      }, \"-=0.5\");\n\n      // 公告栏动画\n      tl.to(noticeBoard.value, {\n        opacity: 1,\n        scale: 1,\n        duration: 0.8,\n        ease: \"back.out(1.2)\"\n      }, \"-=0.3\");\n\n      // 公告列表项动画\n      tl.to([notice1.value, notice2.value, notice3.value], {\n        opacity: 1,\n        x: 0,\n        duration: 0.5,\n        stagger: 0.15,\n        ease: \"power1.out\"\n      }, \"-=0.5\");\n    };\n\n    onMounted(() => {\n      getCurrentUser();\n      updateTime();\n      setInterval(updateTime, 1000);\n\n      // 检查是否首次访问并播放动画\n      const isFirstVisit = checkFirstVisit();\n      if (isFirstVisit) {\n        playEntranceAnimation();\n      } else {\n        // 非首次访问，设置所有元素为可见状态\n        gsap.set([\n          title.value,\n          welcomeMsg.value,\n          timeMsg.value,\n          noticeBoard.value,\n          userInfo.value,\n          notice1.value,\n          notice2.value,\n          notice3.value\n        ], { opacity: 1 });\n      }\n    });\n\n    // 计算当前应该使用的导航栏组件\n    \n    const navbarComponent = computed(() => {\n      if (currentUser.value && currentUser.value.role === 'admin') {\n        return 'AppAdminNavbar';\n      }\n      return 'AppMerchantNavbar';\n    });\n\n    return {\n      title,\n      welcomeMsg,\n      timeMsg,\n      noticeBoard,\n      userInfo,\n      notice1,\n      notice2,\n      notice3,\n      currentUser,\n      currentTime,\n      navbarComponent\n    };\n  }\n};\n</script>\n\n<style scoped>\n.home-container {\n  position: relative;\n  padding: 20px;\n  text-align: center;\n}\n\n.title {\n  font-size: 36px;\n  color: #409EFF;\n  margin-bottom: 20px;\n}\n\n.welcome-msg {\n  font-size: 20px;\n  margin: 10px 0;\n}\n\n.time-msg {\n  font-size: 16px;\n  color: #888;\n  margin-bottom: 30px;\n}\n\n.user-info {\n  position: absolute;\n  top: 20px;\n  right: 20px;\n}\n\n.notice-board {\n  max-width: 600px;\n  margin: 0 auto;\n  text-align: left;\n  padding: 20px;\n  border-left: 5px solid #409EFF;\n  transition: transform 0.3s ease;\n}\n\n.notice-board:hover {\n  transform: translateY(-5px);\n}\n\n.notice-list {\n  list-style: none;\n  padding-left: 0;\n  margin-top: 10px;\n}\n\n.notice-list li {\n  margin-bottom: 10px;\n  font-size: 16px;\n  color: #333;\n  padding: 5px 0;\n}\n\n/* 响应式优化 */\n@media (max-width: 768px) {\n  .user-info {\n    position: static;\n    margin-top: 20px;\n    text-align: center;\n  }\n\n  .notice-board {\n    width: 90%;\n  }\n}\n</style>"],"mappings":";;EAGSA,KAAK,EAAC;AAAgB;;EAErBC,GAAG,EAAC,OAAO;EAACD,KAAK,EAAC;;;EAShBA,KAAK,EAAC;AAAa;;EACjBC,GAAG,EAAC;AAAS;;EACbA,GAAG,EAAC;AAAS;;EACbA,GAAG,EAAC;AAAS;;EAIhBA,GAAG,EAAC,UAAU;EAACD,KAAK,EAAC;;;;;uBApB9BE,mBAAA,CA6BM,e,cA5BJC,YAAA,CAAmCC,wBAFvC,CAEoBC,MAAA,CAAAC,eAAe,KAC/BC,mBAAA,CA0BM,OA1BNC,UA0BM,GAzBJC,mBAAA,wBAA2B,EAC3BF,mBAAA,CAA0C,MAA1CG,UAA0C,EAAZ,SAAO,yBACrCH,mBAAA,CAEI;IAFDN,GAAG,EAAC,YAAY;IAACD,KAAK,EAAC;KAAc,QACjC,GAAAW,gBAAA,CAAGN,MAAA,CAAAO,WAAW,EAAEC,QAAQ,YAAW,IAC1C,+BACAN,mBAAA,CAA4D;IAAzDN,GAAG,EAAC,SAAS;IAACD,KAAK,EAAC;KAAW,OAAK,GAAAW,gBAAA,CAAGN,MAAA,CAAAS,WAAW,gCAErDL,mBAAA,SAAY,EACZM,YAAA,CAOUC,kBAAA;IAPDf,GAAG,EAAC,aAAa;IAACD,KAAK,EAAC,cAAc;IAACiB,MAAM,EAAC;;IAZ7DC,OAAA,EAAAC,QAAA,CAaQ,MAAgB,C,0BAAhBZ,mBAAA,CAAgB,YAAZ,SAAO,sBACXA,mBAAA,CAIK,MAJLa,UAIK,GAHHb,mBAAA,CAAkD,MAAlDc,UAAkD,EAAhC,6BAA2B,yBAC7Cd,mBAAA,CAAsC,MAAtCe,UAAsC,EAApB,iBAAe,yBACjCf,mBAAA,CAAyC,MAAzCgB,UAAyC,EAAvB,oBAAkB,wB;IAjB9CC,CAAA;4BAqBMjB,mBAAA,CAOM,OAPNkB,UAOM,GANyBpB,MAAA,CAAAO,WAAW,I,cAAxCT,YAAA,CAESuB,iBAAA;IAxBjBC,GAAA;IAsBgBC,IAAI,EAAC;;IAtBrBV,OAAA,EAAAC,QAAA,CAsBkD,MACnC,CAvBfU,gBAAA,CAsBkD,QACnC,GAAAlB,gBAAA,CAAGN,MAAA,CAAAO,WAAW,CAACkB,IAAI,IAAG,OAAK,GAAAnB,gBAAA,CAAGN,MAAA,CAAAO,WAAW,CAACmB,EAAE,iB;IAvB3DP,CAAA;uBAyBQrB,YAAA,CAESuB,iBAAA;IA3BjBC,GAAA;IAyBgBC,IAAI,EAAC;;IAzBrBV,OAAA,EAAAC,QAAA,CAyBmC,MAE3Ba,MAAA,QAAAA,MAAA,OA3BRH,gBAAA,CAyBmC,OAE3B,E;IA3BRL,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}