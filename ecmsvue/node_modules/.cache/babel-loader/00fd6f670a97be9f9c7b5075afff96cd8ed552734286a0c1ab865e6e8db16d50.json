{"ast":null,"code":"export default {\n  name: 'OrderManagement',\n  // 修改组件名称为多单词\n  data() {\n    return {\n      orders: [],\n      isOrderFormVisible: false,\n      orderForm: {\n        orderNumber: '',\n        totalAmount: 0,\n        orderStatus: 'pending'\n      },\n      selectedOrder: null\n    };\n  },\n  methods: {\n    fetchOrders() {\n      fetch('http://localhost:8080/api/orders').then(response => response.json()).then(data => {\n        this.orders = data;\n      }).catch(error => {\n        console.error('获取订单时出错:', error);\n      });\n    },\n    showOrderForm() {\n      this.selectedOrder = null;\n      this.orderForm = {\n        orderNumber: '',\n        totalAmount: 0,\n        orderStatus: 'pending'\n      };\n      this.isOrderFormVisible = true;\n    },\n    editOrder(order) {\n      this.selectedOrder = order;\n      this.orderForm = {\n        ...order\n      };\n      this.isOrderFormVisible = true;\n    },\n    handleOrderFormClose() {\n      this.isOrderFormVisible = false;\n    },\n    submitOrderForm() {\n      const method = this.selectedOrder ? 'PUT' : 'POST';\n      const url = this.selectedOrder ? `http://localhost:8080/api/orders/${this.selectedOrder.orderId}` : 'http://localhost:8080/api/orders';\n      fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.orderForm)\n      }).then(() => {\n        this.fetchOrders();\n        this.handleOrderFormClose();\n      });\n    },\n    deleteOrder(orderId) {\n      fetch(`http://localhost:8080/api/orders/${orderId}`, {\n        method: 'DELETE'\n      }).then(() => {\n        this.fetchOrders();\n      });\n    }\n  },\n  mounted() {\n    this.fetchOrders();\n  }\n};","map":{"version":3,"names":["name","data","orders","isOrderFormVisible","orderForm","orderNumber","totalAmount","orderStatus","selectedOrder","methods","fetchOrders","fetch","then","response","json","catch","error","console","showOrderForm","editOrder","order","handleOrderFormClose","submitOrderForm","method","url","orderId","headers","body","JSON","stringify","deleteOrder","mounted"],"sources":["E:\\ecms\\ecmsvue\\src\\views\\Orders.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>订单管理</h1>\r\n    <el-button type=\"primary\" @click=\"showOrderForm\" style=\"margin-bottom: 20px;\">添加订单</el-button>\r\n    <el-table :data=\"orders\" style=\"width: 100%;\">\r\n      <el-table-column prop=\"orderNumber\" label=\"订单编号\" />\r\n      <el-table-column prop=\"totalAmount\" label=\"总金额\" />\r\n      <el-table-column prop=\"orderStatus\" label=\"状态\" />\r\n      <el-table-column label=\"操作\">\r\n        <template #default=\"scope\">\r\n          <el-button size=\"mini\" @click=\"editOrder(scope.row)\">编辑</el-button>\r\n          <el-button size=\"mini\" type=\"danger\" @click=\"deleteOrder(scope.row.orderId)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <el-dialog :visible=\"isOrderFormVisible\" title=\"订单表单\" @close=\"handleOrderFormClose\" width=\"600px\">\r\n      <el-form :model=\"orderForm\" label-width=\"120px\" size=\"medium\">\r\n        <el-form-item label=\"订单编号\">\r\n          <el-input v-model=\"orderForm.orderNumber\" placeholder=\"请输入订单编号\" required />\r\n        </el-form-item>\r\n        <el-form-item label=\"总金额\">\r\n          <el-input type=\"number\" v-model=\"orderForm.totalAmount\" placeholder=\"请输入总金额\" required />\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\">\r\n          <el-select v-model=\"orderForm.orderStatus\" placeholder=\"选择状态\" required>\r\n            <el-option label=\"待处理\" value=\"pending\" />\r\n            <el-option label=\"已发货\" value=\"shipped\" />\r\n            <el-option label=\"已完成\" value=\"completed\" />\r\n            <el-option label=\"已退款\" value=\"refunded\" />\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"handleOrderFormClose\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitOrderForm\">保存</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'OrderManagement', // 修改组件名称为多单词\r\n  data() {\r\n    return {\r\n      orders: [],\r\n      isOrderFormVisible: false,\r\n      orderForm: {\r\n        orderNumber: '',\r\n        totalAmount: 0,\r\n        orderStatus: 'pending'\r\n      },\r\n      selectedOrder: null\r\n    };\r\n  },\r\n  methods: {\r\n    fetchOrders() {\r\n      fetch('http://localhost:8080/api/orders')\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            this.orders = data;\r\n          })\r\n          .catch(error => {\r\n            console.error('获取订单时出错:', error);\r\n          });\r\n    },\r\n    showOrderForm() {\r\n      this.selectedOrder = null;\r\n      this.orderForm = {\r\n        orderNumber: '',\r\n        totalAmount: 0,\r\n        orderStatus: 'pending'\r\n      };\r\n      this.isOrderFormVisible = true;\r\n    },\r\n    editOrder(order) {\r\n      this.selectedOrder = order;\r\n      this.orderForm = {...order};\r\n      this.isOrderFormVisible = true;\r\n    },\r\n    handleOrderFormClose() {\r\n      this.isOrderFormVisible = false;\r\n    },\r\n    submitOrderForm() {\r\n      const method = this.selectedOrder ? 'PUT' : 'POST';\r\n      const url = this.selectedOrder ? `http://localhost:8080/api/orders/${this.selectedOrder.orderId}` : 'http://localhost:8080/api/orders';\r\n\r\n      fetch(url, {\r\n        method,\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(this.orderForm)\r\n      }).then(() => {\r\n        this.fetchOrders();\r\n        this.handleOrderFormClose();\r\n      });\r\n    },\r\n    deleteOrder(orderId) {\r\n      fetch(`http://localhost:8080/api/orders/${orderId}`, {\r\n        method: 'DELETE'\r\n      }).then(() => {\r\n        this.fetchOrders();\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchOrders();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.el-table {\r\n  width: 100%; /* 确保表格占满父容器 */\r\n}\r\n</style>\r\n"],"mappings":"AA0CA,eAAe;EACbA,IAAI,EAAE,iBAAiB;EAAE;EACzBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,kBAAkB,EAAE,KAAK;MACzBC,SAAS,EAAE;QACTC,WAAW,EAAE,EAAE;QACfC,WAAW,EAAE,CAAC;QACdC,WAAW,EAAE;MACf,CAAC;MACDC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZC,KAAK,CAAC,kCAAkC,EACnCC,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAACX,IAAG,IAAK;QACZ,IAAI,CAACC,MAAK,GAAID,IAAI;MACpB,CAAC,EACAc,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAClC,CAAC,CAAC;IACR,CAAC;IACDE,aAAaA,CAAA,EAAG;MACd,IAAI,CAACV,aAAY,GAAI,IAAI;MACzB,IAAI,CAACJ,SAAQ,GAAI;QACfC,WAAW,EAAE,EAAE;QACfC,WAAW,EAAE,CAAC;QACdC,WAAW,EAAE;MACf,CAAC;MACD,IAAI,CAACJ,kBAAiB,GAAI,IAAI;IAChC,CAAC;IACDgB,SAASA,CAACC,KAAK,EAAE;MACf,IAAI,CAACZ,aAAY,GAAIY,KAAK;MAC1B,IAAI,CAAChB,SAAQ,GAAI;QAAC,GAAGgB;MAAK,CAAC;MAC3B,IAAI,CAACjB,kBAAiB,GAAI,IAAI;IAChC,CAAC;IACDkB,oBAAoBA,CAAA,EAAG;MACrB,IAAI,CAAClB,kBAAiB,GAAI,KAAK;IACjC,CAAC;IACDmB,eAAeA,CAAA,EAAG;MAChB,MAAMC,MAAK,GAAI,IAAI,CAACf,aAAY,GAAI,KAAI,GAAI,MAAM;MAClD,MAAMgB,GAAE,GAAI,IAAI,CAAChB,aAAY,GAAI,oCAAoC,IAAI,CAACA,aAAa,CAACiB,OAAO,EAAC,GAAI,kCAAkC;MAEtId,KAAK,CAACa,GAAG,EAAE;QACTD,MAAM;QACNG,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACzB,SAAS;MACrC,CAAC,CAAC,CAACQ,IAAI,CAAC,MAAM;QACZ,IAAI,CAACF,WAAW,CAAC,CAAC;QAClB,IAAI,CAACW,oBAAoB,CAAC,CAAC;MAC7B,CAAC,CAAC;IACJ,CAAC;IACDS,WAAWA,CAACL,OAAO,EAAE;MACnBd,KAAK,CAAC,oCAAoCc,OAAO,EAAE,EAAE;QACnDF,MAAM,EAAE;MACV,CAAC,CAAC,CAACX,IAAI,CAAC,MAAM;QACZ,IAAI,CAACF,WAAW,CAAC,CAAC;MACpB,CAAC,CAAC;IACJ;EACF,CAAC;EACDqB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACrB,WAAW,CAAC,CAAC;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}