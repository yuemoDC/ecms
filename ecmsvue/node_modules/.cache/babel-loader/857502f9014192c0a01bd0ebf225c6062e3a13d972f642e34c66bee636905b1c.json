{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[9] || (_cache[9] = _createElementVNode(\"h1\", null, \"产品管理\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $options.showProductForm,\n    style: {\n      \"margin-bottom\": \"20px\"\n    }\n  }, {\n    default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"添加产品\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createCommentVNode(\" 产品表格 \"), _createVNode(_component_el_table, {\n    data: $data.products,\n    style: {\n      \"width\": \"100%\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"productName\",\n      label: \"产品名称\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"price\",\n      label: \"价格\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"status\",\n      label: \"状态\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"操作\"\n    }, {\n      default: _withCtx(scope => [_createVNode(_component_el_button, {\n        size: \"small\",\n        onClick: $event => $options.editProduct(scope.row)\n      }, {\n        default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\"编辑\")])),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        size: \"small\",\n        type: \"danger\",\n        onClick: $event => $options.deleteProduct(scope.row.productId)\n      }, {\n        default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\"删除\")])),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"]), _createCommentVNode(\" 产品表单对话框 \"), _createVNode(_component_el_dialog, {\n    visible: $data.isProductFormVisible,\n    \"onUpdate:visible\": _cache[4] || (_cache[4] = $event => $data.isProductFormVisible = $event),\n    title: \"产品表单\",\n    onClose: $options.clearForm\n  }, {\n    footer: _withCtx(() => [_createVNode(_component_el_button, {\n      onClick: $options.clearForm\n    }, {\n      default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\"取消\")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $options.saveProduct\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($data.selectedProduct ? '更新产品' : '添加产品'), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      model: $data.productForm,\n      \"label-width\": \"120px\",\n      size: \"medium\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"产品名称\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.productForm.productName,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.productForm.productName = $event),\n          placeholder: \"请输入产品名称\",\n          required: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"价格\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"number\",\n          modelValue: $data.productForm.price,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.productForm.price = $event),\n          placeholder: \"请输入产品价格\",\n          required: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"状态\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $data.productForm.status,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.productForm.status = $event),\n          placeholder: \"选择状态\",\n          required: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_option, {\n            label: \"可用\",\n            value: \"active\"\n          }), _createVNode(_component_el_option, {\n            label: \"不可用\",\n            value: \"inactive\"\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"商家ID\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"number\",\n          modelValue: $data.productForm.merchantId,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.productForm.merchantId = $event),\n          placeholder: \"请输入商家ID\",\n          required: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\", \"onClose\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_createVNode","_component_el_button","type","onClick","$options","showProductForm","style","default","_withCtx","_cache","_createTextVNode","_","_createCommentVNode","_component_el_table","data","$data","products","_component_el_table_column","prop","label","scope","size","$event","editProduct","row","deleteProduct","productId","_component_el_dialog","visible","isProductFormVisible","title","onClose","clearForm","footer","saveProduct","_toDisplayString","selectedProduct","_component_el_form","model","productForm","_component_el_form_item","_component_el_input","modelValue","productName","placeholder","required","price","_component_el_select","status","_component_el_option","value","merchantId"],"sources":["E:\\ecms\\ecmsvue\\src\\views\\Products.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>产品管理</h1>\r\n    <el-button type=\"primary\" @click=\"showProductForm\" style=\"margin-bottom: 20px;\">添加产品</el-button>\r\n\r\n    <!-- 产品表格 -->\r\n    <el-table :data=\"products\" style=\"width: 100%;\">\r\n      <el-table-column prop=\"productName\" label=\"产品名称\" />\r\n      <el-table-column prop=\"price\" label=\"价格\" />\r\n      <el-table-column prop=\"status\" label=\"状态\" />\r\n      <el-table-column label=\"操作\">\r\n        <template #default=\"scope\">\r\n          <el-button size=\"small\" @click=\"editProduct(scope.row)\">编辑</el-button>\r\n          <el-button size=\"small\" type=\"danger\" @click=\"deleteProduct(scope.row.productId)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 产品表单对话框 -->\r\n    <el-dialog v-model:visible=\"isProductFormVisible\" title=\"产品表单\" @close=\"clearForm\">\r\n      <el-form :model=\"productForm\" label-width=\"120px\" size=\"medium\">\r\n        <el-form-item label=\"产品名称\">\r\n          <el-input v-model=\"productForm.productName\" placeholder=\"请输入产品名称\" required />\r\n        </el-form-item>\r\n        <el-form-item label=\"价格\">\r\n          <el-input type=\"number\" v-model=\"productForm.price\" placeholder=\"请输入产品价格\" required />\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\">\r\n          <el-select v-model=\"productForm.status\" placeholder=\"选择状态\" required>\r\n            <el-option label=\"可用\" value=\"active\" />\r\n            <el-option label=\"不可用\" value=\"inactive\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"商家ID\">\r\n          <el-input type=\"number\" v-model=\"productForm.merchantId\" placeholder=\"请输入商家ID\" required />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"clearForm\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"saveProduct\">{{ selectedProduct ? '更新产品' : '添加产品' }}</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'ProductManagement',\r\n  data() {\r\n    return {\r\n      products: [],\r\n      isProductFormVisible: false, // 控制对话框的显示\r\n      productForm: {\r\n        productName: '',\r\n        price: 0,\r\n        status: 'active',\r\n        merchantId: null // 添加商家ID\r\n      },\r\n      selectedProduct: null\r\n    };\r\n  },\r\n  methods: {\r\n    fetchProducts() {\r\n      console.log('Fetching products...');\r\n      axios.get('http://localhost:8080/api/products')\r\n          .then(response => {\r\n            console.log('Products fetched successfully:', response.data);\r\n            this.products = response.data;\r\n          })\r\n          .catch(error => {\r\n            console.error('获取产品时出错:', error);\r\n          });\r\n    },\r\n    showProductForm() {\r\n      console.log('Showing product form...');\r\n      this.selectedProduct = null; // Reset selected product for adding new product\r\n      this.productForm = {\r\n        productName: '',\r\n        price: 0,\r\n        status: 'active',\r\n        merchantId: null // Reset merchant ID\r\n      };\r\n      this.isProductFormVisible = true; // 打开对话框\r\n    },\r\n    editProduct(product) {\r\n      console.log('Editing product:', product);\r\n      this.selectedProduct = product; // 记录选择的产品\r\n      this.productForm = {\r\n        productName: product.productName,\r\n        price: product.price,\r\n        status: product.status,\r\n        merchantId: product.merchantId // 确保将商家ID填入\r\n      };\r\n      this.isProductFormVisible = true; // 打开对话框\r\n    },\r\n    clearForm() {\r\n      console.log('Clearing form...');\r\n      this.selectedProduct = null;\r\n      this.productForm = {\r\n        productName: '',\r\n        price: 0,\r\n        status: 'active',\r\n        merchantId: null // Reset merchant ID\r\n      };\r\n      this.isProductFormVisible = false; // 关闭对话框\r\n    },\r\n    saveProduct() {\r\n      const url = this.selectedProduct\r\n          ? `http://localhost:8080/api/products/${this.selectedProduct.productId}`\r\n          : 'http://localhost:8080/api/products';\r\n\r\n      const method = this.selectedProduct ? 'put' : 'post';\r\n\r\n      // 确保包含所有必需字段\r\n      const productData = {\r\n        merchantId: this.productForm.merchantId, // 确保商家ID不为null\r\n        productName: this.productForm.productName,\r\n        price: this.productForm.price,\r\n        stockQuantity: 0, // 默认值，或从表单中获取\r\n        status: this.productForm.status\r\n      };\r\n\r\n      console.log(`Saving product... Method: ${method}, URL: ${url}, Data:`, productData);\r\n\r\n      axios[method](url, productData)\r\n          .then(() => {\r\n            console.log('Product saved successfully');\r\n            this.fetchProducts(); // 刷新产品列表\r\n            this.clearForm(); // 清空表单\r\n          })\r\n          .catch(error => {\r\n            console.error('保存产品时出错:', error);\r\n          });\r\n    },\r\n    deleteProduct(productId) {\r\n      console.log('Deleting product with ID:', productId);\r\n      axios.delete(`http://localhost:8080/api/products/${productId}`)\r\n          .then(() => {\r\n            console.log('Product deleted successfully');\r\n            this.fetchProducts(); // 删除后刷新产品列表\r\n          })\r\n          .catch(error => {\r\n            console.error('删除产品时出错:', error);\r\n          });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchProducts(); // 组件加载时获取产品列表\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.el-table {\r\n  width: 100%; /* 确保表格占满父容器 */\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}