{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"dialog-footer\"\n};\nconst _hoisted_3 = {\n  class: \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppNavbar = _resolveComponent(\"AppNavbar\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_input_number = _resolveComponent(\"el-input-number\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_AppNavbar, {\n    onNavigate: $options.handleNavigation\n  }, null, 8 /* PROPS */, [\"onNavigate\"]), _createCommentVNode(\" 引入导航栏组件 \"), _createElementVNode(\"div\", _hoisted_1, [_cache[20] || (_cache[20] = _createElementVNode(\"h1\", null, \"产品管理\", -1 /* HOISTED */)), _createCommentVNode(\" 页面标题 \"), _createVNode(_component_el_input, {\n    modelValue: $data.searchKeyword,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchKeyword = $event),\n    placeholder: \"请输入产品名称或描述进行搜索\",\n    style: {\n      \"width\": \"300px\",\n      \"margin-bottom\": \"20px\"\n    },\n    onInput: $options.fetchProductsByKeyword\n  }, null, 8 /* PROPS */, [\"modelValue\", \"onInput\"]), _createCommentVNode(\" 绑定搜索关键词 \"), _createCommentVNode(\" 输入框占位符 \"), _createCommentVNode(\" 设置输入框样式 \"), _createCommentVNode(\" 输入变化时调用搜索方法 \"), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $options.showProductForm,\n    style: {\n      \"margin-bottom\": \"20px\"\n    }\n  }, {\n    default: _withCtx(() => _cache[12] || (_cache[12] = [_createTextVNode(\"添加产品\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createCommentVNode(\" 添加产品按钮 \"), _createCommentVNode(\" 产品表格 \"), _createVNode(_component_el_table, {\n    data: $data.products,\n    style: {\n      \"width\": \"100%\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"productName\",\n      label: \"产品名称\"\n    }), _createCommentVNode(\" 产品名称列 \"), _createVNode(_component_el_table_column, {\n      prop: \"price\",\n      label: \"价格\"\n    }), _createCommentVNode(\" 产品价格列 \"), _createVNode(_component_el_table_column, {\n      prop: \"status\",\n      label: \"状态\"\n    }, {\n      default: _withCtx(scope => [_createVNode(_component_el_tag, {\n        type: scope.row.status === 'active' ? 'success' : 'danger'\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" 根据状态显示标签 \"), _createTextVNode(\" \" + _toDisplayString(scope.row.status === 'active' ? '可用' : '不可用'), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"操作\"\n    }, {\n      default: _withCtx(scope => [_createVNode(_component_el_button, {\n        size: \"small\",\n        onClick: $event => $options.editProduct(scope.row)\n      }, {\n        default: _withCtx(() => _cache[13] || (_cache[13] = [_createTextVNode(\"编辑\")])),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createCommentVNode(\" 编辑按钮 \"), _createVNode(_component_el_button, {\n        size: \"small\",\n        type: \"danger\",\n        onClick: $event => $options.confirmDelete(scope.row.productId)\n      }, {\n        default: _withCtx(() => _cache[14] || (_cache[14] = [_createTextVNode(\"删除\")])),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createCommentVNode(\" 删除按钮 \")]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"]), _createCommentVNode(\" 产品表单对话框 \"), _createVNode(_component_el_dialog, {\n    modelValue: $data.dialogVisible,\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.dialogVisible = $event),\n    title: $data.selectedProduct ? '编辑产品' : '添加产品',\n    width: \"50%\",\n    onClose: $options.clearForm\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_2, [_createVNode(_component_el_button, {\n      onClick: _cache[8] || (_cache[8] = $event => $data.dialogVisible = false)\n    }, {\n      default: _withCtx(() => _cache[15] || (_cache[15] = [_createTextVNode(\"取消\")])),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 取消按钮 \"), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $options.saveProduct\n    }, {\n      default: _withCtx(() => _cache[16] || (_cache[16] = [_createTextVNode(\"保存\")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"]), _createCommentVNode(\" 保存按钮 \")])]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      model: $data.productForm,\n      \"label-width\": \"120px\",\n      size: \"default\"\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" 表单 \"), _createVNode(_component_el_form_item, {\n        label: \"产品名称\",\n        prop: \"productName\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.productForm.productName,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.productForm.productName = $event),\n          placeholder: \"请输入产品名称\"\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 产品名称输入 \")]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"价格\",\n        prop: \"price\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input_number, {\n          modelValue: $data.productForm.price,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.productForm.price = $event),\n          min: 0,\n          precision: 2\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 产品价格输入 \")]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"库存数量\",\n        prop: \"stockQuantity\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input_number, {\n          modelValue: $data.productForm.stockQuantity,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.productForm.stockQuantity = $event),\n          min: 0\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 产品库存输入 \")]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"状态\",\n        prop: \"status\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $data.productForm.status,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.productForm.status = $event),\n          placeholder: \"选择状态\"\n        }, {\n          default: _withCtx(() => [_createCommentVNode(\" 产品状态选择 \"), _createVNode(_component_el_option, {\n            label: \"可用\",\n            value: \"active\"\n          }), _createVNode(_component_el_option, {\n            label: \"不可用\",\n            value: \"inactive\"\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"商家ID\",\n        prop: \"merchantId\"\n      }, {\n        default: _withCtx(() => [$data.selectedProduct ? (_openBlock(), _createBlock(_component_el_input_number, {\n          key: 0,\n          modelValue: $data.productForm.merchantId,\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.productForm.merchantId = $event),\n          min: 1,\n          disabled: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])) : (_openBlock(), _createElementBlock(_Fragment, {\n          key: 1\n        }, [_createCommentVNode(\" 商家ID输入 \"), _createVNode(_component_el_input_number, {\n          modelValue: $data.productForm.merchantId,\n          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.productForm.merchantId = $event),\n          min: 1\n        }, null, 8 /* PROPS */, [\"modelValue\"])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"描述\",\n        prop: \"description\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.productForm.description,\n          \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.productForm.description = $event),\n          type: \"textarea\",\n          rows: 3\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 产品描述输入 \")]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"title\", \"onClose\"]), _createCommentVNode(\" 删除确认对话框 \"), _createVNode(_component_el_dialog, {\n    modelValue: $data.deleteDialogVisible,\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $data.deleteDialogVisible = $event),\n    title: \"确认删除\",\n    width: \"30%\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_3, [_createVNode(_component_el_button, {\n      onClick: _cache[10] || (_cache[10] = $event => $data.deleteDialogVisible = false)\n    }, {\n      default: _withCtx(() => _cache[17] || (_cache[17] = [_createTextVNode(\"取消\")])),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 取消按钮 \"), _createVNode(_component_el_button, {\n      type: \"danger\",\n      onClick: $options.deleteProduct\n    }, {\n      default: _withCtx(() => _cache[18] || (_cache[18] = [_createTextVNode(\"确认删除\")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"]), _createCommentVNode(\" 确认删除按钮 \")])]),\n    default: _withCtx(() => [_cache[19] || (_cache[19] = _createElementVNode(\"span\", null, \"确定要删除这个产品吗？此操作不可撤销。\", -1 /* HOISTED */))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createVNode","_component_AppNavbar","onNavigate","$options","handleNavigation","_createCommentVNode","_createElementVNode","_hoisted_1","_component_el_input","modelValue","$data","searchKeyword","_cache","$event","placeholder","style","onInput","fetchProductsByKeyword","_component_el_button","type","onClick","showProductForm","default","_withCtx","_createTextVNode","_","_component_el_table","data","products","_component_el_table_column","prop","label","scope","_component_el_tag","row","status","_toDisplayString","size","editProduct","confirmDelete","productId","_component_el_dialog","dialogVisible","title","selectedProduct","width","onClose","clearForm","footer","_hoisted_2","saveProduct","_component_el_form","model","productForm","_component_el_form_item","productName","_component_el_input_number","price","min","precision","stockQuantity","_component_el_select","_component_el_option","value","_createBlock","key","merchantId","disabled","description","rows","deleteDialogVisible","_hoisted_3","deleteProduct"],"sources":["D:\\code_new\\ecms\\ecmsvue\\src\\views\\Products.vue"],"sourcesContent":["<template>\n  <AppNavbar @navigate=\"handleNavigation\"/> <!-- 引入导航栏组件 -->\n  <div class=\"container\">\n\n    <h1>产品管理</h1> <!-- 页面标题 -->\n\n    <el-input\n        v-model=\"searchKeyword\"\n    placeholder=\"请输入产品名称或描述进行搜索\"\n    style=\"width: 300px; margin-bottom: 20px;\"\n    @input=\"fetchProductsByKeyword\"\n    />\n    <!-- 绑定搜索关键词 -->\n    <!-- 输入框占位符 -->\n    <!-- 设置输入框样式 -->\n    <!-- 输入变化时调用搜索方法 -->\n\n    <el-button type=\"primary\" @click=\"showProductForm\" style=\"margin-bottom: 20px;\">添加产品</el-button> <!-- 添加产品按钮 -->\n\n    <!-- 产品表格 -->\n    <el-table :data=\"products\" style=\"width: 100%;\">\n      <el-table-column prop=\"productName\" label=\"产品名称\" /> <!-- 产品名称列 -->\n      <el-table-column prop=\"price\" label=\"价格\" /> <!-- 产品价格列 -->\n      <el-table-column prop=\"status\" label=\"状态\">\n        <template #default=\"scope\">\n          <el-tag :type=\"scope.row.status === 'active' ? 'success' : 'danger'\"> <!-- 根据状态显示标签 -->\n            {{ scope.row.status === 'active' ? '可用' : '不可用' }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\">\n        <template #default=\"scope\">\n          <el-button size=\"small\" @click=\"editProduct(scope.row)\">编辑</el-button> <!-- 编辑按钮 -->\n          <el-button size=\"small\" type=\"danger\" @click=\"confirmDelete(scope.row.productId)\">删除</el-button> <!-- 删除按钮 -->\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 产品表单对话框 -->\n    <el-dialog\n        v-model=\"dialogVisible\"\n    :title=\"selectedProduct ? '编辑产品' : '添加产品'\"\n    width=\"50%\"\n    @close=\"clearForm\"\n    >\n    <!-- 控制对话框的显示 -->\n    <!-- 动态设置对话框标题 -->\n      <!-- 关闭对话框时清空表单 -->\n\n    <el-form :model=\"productForm\" label-width=\"120px\" size=\"default\"> <!-- 表单 -->\n      <el-form-item label=\"产品名称\" prop=\"productName\">\n        <el-input v-model=\"productForm.productName\" placeholder=\"请输入产品名称\" /> <!-- 产品名称输入 -->\n      </el-form-item>\n      <el-form-item label=\"价格\" prop=\"price\">\n        <el-input-number v-model=\"productForm.price\" :min=\"0\" :precision=\"2\" /> <!-- 产品价格输入 -->\n      </el-form-item>\n      <el-form-item label=\"库存数量\" prop=\"stockQuantity\">\n        <el-input-number v-model=\"productForm.stockQuantity\" :min=\"0\" /> <!-- 产品库存输入 -->\n      </el-form-item>\n      <el-form-item label=\"状态\" prop=\"status\">\n        <el-select v-model=\"productForm.status\" placeholder=\"选择状态\"> <!-- 产品状态选择 -->\n          <el-option label=\"可用\" value=\"active\" />\n          <el-option label=\"不可用\" value=\"inactive\" />\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"商家ID\" prop=\"merchantId\">\n        <el-input-number v-model=\"productForm.merchantId\" :min=\"1\" disabled v-if=\"selectedProduct\" /> <!-- 商家ID输入 -->\n        <el-input-number v-model=\"productForm.merchantId\" :min=\"1\" v-else />\n      </el-form-item>\n      <el-form-item label=\"描述\" prop=\"description\">\n        <el-input v-model=\"productForm.description\" type=\"textarea\" :rows=\"3\" /> <!-- 产品描述输入 -->\n      </el-form-item>\n    </el-form>\n    <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">取消</el-button> <!-- 取消按钮 -->\n          <el-button type=\"primary\" @click=\"saveProduct\">保存</el-button> <!-- 保存按钮 -->\n        </span>\n    </template>\n    </el-dialog>\n\n    <!-- 删除确认对话框 -->\n    <el-dialog\n        v-model=\"deleteDialogVisible\"\n    title=\"确认删除\"\n    width=\"30%\"\n    >\n      <!-- 控制删除对话框的显示 -->\n    <span>确定要删除这个产品吗？此操作不可撤销。</span> <!-- 删除确认提示 -->\n    <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"deleteDialogVisible = false\">取消</el-button> <!-- 取消按钮 -->\n          <el-button type=\"danger\" @click=\"deleteProduct\">确认删除</el-button> <!-- 确认删除按钮 -->\n        </span>\n    </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'; // 引入 axios 库进行 HTTP 请求\nimport { ElMessage } from 'element-plus'; // 引入 Element Plus 的消息组件\nimport AppMerchantNavbar from \"@/components/MerchantNavbar.vue\";\nimport {gsap} from \"gsap\"; // 引入导航栏组件\n\nexport default {\n  name: 'ProductManagement', // 组件名称\n  components: { AppNavbar: AppMerchantNavbar }, // 注册导航栏组件\n  data() {\n    return {\n      products: [], // 产品数组\n      searchKeyword: '', // 新增搜索关键词\n      productForm: { // 表单数据模型\n        productName: '',\n        price: 0,\n        stockQuantity: 0,\n        status: 'active',\n        merchantId: null,\n        description: ''\n      },\n      selectedProduct: null, // 当前选择的产品\n      dialogVisible: false, // 控制添加/编辑产品对话框的显示\n      deleteDialogVisible: false, // 控制删除确认对话框的显示\n      productIdToDelete: null // 当前待删除产品的ID\n    };\n  },\n  methods: {\n    enterAnimation() {\n      const tl = gsap.timeline();\n\n      // 设置初始状态\n      gsap.set(\".container\", {\n        opacity: 0,\n        y: 50\n      });\n\n      // 创建入场动画\n      tl.to(\".container\", {\n        duration: 0.8,\n        opacity: 1,\n        y: 0,\n        ease: \"power4.out\"\n      });\n    },\n    async handleNavigation(path) {\n      await this.leaveAnimation();\n      this.$router.push(path);\n    },\n    leaveAnimation() {\n      return new Promise((resolve) => {\n        const tl = gsap.timeline();\n\n        // 使用更精确的选择器\n        tl.to(\".container\", {\n          duration: 0.8,\n          opacity: 0,\n          y: 100,\n          ease: \"power4.in\"\n        })\n            .eventCallback(\"onComplete\", resolve);\n      });\n    },\n    fetchProducts() {\n      // 获取所有产品\n      const url = 'http://localhost:8080/api/products';\n      axios.get(url)\n          .then(response => {\n            this.products = response.data; // 更新产品列表\n          })\n          .catch(error => {\n            ElMessage.error('获取产品列表失败: ' + error.message); // 显示失败消息\n            console.error('获取产品时出错:', error);\n          });\n    },\n    fetchProductsByKeyword() {\n      // 根据搜索关键词获取产品\n      const url = this.searchKeyword\n          ? `http://localhost:8080/api/products/search?keyword=${this.searchKeyword}`\n          : 'http://localhost:8080/api/products';\n\n      axios.get(url)\n          .then(response => {\n            this.products = response.data; // 更新产品列表\n          })\n          .catch(error => {\n            ElMessage.error('获取产品列表失败: ' + error.message); // 显示失败消息\n            console.error('获取产品时出错:', error);\n          });\n    },\n    showProductForm() {\n      // 显示添加产品表单\n      this.selectedProduct = null; // 清空选择的产品\n      this.productForm = { // 重置表单\n        productName: '',\n        price: 0,\n        stockQuantity: 0,\n        status: 'active',\n        merchantId: null,\n        description: ''\n      };\n      this.dialogVisible = true; // 显示对话框\n    },\n    editProduct(product) {\n      // 显示编辑产品表单\n      this.selectedProduct = product; // 设置选择的产品\n      this.productForm = {\n        productName: product.productName,\n        price: product.price,\n        stockQuantity: product.stockQuantity,\n        status: product.status,\n        merchantId: product.merchantId,\n        description: product.description || ''\n      };\n      this.dialogVisible = true; // 显示对话框\n    },\n    clearForm() {\n      // 清空表单\n      this.selectedProduct = null; // 取消选择的产品\n      this.productForm = { // 重置表单\n        productName: '',\n        price: 0,\n        stockQuantity: 0,\n        status: 'active',\n        merchantId: null,\n        description: ''\n      };\n    },\n    saveProduct() {\n      // 保存产品（添加或更新）\n      const url = this.selectedProduct\n          ? `http://localhost:8080/api/products/${this.selectedProduct.productId}` // 更新产品\n          : 'http://localhost:8080/api/products'; // 添加产品\n\n      const method = this.selectedProduct ? 'put' : 'post'; // 确定使用的请求方法\n\n      const productData = { // 整理待提交的产品数据\n        merchantId: this.productForm.merchantId,\n        productName: this.productForm.productName,\n        price: this.productForm.price,\n        stockQuantity: this.productForm.stockQuantity,\n        status: this.productForm.status,\n        description: this.productForm.description\n      };\n\n      axios[method](url,productData)\n          .then(() => {\n            ElMessage.success(this.selectedProduct ? '产品更新成功' : '产品添加成功'); // 显示成功消息\n            this.fetchProducts(); // 重新获取产品列表\n            this.dialogVisible = false; // 关闭对话框\n          })\n          .catch(error => {\n            ElMessage.error('操作失败: ' + error.message); // 显示错误消息\n            console.error('保存产品时出错:', error);\n          });\n    },\n    confirmDelete(productId) {\n      // 确认删除产品\n      this.productIdToDelete = productId; // 存储待删除产品的ID\n      this.deleteDialogVisible = true; // 显示删除确认对话框\n    },\n    deleteProduct() {\n      // 删除产品\n      axios.delete(`http://localhost:8080/api/products/${this.productIdToDelete}`)\n          .then(() => {\n            ElMessage.success('产品删除成功'); // 显示成功消息\n            this.fetchProducts(); // 重新获取产品列表\n            this.deleteDialogVisible = false; // 关闭删除对话框\n          })\n          .catch(error => {\n            ElMessage.error('删除失败: ' + error.message); // 显示错误消息\n            console.error('删除产品时出错:', error);\n          });\n    }\n  },\n  mounted() {\n    this.fetchProducts(); // 初始加载所有产品\n    thia.enterAnimation();\n  }\n};\n</script>\n\n<style scoped>\n.el-table {\n  width: 100%; /* 设置表格宽度 */\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end; /* 确保对话框底部按钮右对齐 */\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}