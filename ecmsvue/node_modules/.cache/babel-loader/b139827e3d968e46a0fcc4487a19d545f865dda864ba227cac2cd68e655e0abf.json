{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, resolveDirective as _resolveDirective, openBlock as _openBlock, createElementBlock as _createElementBlock, withDirectives as _withDirectives, createBlock as _createBlock, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"admin-visualization-view\"\n};\nconst _hoisted_2 = {\n  class: \"view-header\"\n};\nconst _hoisted_3 = {\n  class: \"admin-visualization-dashboard\"\n};\nconst _hoisted_4 = {\n  class: \"dashboard-header\"\n};\nconst _hoisted_5 = {\n  class: \"toolbar\"\n};\nconst _hoisted_6 = {\n  class: \"card-header\"\n};\nconst _hoisted_7 = {\n  class: \"card-content\"\n};\nconst _hoisted_8 = {\n  class: \"card-value\"\n};\nconst _hoisted_9 = {\n  class: \"card-header\"\n};\nconst _hoisted_10 = {\n  class: \"card-content\"\n};\nconst _hoisted_11 = {\n  class: \"card-value\"\n};\nconst _hoisted_12 = {\n  class: \"card-header\"\n};\nconst _hoisted_13 = {\n  class: \"card-content\"\n};\nconst _hoisted_14 = {\n  class: \"card-value\"\n};\nconst _hoisted_15 = {\n  class: \"card-header\"\n};\nconst _hoisted_16 = {\n  class: \"card-content\"\n};\nconst _hoisted_17 = {\n  class: \"card-value\"\n};\nconst _hoisted_18 = {\n  class: \"card-header\"\n};\nconst _hoisted_19 = {\n  class: \"card-content\"\n};\nconst _hoisted_20 = {\n  class: \"card-value\"\n};\nconst _hoisted_21 = {\n  class: \"card-header\"\n};\nconst _hoisted_22 = {\n  class: \"card-content\"\n};\nconst _hoisted_23 = {\n  class: \"card-value\"\n};\nconst _hoisted_24 = {\n  class: \"chart-selector\"\n};\nconst _hoisted_25 = {\n  class: \"card-header\"\n};\nconst _hoisted_26 = {\n  class: \"chart-container\"\n};\nconst _hoisted_27 = {\n  ref: \"salesTrendChart\",\n  class: \"chart\"\n};\nconst _hoisted_28 = {\n  class: \"card-header\"\n};\nconst _hoisted_29 = {\n  class: \"chart-container\"\n};\nconst _hoisted_30 = {\n  ref: \"merchantRankingChart\",\n  class: \"chart\"\n};\nconst _hoisted_31 = {\n  class: \"card-header\"\n};\nconst _hoisted_32 = {\n  class: \"chart-container\"\n};\nconst _hoisted_33 = {\n  ref: \"productRankingChart\",\n  class: \"chart\"\n};\nconst _hoisted_34 = {\n  class: \"card-header\"\n};\nconst _hoisted_35 = {\n  class: \"chart-container\"\n};\nconst _hoisted_36 = {\n  ref: \"regionalDistributionChart\",\n  class: \"chart\"\n};\nconst _hoisted_37 = {\n  class: \"card-header\"\n};\nconst _hoisted_38 = {\n  class: \"chart-container\"\n};\nconst _hoisted_39 = {\n  ref: \"orderStatusDistributionChart\",\n  class: \"chart\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppNavbar = _resolveComponent(\"AppNavbar\");\n  const _component_el_breadcrumb_item = _resolveComponent(\"el-breadcrumb-item\");\n  const _component_el_breadcrumb = _resolveComponent(\"el-breadcrumb\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_Refresh = _resolveComponent(\"Refresh\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_radio_button = _resolveComponent(\"el-radio-button\");\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_AppNavbar, {\n    onNavigate: _ctx.handleNavigation\n  }, null, 8 /* PROPS */, [\"onNavigate\"]), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_breadcrumb, {\n    separator: \"/\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_breadcrumb_item, {\n      to: {\n        path: '/admin'\n      }\n    }, {\n      default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"首页\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_breadcrumb_item, null, {\n      default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"数据分析\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_breadcrumb_item, null, {\n      default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"平台数据可视化\")])),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _cache[5] || (_cache[5] = _createElementVNode(\"h2\", null, \"平台数据可视化\", -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[7] || (_cache[7] = _createElementVNode(\"h1\", {\n    class: \"dashboard-title\"\n  }, \"平台数据分析仪表板\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_select, {\n    modelValue: $setup.timeFilter,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.timeFilter = $event),\n    placeholder: \"选择时间周期\",\n    onChange: $setup.handleTimeFilterChange,\n    class: \"time-filter\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_option, {\n      label: \"每日\",\n      value: \"daily\"\n    }), _createVNode(_component_el_option, {\n      label: \"每周\",\n      value: \"weekly\"\n    }), _createVNode(_component_el_option, {\n      label: \"每月\",\n      value: \"monthly\"\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"onChange\"]), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $setup.fetchDashboardData,\n    loading: $setup.loading.dashboard,\n    class: \"refresh-btn\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n      default: _withCtx(() => [_createVNode(_component_Refresh)]),\n      _: 1 /* STABLE */\n    }), _cache[6] || (_cache[6] = _createTextVNode(\" 刷新数据 \"))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\", \"loading\"])])]), _createCommentVNode(\" 销售概览卡片 \"), _createVNode(_component_el_row, {\n    gutter: 24,\n    class: \"dashboard-cards\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      xs: 24,\n      sm: 12,\n      md: 8,\n      lg: 6,\n      xl: 4\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\",\n        class: \"data-card\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_6, [_cache[9] || (_cache[9] = _createElementVNode(\"span\", null, \"总销售额\", -1 /* HOISTED */)), _createVNode(_component_el_tag, {\n          type: \"success\",\n          effect: \"plain\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\"统计\")])),\n          _: 1 /* STABLE */\n        })])]),\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"h2\", _hoisted_8, _toDisplayString($setup.formatCurrency($setup.salesOverview.totalSales)), 1 /* TEXT */)])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      xs: 24,\n      sm: 12,\n      md: 8,\n      lg: 6,\n      xl: 4\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\",\n        class: \"data-card\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_9, [_cache[11] || (_cache[11] = _createElementVNode(\"span\", null, \"总订单数\", -1 /* HOISTED */)), _createVNode(_component_el_tag, {\n          type: \"primary\",\n          effect: \"plain\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => _cache[10] || (_cache[10] = [_createTextVNode(\"统计\")])),\n          _: 1 /* STABLE */\n        })])]),\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"h2\", _hoisted_11, _toDisplayString($setup.salesOverview.totalOrders || 0), 1 /* TEXT */)])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      xs: 24,\n      sm: 12,\n      md: 8,\n      lg: 6,\n      xl: 4\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\",\n        class: \"data-card\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_12, [_cache[13] || (_cache[13] = _createElementVNode(\"span\", null, \"平均订单金额\", -1 /* HOISTED */)), _createVNode(_component_el_tag, {\n          type: \"warning\",\n          effect: \"plain\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => _cache[12] || (_cache[12] = [_createTextVNode(\"统计\")])),\n          _: 1 /* STABLE */\n        })])]),\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"h2\", _hoisted_14, _toDisplayString($setup.formatCurrency($setup.salesOverview.avgOrderValue)), 1 /* TEXT */)])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      xs: 24,\n      sm: 12,\n      md: 8,\n      lg: 6,\n      xl: 4\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\",\n        class: \"data-card\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_15, [_cache[15] || (_cache[15] = _createElementVNode(\"span\", null, \"最近30天销售额\", -1 /* HOISTED */)), _createVNode(_component_el_tag, {\n          type: \"info\",\n          effect: \"plain\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => _cache[14] || (_cache[14] = [_createTextVNode(\"统计\")])),\n          _: 1 /* STABLE */\n        })])]),\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"h2\", _hoisted_17, _toDisplayString($setup.formatCurrency($setup.salesOverview.recentSales)), 1 /* TEXT */)])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      xs: 24,\n      sm: 12,\n      md: 8,\n      lg: 6,\n      xl: 4\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\",\n        class: \"data-card\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_18, [_cache[17] || (_cache[17] = _createElementVNode(\"span\", null, \"商家总数\", -1 /* HOISTED */)), _createVNode(_component_el_tag, {\n          type: \"danger\",\n          effect: \"plain\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => _cache[16] || (_cache[16] = [_createTextVNode(\"统计\")])),\n          _: 1 /* STABLE */\n        })])]),\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"h2\", _hoisted_20, _toDisplayString($setup.salesOverview.merchantCount || 0), 1 /* TEXT */)])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      xs: 24,\n      sm: 12,\n      md: 8,\n      lg: 6,\n      xl: 4\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\",\n        class: \"data-card\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_21, [_cache[19] || (_cache[19] = _createElementVNode(\"span\", null, \"活跃商家\", -1 /* HOISTED */)), _createVNode(_component_el_tag, {\n          type: \"success\",\n          effect: \"plain\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => _cache[18] || (_cache[18] = [_createTextVNode(\"统计\")])),\n          _: 1 /* STABLE */\n        })])]),\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"h2\", _hoisted_23, _toDisplayString($setup.salesOverview.activeMerchantCount || 0), 1 /* TEXT */)])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 图表选择器 \"), _createElementVNode(\"div\", _hoisted_24, [_createVNode(_component_el_radio_group, {\n    modelValue: $setup.selectedChartType,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.selectedChartType = $event),\n    onChange: $setup.handleChartTypeChange,\n    size: \"large\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_radio_button, {\n      label: \"all\"\n    }, {\n      default: _withCtx(() => _cache[20] || (_cache[20] = [_createTextVNode(\"全部图表\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_radio_button, {\n      label: \"trend\"\n    }, {\n      default: _withCtx(() => _cache[21] || (_cache[21] = [_createTextVNode(\"销售趋势\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_radio_button, {\n      label: \"merchant\"\n    }, {\n      default: _withCtx(() => _cache[22] || (_cache[22] = [_createTextVNode(\"商家排行\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_radio_button, {\n      label: \"product\"\n    }, {\n      default: _withCtx(() => _cache[23] || (_cache[23] = [_createTextVNode(\"产品排行\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_radio_button, {\n      label: \"region\"\n    }, {\n      default: _withCtx(() => _cache[24] || (_cache[24] = [_createTextVNode(\"区域分布\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_radio_button, {\n      label: \"status\"\n    }, {\n      default: _withCtx(() => _cache[25] || (_cache[25] = [_createTextVNode(\"订单状态\")])),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]), _createCommentVNode(\" 图表区域 \"), _createVNode(_component_el_row, {\n    gutter: 24,\n    class: \"dashboard-charts\"\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" 销售趋势图 \"), $setup.isChartVisible('trend') ? (_openBlock(), _createBlock(_component_el_col, {\n      key: 0,\n      xs: 24,\n      sm: 24,\n      md: 24,\n      lg: 24,\n      xl: 24\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\",\n        class: \"chart-card\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_25, [_cache[26] || (_cache[26] = _createElementVNode(\"span\", null, \"平台销售趋势\", -1 /* HOISTED */)), _createVNode(_component_el_tag, {\n          type: \"primary\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.timeFilterLabel), 1 /* TEXT */)]),\n          _: 1 /* STABLE */\n        })])]),\n        default: _withCtx(() => [_withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_26, [_createElementVNode(\"div\", _hoisted_27, null, 512 /* NEED_PATCH */)])), [[_directive_loading, $setup.loading.salesTrend]])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 商家销售排行图 \"), $setup.isChartVisible('merchant') ? (_openBlock(), _createBlock(_component_el_col, {\n      key: 1,\n      xs: 24,\n      sm: 24,\n      md: 12,\n      lg: 12,\n      xl: 12\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\",\n        class: \"chart-card\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_28, [_cache[28] || (_cache[28] = _createElementVNode(\"span\", null, \"商家销售排行\", -1 /* HOISTED */)), _createVNode(_component_el_tag, {\n          type: \"success\"\n        }, {\n          default: _withCtx(() => _cache[27] || (_cache[27] = [_createTextVNode(\"排名\")])),\n          _: 1 /* STABLE */\n        })])]),\n        default: _withCtx(() => [_withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_29, [_createElementVNode(\"div\", _hoisted_30, null, 512 /* NEED_PATCH */)])), [[_directive_loading, $setup.loading.merchantRanking]])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 产品销售排行图 \"), $setup.isChartVisible('product') ? (_openBlock(), _createBlock(_component_el_col, {\n      key: 2,\n      xs: 24,\n      sm: 24,\n      md: 12,\n      lg: 12,\n      xl: 12\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\",\n        class: \"chart-card\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_31, [_cache[30] || (_cache[30] = _createElementVNode(\"span\", null, \"产品销售排行\", -1 /* HOISTED */)), _createVNode(_component_el_tag, {\n          type: \"warning\"\n        }, {\n          default: _withCtx(() => _cache[29] || (_cache[29] = [_createTextVNode(\"排名\")])),\n          _: 1 /* STABLE */\n        })])]),\n        default: _withCtx(() => [_withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_32, [_createElementVNode(\"div\", _hoisted_33, null, 512 /* NEED_PATCH */)])), [[_directive_loading, $setup.loading.productRanking]])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 区域销售分布图 \"), $setup.isChartVisible('region') ? (_openBlock(), _createBlock(_component_el_col, {\n      key: 3,\n      xs: 24,\n      sm: 24,\n      md: 12,\n      lg: 12,\n      xl: 12\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\",\n        class: \"chart-card\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_34, [_cache[32] || (_cache[32] = _createElementVNode(\"span\", null, \"区域销售分布\", -1 /* HOISTED */)), _createVNode(_component_el_tag, {\n          type: \"info\"\n        }, {\n          default: _withCtx(() => _cache[31] || (_cache[31] = [_createTextVNode(\"分布\")])),\n          _: 1 /* STABLE */\n        })])]),\n        default: _withCtx(() => [_withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_35, [_createElementVNode(\"div\", _hoisted_36, null, 512 /* NEED_PATCH */)])), [[_directive_loading, $setup.loading.regionalDistribution]])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 订单状态分布图 \"), $setup.isChartVisible('status') ? (_openBlock(), _createBlock(_component_el_col, {\n      key: 4,\n      xs: 24,\n      sm: 24,\n      md: 12,\n      lg: 12,\n      xl: 12\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\",\n        class: \"chart-card\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_37, [_cache[34] || (_cache[34] = _createElementVNode(\"span\", null, \"订单状态分布\", -1 /* HOISTED */)), _createVNode(_component_el_tag, {\n          type: \"danger\"\n        }, {\n          default: _withCtx(() => _cache[33] || (_cache[33] = [_createTextVNode(\"分布\")])),\n          _: 1 /* STABLE */\n        })])]),\n        default: _withCtx(() => [_withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_38, [_createElementVNode(\"div\", _hoisted_39, null, 512 /* NEED_PATCH */)])), [[_directive_loading, $setup.loading.orderStatusDistribution]])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  })])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_Fragment","_createVNode","_component_AppNavbar","onNavigate","_ctx","handleNavigation","_createElementVNode","_hoisted_1","_hoisted_2","_component_el_breadcrumb","separator","default","_withCtx","_component_el_breadcrumb_item","to","path","_cache","_createTextVNode","_","_hoisted_3","_hoisted_4","_hoisted_5","_component_el_select","modelValue","$setup","timeFilter","$event","placeholder","onChange","handleTimeFilterChange","_component_el_option","label","value","_component_el_button","type","onClick","fetchDashboardData","loading","dashboard","_component_el_icon","_component_Refresh","_createCommentVNode","_component_el_row","gutter","_component_el_col","xs","sm","md","lg","xl","_component_el_card","shadow","header","_hoisted_6","_component_el_tag","effect","size","_hoisted_7","_hoisted_8","_toDisplayString","formatCurrency","salesOverview","totalSales","_hoisted_9","_hoisted_10","_hoisted_11","totalOrders","_hoisted_12","_hoisted_13","_hoisted_14","avgOrderValue","_hoisted_15","_hoisted_16","_hoisted_17","recentSales","_hoisted_18","_hoisted_19","_hoisted_20","merchantCount","_hoisted_21","_hoisted_22","_hoisted_23","activeMerchantCount","_hoisted_24","_component_el_radio_group","selectedChartType","handleChartTypeChange","_component_el_radio_button","isChartVisible","_createBlock","key","_hoisted_25","timeFilterLabel","_hoisted_26","_hoisted_27","salesTrend","_hoisted_28","_hoisted_29","_hoisted_30","merchantRanking","_hoisted_31","_hoisted_32","_hoisted_33","productRanking","_hoisted_34","_hoisted_35","_hoisted_36","regionalDistribution","_hoisted_37","_hoisted_38","_hoisted_39","orderStatusDistribution"],"sources":["D:\\code_new\\ecms\\ecmsvue\\src\\views\\AdminDataVisualizationView.vue"],"sourcesContent":["<template>\r\n  <AppNavbar @navigate=\"handleNavigation\"/>\r\n  <div class=\"admin-visualization-view\">\r\n    <div class=\"view-header\">\r\n      <el-breadcrumb separator=\"/\">\r\n        <el-breadcrumb-item :to=\"{ path: '/admin' }\">首页</el-breadcrumb-item>\r\n        <el-breadcrumb-item>数据分析</el-breadcrumb-item>\r\n        <el-breadcrumb-item>平台数据可视化</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n      <h2>平台数据可视化</h2>\r\n    </div>\r\n\r\n    <div class=\"admin-visualization-dashboard\">\r\n      <div class=\"dashboard-header\">\r\n        <h1 class=\"dashboard-title\">平台数据分析仪表板</h1>\r\n\r\n        <div class=\"toolbar\">\r\n          <el-select\r\n              v-model=\"timeFilter\"\r\n              placeholder=\"选择时间周期\"\r\n              @change=\"handleTimeFilterChange\"\r\n              class=\"time-filter\">\r\n            <el-option label=\"每日\" value=\"daily\"></el-option>\r\n            <el-option label=\"每周\" value=\"weekly\"></el-option>\r\n            <el-option label=\"每月\" value=\"monthly\"></el-option>\r\n          </el-select>\r\n\r\n          <el-button\r\n              type=\"primary\"\r\n              @click=\"fetchDashboardData\"\r\n              :loading=\"loading.dashboard\"\r\n              class=\"refresh-btn\">\r\n            <el-icon><Refresh /></el-icon> 刷新数据\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 销售概览卡片 -->\r\n      <el-row :gutter=\"24\" class=\"dashboard-cards\">\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>总销售额</span>\r\n                <el-tag type=\"success\" effect=\"plain\" size=\"small\">统计</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2 class=\"card-value\">{{ formatCurrency(salesOverview.totalSales) }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>总订单数</span>\r\n                <el-tag type=\"primary\" effect=\"plain\" size=\"small\">统计</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2 class=\"card-value\">{{ salesOverview.totalOrders || 0 }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>平均订单金额</span>\r\n                <el-tag type=\"warning\" effect=\"plain\" size=\"small\">统计</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2 class=\"card-value\">{{ formatCurrency(salesOverview.avgOrderValue) }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>最近30天销售额</span>\r\n                <el-tag type=\"info\" effect=\"plain\" size=\"small\">统计</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2 class=\"card-value\">{{ formatCurrency(salesOverview.recentSales) }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>商家总数</span>\r\n                <el-tag type=\"danger\" effect=\"plain\" size=\"small\">统计</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2 class=\"card-value\">{{ salesOverview.merchantCount || 0 }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>活跃商家</span>\r\n                <el-tag type=\"success\" effect=\"plain\" size=\"small\">统计</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2 class=\"card-value\">{{ salesOverview.activeMerchantCount || 0 }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 图表选择器 -->\r\n      <div class=\"chart-selector\">\r\n        <el-radio-group v-model=\"selectedChartType\" @change=\"handleChartTypeChange\" size=\"large\">\r\n          <el-radio-button label=\"all\">全部图表</el-radio-button>\r\n          <el-radio-button label=\"trend\">销售趋势</el-radio-button>\r\n          <el-radio-button label=\"merchant\">商家排行</el-radio-button>\r\n          <el-radio-button label=\"product\">产品排行</el-radio-button>\r\n          <el-radio-button label=\"region\">区域分布</el-radio-button>\r\n          <el-radio-button label=\"status\">订单状态</el-radio-button>\r\n        </el-radio-group>\r\n      </div>\r\n\r\n      <!-- 图表区域 -->\r\n      <el-row :gutter=\"24\" class=\"dashboard-charts\">\r\n        <!-- 销售趋势图 -->\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\" v-if=\"isChartVisible('trend')\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>平台销售趋势</span>\r\n                <el-tag type=\"primary\">{{ timeFilterLabel }}</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.salesTrend\">\r\n              <div ref=\"salesTrendChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <!-- 商家销售排行图 -->\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\" v-if=\"isChartVisible('merchant')\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>商家销售排行</span>\r\n                <el-tag type=\"success\">排名</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.merchantRanking\">\r\n              <div ref=\"merchantRankingChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <!-- 产品销售排行图 -->\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\" v-if=\"isChartVisible('product')\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>产品销售排行</span>\r\n                <el-tag type=\"warning\">排名</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.productRanking\">\r\n              <div ref=\"productRankingChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <!-- 区域销售分布图 -->\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\" v-if=\"isChartVisible('region')\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>区域销售分布</span>\r\n                <el-tag type=\"info\">分布</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.regionalDistribution\">\r\n              <div ref=\"regionalDistributionChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <!-- 订单状态分布图 -->\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\" v-if=\"isChartVisible('status')\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>订单状态分布</span>\r\n                <el-tag type=\"danger\">分布</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.orderStatusDistribution\">\r\n              <div ref=\"orderStatusDistributionChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted, onUnmounted, nextTick, computed } from 'vue';\r\nimport { ElMessage, ElNotification } from 'element-plus';\r\nimport { Refresh } from '@element-plus/icons-vue';\r\nimport * as echarts from 'echarts';\r\nimport axios from 'axios';\r\nimport AppAdminNavbar from \"@/components/AdminNavbar.vue\";\r\n\r\nexport default {\r\n  name: 'AdminDataVisualizationView',\r\n  components: {\r\n    AppNavbar: AppAdminNavbar,\r\n    Refresh\r\n  },\r\n  setup() {\r\n    // 图表引用\r\n    const salesTrendChart = ref(null);\r\n    const merchantRankingChart = ref(null);\r\n    const productRankingChart = ref(null);\r\n    const regionalDistributionChart = ref(null);\r\n    const orderStatusDistributionChart = ref(null);\r\n\r\n    // 图表实例\r\n    let salesTrendChartInstance = null;\r\n    let merchantRankingChartInstance = null;\r\n    let productRankingChartInstance = null;\r\n    let regionalDistributionChartInstance = null;\r\n    let orderStatusDistributionChartInstance = null;\r\n\r\n    // 图表数据缓存\r\n    const chartData = reactive({\r\n      salesTrend: null,\r\n      merchantRanking: null,\r\n      productRanking: null,\r\n      regionalDistribution: null,\r\n      orderStatusDistribution: null\r\n    });\r\n\r\n    // 数据加载状态\r\n    const loading = reactive({\r\n      dashboard: false,\r\n      salesTrend: false,\r\n      merchantRanking: false,\r\n      productRanking: false,\r\n      regionalDistribution: false,\r\n      orderStatusDistribution: false\r\n    });\r\n\r\n    // 时间筛选状态和标签\r\n    const timeFilter = ref('monthly');\r\n    const timeFilterLabel = computed(() => {\r\n      switch (timeFilter.value) {\r\n        case 'daily': return '每日';\r\n        case 'weekly': return '每周';\r\n        case 'monthly': return '每月';\r\n        default: return '每月';\r\n      }\r\n    });\r\n\r\n    // 时间筛选变更处理函数\r\n    const handleTimeFilterChange = (value) => {\r\n      // 更新时间筛选\r\n      timeFilter.value = value;\r\n\r\n      // 使用选定的时间周期获取新数据\r\n      fetchDashboardData();\r\n\r\n      // 额外的视觉反馈\r\n      ElMessage({\r\n        message: `已切换到${timeFilterLabel.value}视图`,\r\n        type: 'success',\r\n        duration: 1500\r\n      });\r\n    };\r\n\r\n    // 图表选择\r\n    const selectedChartType = ref('all');\r\n\r\n    // 检查图表是否应该可见\r\n    const isChartVisible = (chartType) => {\r\n      return selectedChartType.value === 'all' || selectedChartType.value === chartType;\r\n    };\r\n\r\n    // 处理图表类型变更\r\n    const handleChartTypeChange = (value) => {\r\n      // 等待DOM更新\r\n      nextTick(async () => {\r\n        // 重新初始化并渲染需要显示的图表\r\n        if (value === 'all' || value === 'trend') {\r\n          await initAndRenderChart('salesTrend', salesTrendChart, chartData.salesTrend);\r\n        }\r\n        if (value === 'all' || value === 'merchant') {\r\n          await initAndRenderChart('merchantRanking', merchantRankingChart, chartData.merchantRanking);\r\n        }\r\n        if (value === 'all' || value === 'product') {\r\n          await initAndRenderChart('productRanking', productRankingChart, chartData.productRanking);\r\n        }\r\n        if (value === 'all' || value === 'region') {\r\n          await initAndRenderChart('regionalDistribution', regionalDistributionChart, chartData.regionalDistribution);\r\n        }\r\n        if (value === 'all' || value === 'status') {\r\n          await initAndRenderChart('orderStatusDistribution', orderStatusDistributionChart, chartData.orderStatusDistribution);\r\n        }\r\n      });\r\n\r\n      // 通知用户\r\n      ElNotification({\r\n        title: '图表显示已更新',\r\n        message: value === 'all' ? '显示所有图表' : `仅显示${getChartTypeName(value)}图表`,\r\n        type: 'success',\r\n        duration: 2000\r\n      });\r\n    };\r\n\r\n    // 初始化并渲染特定图表\r\n    const initAndRenderChart = async (chartType, chartRef, data) => {\r\n      if (!chartRef.value || !data) return;\r\n\r\n      // 销毁旧实例\r\n      disposeChart(chartType);\r\n\r\n      // 创建新实例\r\n      await nextTick();\r\n\r\n      switch (chartType) {\r\n        case 'salesTrend':\r\n          salesTrendChartInstance = echarts.init(chartRef.value, 'ecmsTheme');\r\n          renderSalesTrendChart(data);\r\n          break;\r\n        case 'merchantRanking':\r\n          merchantRankingChartInstance = echarts.init(chartRef.value, 'ecmsTheme');\r\n          renderMerchantRankingChart(data);\r\n          break;\r\n        case 'productRanking':\r\n          productRankingChartInstance = echarts.init(chartRef.value, 'ecmsTheme');\r\n          renderProductRankingChart(data);\r\n          break;\r\n        case 'regionalDistribution':\r\n          regionalDistributionChartInstance = echarts.init(chartRef.value, 'ecmsTheme');\r\n          renderRegionalDistributionChart(data);\r\n          break;\r\n        case 'orderStatusDistribution':\r\n          orderStatusDistributionChartInstance = echarts.init(chartRef.value, 'ecmsTheme');\r\n          renderOrderStatusDistributionChart(data);\r\n          break;\r\n      }\r\n    };\r\n\r\n    // 销毁特定图表实例\r\n    const disposeChart = (chartType) => {\r\n      switch (chartType) {\r\n        case 'salesTrend':\r\n          if (salesTrendChartInstance) {\r\n            salesTrendChartInstance.dispose();\r\n            salesTrendChartInstance = null;\r\n          }\r\n          break;\r\n        case 'merchantRanking':\r\n          if (merchantRankingChartInstance) {\r\n            merchantRankingChartInstance.dispose();\r\n            merchantRankingChartInstance = null;\r\n          }\r\n          break;\r\n        case 'productRanking':\r\n          if (productRankingChartInstance) {\r\n            productRankingChartInstance.dispose();\r\n            productRankingChartInstance = null;\r\n          }\r\n          break;\r\n        case 'regionalDistribution':\r\n          if (regionalDistributionChartInstance) {\r\n            regionalDistributionChartInstance.dispose();\r\n            regionalDistributionChartInstance = null;\r\n          }\r\n          break;\r\n        case 'orderStatusDistribution':\r\n          if (orderStatusDistributionChartInstance) {\r\n            orderStatusDistributionChartInstance.dispose();\r\n            orderStatusDistributionChartInstance = null;\r\n          }\r\n          break;\r\n      }\r\n    };\r\n\r\n    // 销毁所有图表实例\r\n    const disposeAllCharts = () => {\r\n      disposeChart('salesTrend');\r\n      disposeChart('merchantRanking');\r\n      disposeChart('productRanking');\r\n      disposeChart('regionalDistribution');\r\n      disposeChart('orderStatusDistribution');\r\n    };\r\n\r\n    // 获取图表类型名称\r\n    const getChartTypeName = (chartType) => {\r\n      switch (chartType) {\r\n        case 'trend': return '销售趋势';\r\n        case 'merchant': return '商家销售排行';\r\n        case 'product': return '产品销售排行';\r\n        case 'region': return '区域销售分布';\r\n        case 'status': return '订单状态分布';\r\n        default: return '';\r\n      }\r\n    };\r\n\r\n    // 销售概览数据\r\n    const salesOverview = reactive({\r\n      totalSales: 0,\r\n      totalOrders: 0,\r\n      avgOrderValue: 0,\r\n      pendingOrders: 0,\r\n      completedOrders: 0,\r\n      recentSales: 0,\r\n      merchantCount: 0,\r\n      activeMerchantCount: 0\r\n    });\r\n\r\n    // 初始化图表主题\r\n    const initChartTheme = () => {\r\n      const theme = {\r\n        color: ['#409EFF', '#67C23A', '#E6A23C', '#F56C6C', '#909399', '#9254de', '#36cfc9', '#ff9c6e'],\r\n        backgroundColor: 'rgba(252,252,252,0.6)',\r\n        textStyle: {\r\n          fontFamily: 'Arial, \"Microsoft YaHei\", sans-serif'\r\n        },\r\n        title: {\r\n          textStyle: {\r\n            color: '#303133',\r\n            fontSize: 16,\r\n            fontWeight: 'normal'\r\n          },\r\n          left: 'center'\r\n        },\r\n        legend: {\r\n          textStyle: {\r\n            color: '#606266'\r\n          }\r\n        },\r\n        grid: {\r\n          containLabel: true,\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%'\r\n        }\r\n      };\r\n\r\n      echarts.registerTheme('ecmsTheme', theme);\r\n    };\r\n\r\n    // 处理窗口大小变化\r\n    const handleResize = () => {\r\n      if (isChartVisible('trend') && salesTrendChartInstance) {\r\n        salesTrendChartInstance.resize();\r\n      }\r\n      if (isChartVisible('merchant') && merchantRankingChartInstance) {\r\n        merchantRankingChartInstance.resize();\r\n      }\r\n      if (isChartVisible('product') && productRankingChartInstance) {\r\n        productRankingChartInstance.resize();\r\n      }\r\n      if (isChartVisible('region') && regionalDistributionChartInstance) {\r\n        regionalDistributionChartInstance.resize();\r\n      }\r\n      if (isChartVisible('status') && orderStatusDistributionChartInstance) {\r\n        orderStatusDistributionChartInstance.resize();\r\n      }\r\n    };\r\n\r\n    // 获取仪表板数据\r\n    const fetchDashboardData = async () => {\r\n      try {\r\n        loading.dashboard = true;\r\n\r\n        // 显示所有图表的加载指示器\r\n        loading.salesTrend = true;\r\n        loading.merchantRanking = true;\r\n        loading.productRanking = true;\r\n        loading.regionalDistribution = true;\r\n        loading.orderStatusDistribution = true;\r\n\r\n        // 通知用户正在基于所选时间段更新数据\r\n        ElMessage({\r\n          message: `正在加载${timeFilterLabel.value}数据...`,\r\n          type: 'info',\r\n          duration: 1000\r\n        });\r\n\r\n        // 销毁所有现有图表实例\r\n        disposeAllCharts();\r\n\r\n        // 使用当前时间筛选获取新数据\r\n        const response = await axios.get(`http://localhost:8080/api/admin/data-visualization/dashboard?period=${timeFilter.value}`);\r\n        const dashboardData = response.data;\r\n\r\n        // 更新销售概览数据\r\n        Object.assign(salesOverview, dashboardData.salesOverview);\r\n\r\n        // 缓存图表数据\r\n        Object.assign(chartData, {\r\n          salesTrend: dashboardData.salesTrend,\r\n          merchantRanking: dashboardData.merchantRanking,\r\n          productRanking: dashboardData.productRanking,\r\n          regionalDistribution: dashboardData.regionalDistribution,\r\n          orderStatusDistribution: dashboardData.orderStatusDistribution\r\n        });\r\n\r\n        // 等待DOM更新\r\n        await nextTick();\r\n\r\n        // 重新初始化并渲染当前可见的图表\r\n        const promises = [];\r\n\r\n        if (isChartVisible('trend')) {\r\n          promises.push(initAndRenderChart('salesTrend', salesTrendChart, chartData.salesTrend));\r\n        }\r\n\r\n        if (isChartVisible('merchant')) {\r\n          promises.push(initAndRenderChart('merchantRanking', merchantRankingChart, chartData.merchantRanking));\r\n        }\r\n\r\n        if (isChartVisible('product')) {\r\n          promises.push(initAndRenderChart('productRanking', productRankingChart, chartData.productRanking));\r\n        }\r\n\r\n        if (isChartVisible('region')) {\r\n          promises.push(initAndRenderChart('regionalDistribution', regionalDistributionChart, chartData.regionalDistribution));\r\n        }\r\n\r\n        if (isChartVisible('status')) {\r\n          promises.push(initAndRenderChart('orderStatusDistribution', orderStatusDistributionChart, chartData.orderStatusDistribution));\r\n        }\r\n\r\n        await Promise.all(promises);\r\n\r\n        // 成功通知，提及时间周期\r\n        ElNotification({\r\n          title: '数据更新成功',\r\n          message: `${timeFilterLabel.value}数据已成功加载`,\r\n          type: 'success',\r\n          duration: 2000\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error('获取仪表板数据失败', error);\r\n        ElMessage({\r\n          message: '获取仪表板数据失败: ' + (error.response?.data?.message || error.message),\r\n          type: 'error'\r\n        });\r\n      } finally {\r\n        // 清除所有加载状态\r\n        loading.dashboard = false;\r\n        loading.salesTrend = false;\r\n        loading.merchantRanking = false;\r\n        loading.productRanking = false;\r\n        loading.regionalDistribution = false;\r\n        loading.orderStatusDistribution = false;\r\n      }\r\n    };\r\n\r\n    // 渲染销售趋势图，增强的时间周期处理\r\n    const renderSalesTrendChart = (data) => {\r\n      if (!data || !salesTrendChartInstance) {\r\n        console.error('渲染销售趋势图失败：数据或图表实例不存在');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const option = {\r\n          title: {\r\n            text: data.title || '平台销售趋势',\r\n            subtext: `按${timeFilterLabel.value}统计`,\r\n            left: 'center',\r\n            textStyle: {\r\n              fontSize: 16\r\n            },\r\n            subtextStyle: {\r\n              fontSize: 12,\r\n              color: '#909399'\r\n            }\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            formatter: function(params) {\r\n              const param = params[0];\r\n              let formattedValue = param.value.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n              let timeUnit = '';\r\n\r\n              switch (timeFilter.value) {\r\n                case 'daily':\r\n                  timeUnit = '日';\r\n                  break;\r\n                case 'weekly':\r\n                  timeUnit = '周';\r\n                  break;\r\n                case 'monthly':\r\n                  timeUnit = '月';\r\n                  break;\r\n              }\r\n\r\n              return `${param.name} ${timeUnit}<br/>${param.seriesName}: ¥${formattedValue}`;\r\n            },\r\n            backgroundColor: 'rgba(255,255,255,0.8)',\r\n            borderColor: '#eee',\r\n            borderWidth: 1,\r\n            textStyle: {\r\n              color: '#333'\r\n            },\r\n            extraCssText: 'box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);'\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            data: data.xAxis || [],\r\n            boundaryGap: false,\r\n            axisTick: {\r\n              alignWithLabel: true\r\n            },\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: '#dcdfe6'\r\n              }\r\n            },\r\n            axisLabel: {\r\n              color: '#606266',\r\n              rotate: data.xAxis && data.xAxis.length > 10 ? 30 : 0\r\n            }\r\n          },\r\n          yAxis: {\r\n            type: 'value',\r\n            name: '销售额(元)',\r\n            nameTextStyle: {\r\n              color: '#606266'\r\n            },\r\n            axisLine: {\r\n              show: true,\r\n              lineStyle: {\r\n                color: '#dcdfe6'\r\n              }\r\n            },\r\n            splitLine: {\r\n              lineStyle: {\r\n                color: '#ebeef5'\r\n              }\r\n            }\r\n          },\r\n          series: [{\r\n            name: '销售额',\r\n            type: 'line',\r\n            data: data.series || [],\r\n            smooth: true,\r\n            symbol: 'circle',\r\n            symbolSize: 6,\r\n            itemStyle: {\r\n              color: '#409EFF'\r\n            },\r\n            lineStyle: {\r\n              width: 3\r\n            },\r\n            areaStyle: {\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                { offset: 0, color: 'rgba(64, 158, 255, 0.5)' },\r\n                { offset: 1, color: 'rgba(64, 158, 255, 0.1)' }\r\n              ])\r\n            },\r\n            markPoint: {\r\n              data: [\r\n                { type: 'max', name: '最大值' },\r\n                { type: 'min', name: '最小值' }\r\n              ]\r\n            },\r\n            markLine: {\r\n              data: [\r\n                { type: 'average', name: '平均值' }\r\n              ]\r\n            }\r\n          }]\r\n        };\r\n\r\n        salesTrendChartInstance.setOption(option, true);\r\n      } catch (error) {\r\n        console.error('渲染销售趋势图出错:', error);\r\n      }\r\n    };\r\n\r\n    // 渲染商家销售排行图\r\n    const renderMerchantRankingChart = (data) => {\r\n      if (!data || !merchantRankingChartInstance) {\r\n        console.error('渲染商家销售排行图失败：数据或图表实例不存在');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const option = {\r\n          title: {\r\n            text: data.title || '商家销售排行',\r\n            subtext: `按${timeFilterLabel.value}统计`,\r\n            left: 'center'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            },\r\n            formatter: '{b}: {c} 元',\r\n            backgroundColor: 'rgba(255,255,255,0.8)',\r\n            borderColor: '#eee',\r\n            borderWidth: 1,\r\n            textStyle: {\r\n              color: '#333'\r\n            },\r\n            extraCssText: 'box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);'\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n          },\r\n          xAxis: {\r\n            type: 'value',\r\n            name: '销售额(元)',\r\n            nameTextStyle: {\r\n              color: '#606266'\r\n            },\r\n            axisLine: {\r\n              show: true,\r\n              lineStyle: {\r\n                color: '#dcdfe6'\r\n              }\r\n            },\r\n            splitLine: {\r\n              lineStyle: {\r\n                color: '#ebeef5'\r\n              }\r\n            }\r\n          },\r\n          yAxis: {\r\n            type: 'category',\r\n            data: data.merchantNames || [],\r\n            axisLabel: {\r\n              interval: 0,\r\n              rotate: 0,\r\n              color: '#606266'\r\n            },\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: '#dcdfe6'\r\n              }\r\n            }\r\n          },\r\n          visualMap: {\r\n            min: 0,\r\n            max: Math.max(...(data.salesValues || [0])),\r\n            text: ['高', '低'],\r\n            inRange: {\r\n              color: ['#67C23A', '#409EFF']\r\n            },\r\n            calculable: true,\r\n            orient: 'horizontal',\r\n            left: 'center',\r\n            bottom: '0%',\r\n            show: false\r\n          },\r\n          series: [{\r\n            name: '销售额',\r\n            type: 'bar',\r\n            data: data.salesValues || [],\r\n            barWidth: '50%',\r\n            itemStyle: {\r\n              color: function (params) {\r\n                const value = params.value;\r\n                const max = Math.max(...(data.salesValues || [0]));\r\n                return new echarts.graphic.LinearGradient(0, 0, 1, 0, [\r\n                  { offset: 0, color: '#67C23A' },\r\n                  { offset: value / max, color: '#409EFF' }\r\n                ]);\r\n              },\r\n              borderRadius: [0, 4, 4, 0]\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: 'right',\r\n              formatter: '{c} 元'\r\n            }\r\n          }]\r\n        };\r\n\r\n        merchantRankingChartInstance.setOption(option, true);\r\n      } catch (error) {\r\n        console.error('渲染商家销售排行图出错:', error);\r\n      }\r\n    };\r\n\r\n    // 渲染产品销售排行图\r\n    const renderProductRankingChart = (data) => {\r\n      if (!data || !productRankingChartInstance) {\r\n        console.error('渲染产品销售排行图失败：数据或图表实例不存在');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const option = {\r\n          title: {\r\n            text: data.title || '产品销售排行',\r\n            subtext: `按${timeFilterLabel.value}统计`,\r\n            left: 'center'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            },\r\n            formatter: '{b}: {c} 元',\r\n            backgroundColor: 'rgba(255,255,255,0.8)',\r\n            borderColor: '#eee',\r\n            borderWidth: 1,\r\n            textStyle: {\r\n              color: '#333'\r\n            },\r\n            extraCssText: 'box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);'\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n          },\r\n          xAxis: {\r\n            type: 'value',\r\n            name: '销售额(元)',\r\n            nameTextStyle: {\r\n              color: '#606266'\r\n            },\r\n            axisLine: {\r\n              show: true,\r\n              lineStyle: {\r\n                color: '#dcdfe6'\r\n              }\r\n            },\r\n            splitLine: {\r\n              lineStyle: {\r\n                color: '#ebeef5'\r\n              }\r\n            }\r\n          },\r\n          yAxis: {\r\n            type: 'category',\r\n            data: data.productNames || [],\r\n            axisLabel: {\r\n              interval: 0,\r\n              rotate: 0,\r\n              color: '#606266'\r\n            },\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: '#dcdfe6'\r\n              }\r\n            }\r\n          },\r\n          series: [{\r\n            name: '销售额',\r\n            type: 'bar',\r\n            data: data.salesValues || [],\r\n            barWidth: '50%',\r\n            itemStyle: {\r\n              color: function (params) {\r\n                const colorList = ['#67C23A', '#409EFF', '#E6A23C', '#F56C6C', '#909399'];\r\n                return new echarts.graphic.LinearGradient(0, 0, 1, 0, [\r\n                  { offset: 0, color: '#E6A23C' },\r\n                  { offset: 1, color: colorList[params.dataIndex % colorList.length] }\r\n                ]);\r\n              },\r\n              borderRadius: [0, 4, 4, 0]\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: 'right',\r\n              formatter: '{c} 元'\r\n            }\r\n          }]\r\n        };\r\n\r\n        productRankingChartInstance.setOption(option, true);\r\n      } catch (error) {\r\n        console.error('渲染产品销售排行图出错:', error);\r\n      }\r\n    };\r\n\r\n    // 渲染区域销售分布图\r\n    const renderRegionalDistributionChart = (data) => {\r\n      if (!data || !regionalDistributionChartInstance) {\r\n        console.error('渲染区域销售分布图失败：数据或图表实例不存在');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const option = {\r\n          title: {\r\n            text: data.title || '区域销售分布',\r\n            subtext: `按${timeFilterLabel.value}统计`,\r\n            left: 'center'\r\n          },\r\n          tooltip: {\r\n            trigger: 'item',\r\n            formatter: '{b}: {c} 元 ({d}%)',\r\n            backgroundColor: 'rgba(255,255,255,0.8)',\r\n            borderColor: '#eee',\r\n            borderWidth: 1,\r\n            textStyle: {\r\n              color: '#333'\r\n            },\r\n            extraCssText: 'box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);'\r\n          },\r\n          legend: {\r\n            type: 'scroll',\r\n            orient: 'vertical',\r\n            right: 10,\r\n            top: 20,\r\n            bottom: 20,\r\n            textStyle: {\r\n              color: '#606266'\r\n            }\r\n          },\r\n          series: [{\r\n            name: '区域销售',\r\n            type: 'pie',\r\n            radius: ['40%', '70%'],\r\n            center: ['40%', '50%'],\r\n            avoidLabelOverlap: true,\r\n            itemStyle: {\r\n              borderRadius: 4,\r\n              borderColor: '#fff',\r\n              borderWidth: 2\r\n            },\r\n            label: {\r\n              show: false,\r\n              position: 'center'\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: '18',\r\n                fontWeight: 'bold'\r\n              }\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            },\r\n            data: data.regions ? data.regions.map((region, index) => {\r\n              return {\r\n                name: region,\r\n                value: data.values[index]\r\n              };\r\n            }) : []\r\n          }]\r\n        };\r\n\r\n        regionalDistributionChartInstance.setOption(option, true);\r\n      } catch (error) {\r\n        console.error('渲染区域销售分布图出错:', error);\r\n      }\r\n    };\r\n\r\n    // 渲染订单状态分布图\r\n    const renderOrderStatusDistributionChart = (data) => {\r\n      if (!data || !orderStatusDistributionChartInstance) {\r\n        console.error('渲染订单状态分布图失败：数据或图表实例不存在');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const option = {\r\n          title: {\r\n            text: data.title || '订单状态分布',\r\n            subtext: `按${timeFilterLabel.value}统计`,\r\n            left: 'center'\r\n          },\r\n          tooltip: {\r\n            trigger: 'item',\r\n            formatter: '{a} <br/>{b}: {c} ({d}%)',\r\n            backgroundColor: 'rgba(255,255,255,0.8)',\r\n            borderColor: '#eee',\r\n            borderWidth: 1,\r\n            textStyle: {\r\n              color: '#333'\r\n            },\r\n            extraCssText: 'box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);'\r\n          },\r\n          legend: {\r\n            orient: 'vertical',\r\n            left: 10,\r\n            top: 'center',\r\n            textStyle: {\r\n              color: '#606266'\r\n            }\r\n          },\r\n          series: [{\r\n            name: '订单状态',\r\n            type: 'pie',\r\n            radius: ['40%', '70%'],\r\n            avoidLabelOverlap: false,\r\n            itemStyle: {\r\n              borderRadius: 4,\r\n              borderColor: '#fff',\r\n              borderWidth: 2\r\n            },\r\n            label: {\r\n              show: false,\r\n              position: 'center'\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: '18',\r\n                fontWeight: 'bold'\r\n              }\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            },\r\n            data: data.data ? data.data.map(item => {\r\n              // 为不同状态设置不同颜色\r\n              const colorMap = {\r\n                '待处理': '#E6A23C',\r\n                '已发货': '#409EFF',\r\n                '已完成': '#67C23A',\r\n                '已退款': '#F56C6C'\r\n              };\r\n\r\n              return {\r\n                ...item,\r\n                itemStyle: {\r\n                  color: colorMap[item.name] || undefined\r\n                }\r\n              };\r\n            }) : []\r\n          }]\r\n        };\r\n\r\n        orderStatusDistributionChartInstance.setOption(option, true);\r\n      } catch (error) {\r\n        console.error('渲染订单状态分布图出错:', error);\r\n      }\r\n    };\r\n\r\n    // 格式化货币\r\n    const formatCurrency = (value) => {\r\n      if (value === undefined || value === null) return '¥0.00';\r\n      return '¥' + parseFloat(value).toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','); // 添加千位分隔符\r\n    };\r\n\r\n    // 组件挂载\r\n    onMounted(async () => {\r\n      await nextTick();\r\n\r\n      // 初始化图表主题\r\n      initChartTheme();\r\n\r\n      // 添加窗口大小变化监听\r\n      window.addEventListener('resize', handleResize);\r\n\r\n      // 获取初始数据\r\n      fetchDashboardData();\r\n\r\n      // 显示欢迎提示\r\n      ElNotification({\r\n        title: '数据仪表板已加载',\r\n        message: '欢迎使用平台数据可视化系统',\r\n        type: 'success',\r\n        duration: 3000\r\n      });\r\n    });\r\n\r\n    // 组件卸载\r\n    onUnmounted(() => {\r\n      // 销毁所有图表实例\r\n      disposeAllCharts();\r\n\r\n      // 移除窗口大小变化监听\r\n      window.removeEventListener('resize', handleResize);\r\n    });\r\n\r\n    return {\r\n      salesTrendChart,\r\n      merchantRankingChart,\r\n      productRankingChart,\r\n      regionalDistributionChart,\r\n      orderStatusDistributionChart,\r\n      loading,\r\n      timeFilter,\r\n      timeFilterLabel,\r\n      salesOverview,\r\n      fetchDashboardData,\r\n      formatCurrency,\r\n      selectedChartType,\r\n      isChartVisible,\r\n      handleChartTypeChange,\r\n      handleTimeFilterChange\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.admin-visualization-view {\r\n  padding: 20px;\r\n}\r\n\r\n.view-header {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.view-header h2 {\r\n  margin-top: 10px;\r\n}\r\n\r\n.admin-visualization-dashboard {\r\n  padding: 20px;\r\n}\r\n\r\n.dashboard-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.toolbar {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.time-filter {\r\n  min-width: 120px;\r\n}\r\n\r\n.dashboard-cards {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.data-card {\r\n  margin-bottom: 20px;\r\n  height: 100%;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.card-content {\r\n  text-align: center;\r\n  padding: 10px 0;\r\n}\r\n\r\n.card-value {\r\n  font-size: 24px;\r\n  color: #303133;\r\n  margin: 0;\r\n}\r\n\r\n.chart-selector {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chart-card {\r\n  margin-bottom: 20px;\r\n  height: 100%;\r\n}\r\n\r\n.chart-container {\r\n  height: 350px;\r\n  width: 100%;\r\n}\r\n\r\n.chart {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n.dashboard-charts {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .dashboard-header {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n\r\n  .toolbar {\r\n    margin-top: 10px;\r\n    width: 100%;\r\n  }\r\n\r\n  .time-filter {\r\n    flex-grow: 1;\r\n  }\r\n\r\n  .chart-container {\r\n    height: 300px;\r\n  }\r\n\r\n  .card-value {\r\n    font-size: 20px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";;EAEOA,KAAK,EAAC;AAA0B;;EAC9BA,KAAK,EAAC;AAAa;;EASnBA,KAAK,EAAC;AAA+B;;EACnCA,KAAK,EAAC;AAAkB;;EAGtBA,KAAK,EAAC;AAAS;;EA0BTA,KAAK,EAAC;AAAa;;EAKrBA,KAAK,EAAC;AAAc;;EACnBA,KAAK,EAAC;AAAY;;EAQjBA,KAAK,EAAC;AAAa;;EAKrBA,KAAK,EAAC;AAAc;;EACnBA,KAAK,EAAC;AAAY;;EAQjBA,KAAK,EAAC;AAAa;;EAKrBA,KAAK,EAAC;AAAc;;EACnBA,KAAK,EAAC;AAAY;;EAQjBA,KAAK,EAAC;AAAa;;EAKrBA,KAAK,EAAC;AAAc;;EACnBA,KAAK,EAAC;AAAY;;EAQjBA,KAAK,EAAC;AAAa;;EAKrBA,KAAK,EAAC;AAAc;;EACnBA,KAAK,EAAC;AAAY;;EAQjBA,KAAK,EAAC;AAAa;;EAKrBA,KAAK,EAAC;AAAc;;EACnBA,KAAK,EAAC;AAAY;;EAOzBA,KAAK,EAAC;AAAgB;;EAiBdA,KAAK,EAAC;AAAa;;EAKrBA,KAAK,EAAC;AAAiB;;EACrBC,GAAG,EAAC,iBAAiB;EAACD,KAAK,EAAC;;;EAS5BA,KAAK,EAAC;AAAa;;EAKrBA,KAAK,EAAC;AAAiB;;EACrBC,GAAG,EAAC,sBAAsB;EAACD,KAAK,EAAC;;;EASjCA,KAAK,EAAC;AAAa;;EAKrBA,KAAK,EAAC;AAAiB;;EACrBC,GAAG,EAAC,qBAAqB;EAACD,KAAK,EAAC;;;EAShCA,KAAK,EAAC;AAAa;;EAKrBA,KAAK,EAAC;AAAiB;;EACrBC,GAAG,EAAC,2BAA2B;EAACD,KAAK,EAAC;;;EAStCA,KAAK,EAAC;AAAa;;EAKrBA,KAAK,EAAC;AAAiB;;EACrBC,GAAG,EAAC,8BAA8B;EAACD,KAAK,EAAC;;;;;;;;;;;;;;;;;;uBAhN5DE,mBAAA,CAAAC,SAAA,SACEC,YAAA,CAAyCC,oBAAA;IAA7BC,UAAQ,EAAEC,IAAA,CAAAC;EAAgB,yCACtCC,mBAAA,CAoNM,OApNNC,UAoNM,GAnNJD,mBAAA,CAOM,OAPNE,UAOM,GANJP,YAAA,CAIgBQ,wBAAA;IAJDC,SAAS,EAAC;EAAG;IAJlCC,OAAA,EAAAC,QAAA,CAKQ,MAAoE,CAApEX,YAAA,CAAoEY,6BAAA;MAA/CC,EAAE,EAAE;QAAAC,IAAA;MAAA;IAAkB;MALnDJ,OAAA,EAAAC,QAAA,CAKqD,MAAEI,MAAA,QAAAA,MAAA,OALvDC,gBAAA,CAKqD,IAAE,E;MALvDC,CAAA;QAMQjB,YAAA,CAA6CY,6BAAA;MANrDF,OAAA,EAAAC,QAAA,CAM4B,MAAII,MAAA,QAAAA,MAAA,OANhCC,gBAAA,CAM4B,MAAI,E;MANhCC,CAAA;QAOQjB,YAAA,CAAgDY,6BAAA;MAPxDF,OAAA,EAAAC,QAAA,CAO4B,MAAOI,MAAA,QAAAA,MAAA,OAPnCC,gBAAA,CAO4B,SAAO,E;MAPnCC,CAAA;;IAAAA,CAAA;gCASMZ,mBAAA,CAAgB,YAAZ,SAAO,qB,GAGbA,mBAAA,CAyMM,OAzMNa,UAyMM,GAxMJb,mBAAA,CAsBM,OAtBNc,UAsBM,G,0BArBJd,mBAAA,CAA0C;IAAtCT,KAAK,EAAC;EAAiB,GAAC,WAAS,sBAErCS,mBAAA,CAkBM,OAlBNe,UAkBM,GAjBJpB,YAAA,CAQYqB,oBAAA;IAzBtBC,UAAA,EAkBuBC,MAAA,CAAAC,UAAU;IAlBjC,uBAAAT,MAAA,QAAAA,MAAA,MAAAU,MAAA,IAkBuBF,MAAA,CAAAC,UAAU,GAAAC,MAAA;IACnBC,WAAW,EAAC,QAAQ;IACnBC,QAAM,EAAEJ,MAAA,CAAAK,sBAAsB;IAC/BhC,KAAK,EAAC;;IArBpBc,OAAA,EAAAC,QAAA,CAsBY,MAAgD,CAAhDX,YAAA,CAAgD6B,oBAAA;MAArCC,KAAK,EAAC,IAAI;MAACC,KAAK,EAAC;QAC5B/B,YAAA,CAAiD6B,oBAAA;MAAtCC,KAAK,EAAC,IAAI;MAACC,KAAK,EAAC;QAC5B/B,YAAA,CAAkD6B,oBAAA;MAAvCC,KAAK,EAAC,IAAI;MAACC,KAAK,EAAC;;IAxBxCd,CAAA;iDA2BUjB,YAAA,CAMYgC,oBAAA;IALRC,IAAI,EAAC,SAAS;IACbC,OAAK,EAAEX,MAAA,CAAAY,kBAAkB;IACzBC,OAAO,EAAEb,MAAA,CAAAa,OAAO,CAACC,SAAS;IAC3BzC,KAAK,EAAC;;IA/BpBc,OAAA,EAAAC,QAAA,CAgCY,MAA8B,CAA9BX,YAAA,CAA8BsC,kBAAA;MAhC1C5B,OAAA,EAAAC,QAAA,CAgCqB,MAAW,CAAXX,YAAA,CAAWuC,kBAAA,E;MAhChCtB,CAAA;kCAAAD,gBAAA,CAgC0C,QAChC,G;IAjCVC,CAAA;iDAqCMuB,mBAAA,YAAe,EACfxC,YAAA,CAoFSyC,iBAAA;IApFAC,MAAM,EAAE,EAAE;IAAE9C,KAAK,EAAC;;IAtCjCc,OAAA,EAAAC,QAAA,CAuCQ,MAYS,CAZTX,YAAA,CAYS2C,iBAAA;MAZAC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,CAAC;MAAGC,EAAE,EAAE,CAAC;MAAGC,EAAE,EAAE;;MAvCvDtC,OAAA,EAAAC,QAAA,CAwCU,MAUU,CAVVX,YAAA,CAUUiD,kBAAA;QAVDC,MAAM,EAAC,OAAO;QAACtD,KAAK,EAAC;;QACjBuD,MAAM,EAAAxC,QAAA,CACf,MAGM,CAHNN,mBAAA,CAGM,OAHN+C,UAGM,G,0BAFJ/C,mBAAA,CAAiB,cAAX,MAAI,sBACVL,YAAA,CAA8DqD,iBAAA;UAAtDpB,IAAI,EAAC,SAAS;UAACqB,MAAM,EAAC,OAAO;UAACC,IAAI,EAAC;;UA5C3D7C,OAAA,EAAAC,QAAA,CA4CmE,MAAEI,MAAA,QAAAA,MAAA,OA5CrEC,gBAAA,CA4CmE,IAAE,E;UA5CrEC,CAAA;;QAAAP,OAAA,EAAAC,QAAA,CA+CY,MAEM,CAFNN,mBAAA,CAEM,OAFNmD,UAEM,GADJnD,mBAAA,CAA0E,MAA1EoD,UAA0E,EAAAC,gBAAA,CAAhDnC,MAAA,CAAAoC,cAAc,CAACpC,MAAA,CAAAqC,aAAa,CAACC,UAAU,kB;QAhD/E5C,CAAA;;MAAAA,CAAA;QAqDQjB,YAAA,CAYS2C,iBAAA;MAZAC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,CAAC;MAAGC,EAAE,EAAE,CAAC;MAAGC,EAAE,EAAE;;MArDvDtC,OAAA,EAAAC,QAAA,CAsDU,MAUU,CAVVX,YAAA,CAUUiD,kBAAA;QAVDC,MAAM,EAAC,OAAO;QAACtD,KAAK,EAAC;;QACjBuD,MAAM,EAAAxC,QAAA,CACf,MAGM,CAHNN,mBAAA,CAGM,OAHNyD,UAGM,G,4BAFJzD,mBAAA,CAAiB,cAAX,MAAI,sBACVL,YAAA,CAA8DqD,iBAAA;UAAtDpB,IAAI,EAAC,SAAS;UAACqB,MAAM,EAAC,OAAO;UAACC,IAAI,EAAC;;UA1D3D7C,OAAA,EAAAC,QAAA,CA0DmE,MAAEI,MAAA,SAAAA,MAAA,QA1DrEC,gBAAA,CA0DmE,IAAE,E;UA1DrEC,CAAA;;QAAAP,OAAA,EAAAC,QAAA,CA6DY,MAEM,CAFNN,mBAAA,CAEM,OAFN0D,WAEM,GADJ1D,mBAAA,CAAgE,MAAhE2D,WAAgE,EAAAN,gBAAA,CAAtCnC,MAAA,CAAAqC,aAAa,CAACK,WAAW,sB;QA9DjEhD,CAAA;;MAAAA,CAAA;QAmEQjB,YAAA,CAYS2C,iBAAA;MAZAC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,CAAC;MAAGC,EAAE,EAAE,CAAC;MAAGC,EAAE,EAAE;;MAnEvDtC,OAAA,EAAAC,QAAA,CAoEU,MAUU,CAVVX,YAAA,CAUUiD,kBAAA;QAVDC,MAAM,EAAC,OAAO;QAACtD,KAAK,EAAC;;QACjBuD,MAAM,EAAAxC,QAAA,CACf,MAGM,CAHNN,mBAAA,CAGM,OAHN6D,WAGM,G,4BAFJ7D,mBAAA,CAAmB,cAAb,QAAM,sBACZL,YAAA,CAA8DqD,iBAAA;UAAtDpB,IAAI,EAAC,SAAS;UAACqB,MAAM,EAAC,OAAO;UAACC,IAAI,EAAC;;UAxE3D7C,OAAA,EAAAC,QAAA,CAwEmE,MAAEI,MAAA,SAAAA,MAAA,QAxErEC,gBAAA,CAwEmE,IAAE,E;UAxErEC,CAAA;;QAAAP,OAAA,EAAAC,QAAA,CA2EY,MAEM,CAFNN,mBAAA,CAEM,OAFN8D,WAEM,GADJ9D,mBAAA,CAA6E,MAA7E+D,WAA6E,EAAAV,gBAAA,CAAnDnC,MAAA,CAAAoC,cAAc,CAACpC,MAAA,CAAAqC,aAAa,CAACS,aAAa,kB;QA5ElFpD,CAAA;;MAAAA,CAAA;QAiFQjB,YAAA,CAYS2C,iBAAA;MAZAC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,CAAC;MAAGC,EAAE,EAAE,CAAC;MAAGC,EAAE,EAAE;;MAjFvDtC,OAAA,EAAAC,QAAA,CAkFU,MAUU,CAVVX,YAAA,CAUUiD,kBAAA;QAVDC,MAAM,EAAC,OAAO;QAACtD,KAAK,EAAC;;QACjBuD,MAAM,EAAAxC,QAAA,CACf,MAGM,CAHNN,mBAAA,CAGM,OAHNiE,WAGM,G,4BAFJjE,mBAAA,CAAqB,cAAf,UAAQ,sBACdL,YAAA,CAA2DqD,iBAAA;UAAnDpB,IAAI,EAAC,MAAM;UAACqB,MAAM,EAAC,OAAO;UAACC,IAAI,EAAC;;UAtFxD7C,OAAA,EAAAC,QAAA,CAsFgE,MAAEI,MAAA,SAAAA,MAAA,QAtFlEC,gBAAA,CAsFgE,IAAE,E;UAtFlEC,CAAA;;QAAAP,OAAA,EAAAC,QAAA,CAyFY,MAEM,CAFNN,mBAAA,CAEM,OAFNkE,WAEM,GADJlE,mBAAA,CAA2E,MAA3EmE,WAA2E,EAAAd,gBAAA,CAAjDnC,MAAA,CAAAoC,cAAc,CAACpC,MAAA,CAAAqC,aAAa,CAACa,WAAW,kB;QA1FhFxD,CAAA;;MAAAA,CAAA;QA+FQjB,YAAA,CAYS2C,iBAAA;MAZAC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,CAAC;MAAGC,EAAE,EAAE,CAAC;MAAGC,EAAE,EAAE;;MA/FvDtC,OAAA,EAAAC,QAAA,CAgGU,MAUU,CAVVX,YAAA,CAUUiD,kBAAA;QAVDC,MAAM,EAAC,OAAO;QAACtD,KAAK,EAAC;;QACjBuD,MAAM,EAAAxC,QAAA,CACf,MAGM,CAHNN,mBAAA,CAGM,OAHNqE,WAGM,G,4BAFJrE,mBAAA,CAAiB,cAAX,MAAI,sBACVL,YAAA,CAA6DqD,iBAAA;UAArDpB,IAAI,EAAC,QAAQ;UAACqB,MAAM,EAAC,OAAO;UAACC,IAAI,EAAC;;UApG1D7C,OAAA,EAAAC,QAAA,CAoGkE,MAAEI,MAAA,SAAAA,MAAA,QApGpEC,gBAAA,CAoGkE,IAAE,E;UApGpEC,CAAA;;QAAAP,OAAA,EAAAC,QAAA,CAuGY,MAEM,CAFNN,mBAAA,CAEM,OAFNsE,WAEM,GADJtE,mBAAA,CAAkE,MAAlEuE,WAAkE,EAAAlB,gBAAA,CAAxCnC,MAAA,CAAAqC,aAAa,CAACiB,aAAa,sB;QAxGnE5D,CAAA;;MAAAA,CAAA;QA6GQjB,YAAA,CAYS2C,iBAAA;MAZAC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,CAAC;MAAGC,EAAE,EAAE,CAAC;MAAGC,EAAE,EAAE;;MA7GvDtC,OAAA,EAAAC,QAAA,CA8GU,MAUU,CAVVX,YAAA,CAUUiD,kBAAA;QAVDC,MAAM,EAAC,OAAO;QAACtD,KAAK,EAAC;;QACjBuD,MAAM,EAAAxC,QAAA,CACf,MAGM,CAHNN,mBAAA,CAGM,OAHNyE,WAGM,G,4BAFJzE,mBAAA,CAAiB,cAAX,MAAI,sBACVL,YAAA,CAA8DqD,iBAAA;UAAtDpB,IAAI,EAAC,SAAS;UAACqB,MAAM,EAAC,OAAO;UAACC,IAAI,EAAC;;UAlH3D7C,OAAA,EAAAC,QAAA,CAkHmE,MAAEI,MAAA,SAAAA,MAAA,QAlHrEC,gBAAA,CAkHmE,IAAE,E;UAlHrEC,CAAA;;QAAAP,OAAA,EAAAC,QAAA,CAqHY,MAEM,CAFNN,mBAAA,CAEM,OAFN0E,WAEM,GADJ1E,mBAAA,CAAwE,MAAxE2E,WAAwE,EAAAtB,gBAAA,CAA9CnC,MAAA,CAAAqC,aAAa,CAACqB,mBAAmB,sB;QAtHzEhE,CAAA;;MAAAA,CAAA;;IAAAA,CAAA;MA4HMuB,mBAAA,WAAc,EACdnC,mBAAA,CASM,OATN6E,WASM,GARJlF,YAAA,CAOiBmF,yBAAA;IArIzB7D,UAAA,EA8HiCC,MAAA,CAAA6D,iBAAiB;IA9HlD,uBAAArE,MAAA,QAAAA,MAAA,MAAAU,MAAA,IA8HiCF,MAAA,CAAA6D,iBAAiB,GAAA3D,MAAA;IAAGE,QAAM,EAAEJ,MAAA,CAAA8D,qBAAqB;IAAE9B,IAAI,EAAC;;IA9HzF7C,OAAA,EAAAC,QAAA,CA+HU,MAAmD,CAAnDX,YAAA,CAAmDsF,0BAAA;MAAlCxD,KAAK,EAAC;IAAK;MA/HtCpB,OAAA,EAAAC,QAAA,CA+HuC,MAAII,MAAA,SAAAA,MAAA,QA/H3CC,gBAAA,CA+HuC,MAAI,E;MA/H3CC,CAAA;QAgIUjB,YAAA,CAAqDsF,0BAAA;MAApCxD,KAAK,EAAC;IAAO;MAhIxCpB,OAAA,EAAAC,QAAA,CAgIyC,MAAII,MAAA,SAAAA,MAAA,QAhI7CC,gBAAA,CAgIyC,MAAI,E;MAhI7CC,CAAA;QAiIUjB,YAAA,CAAwDsF,0BAAA;MAAvCxD,KAAK,EAAC;IAAU;MAjI3CpB,OAAA,EAAAC,QAAA,CAiI4C,MAAII,MAAA,SAAAA,MAAA,QAjIhDC,gBAAA,CAiI4C,MAAI,E;MAjIhDC,CAAA;QAkIUjB,YAAA,CAAuDsF,0BAAA;MAAtCxD,KAAK,EAAC;IAAS;MAlI1CpB,OAAA,EAAAC,QAAA,CAkI2C,MAAII,MAAA,SAAAA,MAAA,QAlI/CC,gBAAA,CAkI2C,MAAI,E;MAlI/CC,CAAA;QAmIUjB,YAAA,CAAsDsF,0BAAA;MAArCxD,KAAK,EAAC;IAAQ;MAnIzCpB,OAAA,EAAAC,QAAA,CAmI0C,MAAII,MAAA,SAAAA,MAAA,QAnI9CC,gBAAA,CAmI0C,MAAI,E;MAnI9CC,CAAA;QAoIUjB,YAAA,CAAsDsF,0BAAA;MAArCxD,KAAK,EAAC;IAAQ;MApIzCpB,OAAA,EAAAC,QAAA,CAoI0C,MAAII,MAAA,SAAAA,MAAA,QApI9CC,gBAAA,CAoI0C,MAAI,E;MApI9CC,CAAA;;IAAAA,CAAA;mDAwIMuB,mBAAA,UAAa,EACbxC,YAAA,CA2ESyC,iBAAA;IA3EAC,MAAM,EAAE,EAAE;IAAE9C,KAAK,EAAC;;IAzIjCc,OAAA,EAAAC,QAAA,CA0IQ,MAAc,CAAd6B,mBAAA,WAAc,EAC6CjB,MAAA,CAAAgE,cAAc,a,cAAzEC,YAAA,CAYS7C,iBAAA;MAvJjB8C,GAAA;MA2IiB7C,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE;;MA3IzDtC,OAAA,EAAAC,QAAA,CA4IU,MAUU,CAVVX,YAAA,CAUUiD,kBAAA;QAVDC,MAAM,EAAC,OAAO;QAACtD,KAAK,EAAC;;QACjBuD,MAAM,EAAAxC,QAAA,CACf,MAGM,CAHNN,mBAAA,CAGM,OAHNqF,WAGM,G,4BAFJrF,mBAAA,CAAmB,cAAb,QAAM,sBACZL,YAAA,CAAqDqD,iBAAA;UAA7CpB,IAAI,EAAC;QAAS;UAhJtCvB,OAAA,EAAAC,QAAA,CAgJuC,MAAqB,CAhJ5DK,gBAAA,CAAA0C,gBAAA,CAgJ0CnC,MAAA,CAAAoE,eAAe,iB;UAhJzD1E,CAAA;;QAAAP,OAAA,EAAAC,QAAA,CAmJY,MAEM,C,+BAFNb,mBAAA,CAEM,OAFN8F,WAEM,GADJvF,mBAAA,CAA+C,OAA/CwF,WAA+C,8B,0BADTtE,MAAA,CAAAa,OAAO,CAAC0D,UAAU,E;QAnJtE7E,CAAA;;MAAAA,CAAA;UAAAuB,mBAAA,gBAyJQA,mBAAA,aAAgB,EAC2CjB,MAAA,CAAAgE,cAAc,gB,cAAzEC,YAAA,CAYS7C,iBAAA;MAtKjB8C,GAAA;MA0JiB7C,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE;;MA1JzDtC,OAAA,EAAAC,QAAA,CA2JU,MAUU,CAVVX,YAAA,CAUUiD,kBAAA;QAVDC,MAAM,EAAC,OAAO;QAACtD,KAAK,EAAC;;QACjBuD,MAAM,EAAAxC,QAAA,CACf,MAGM,CAHNN,mBAAA,CAGM,OAHN0F,WAGM,G,4BAFJ1F,mBAAA,CAAmB,cAAb,QAAM,sBACZL,YAAA,CAAkCqD,iBAAA;UAA1BpB,IAAI,EAAC;QAAS;UA/JtCvB,OAAA,EAAAC,QAAA,CA+JuC,MAAEI,MAAA,SAAAA,MAAA,QA/JzCC,gBAAA,CA+JuC,IAAE,E;UA/JzCC,CAAA;;QAAAP,OAAA,EAAAC,QAAA,CAkKY,MAEM,C,+BAFNb,mBAAA,CAEM,OAFNkG,WAEM,GADJ3F,mBAAA,CAAoD,OAApD4F,WAAoD,8B,0BADd1E,MAAA,CAAAa,OAAO,CAAC8D,eAAe,E;QAlK3EjF,CAAA;;MAAAA,CAAA;UAAAuB,mBAAA,gBAwKQA,mBAAA,aAAgB,EAC2CjB,MAAA,CAAAgE,cAAc,e,cAAzEC,YAAA,CAYS7C,iBAAA;MArLjB8C,GAAA;MAyKiB7C,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE;;MAzKzDtC,OAAA,EAAAC,QAAA,CA0KU,MAUU,CAVVX,YAAA,CAUUiD,kBAAA;QAVDC,MAAM,EAAC,OAAO;QAACtD,KAAK,EAAC;;QACjBuD,MAAM,EAAAxC,QAAA,CACf,MAGM,CAHNN,mBAAA,CAGM,OAHN8F,WAGM,G,4BAFJ9F,mBAAA,CAAmB,cAAb,QAAM,sBACZL,YAAA,CAAkCqD,iBAAA;UAA1BpB,IAAI,EAAC;QAAS;UA9KtCvB,OAAA,EAAAC,QAAA,CA8KuC,MAAEI,MAAA,SAAAA,MAAA,QA9KzCC,gBAAA,CA8KuC,IAAE,E;UA9KzCC,CAAA;;QAAAP,OAAA,EAAAC,QAAA,CAiLY,MAEM,C,+BAFNb,mBAAA,CAEM,OAFNsG,WAEM,GADJ/F,mBAAA,CAAmD,OAAnDgG,WAAmD,8B,0BADb9E,MAAA,CAAAa,OAAO,CAACkE,cAAc,E;QAjL1ErF,CAAA;;MAAAA,CAAA;UAAAuB,mBAAA,gBAuLQA,mBAAA,aAAgB,EAC2CjB,MAAA,CAAAgE,cAAc,c,cAAzEC,YAAA,CAYS7C,iBAAA;MApMjB8C,GAAA;MAwLiB7C,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE;;MAxLzDtC,OAAA,EAAAC,QAAA,CAyLU,MAUU,CAVVX,YAAA,CAUUiD,kBAAA;QAVDC,MAAM,EAAC,OAAO;QAACtD,KAAK,EAAC;;QACjBuD,MAAM,EAAAxC,QAAA,CACf,MAGM,CAHNN,mBAAA,CAGM,OAHNkG,WAGM,G,4BAFJlG,mBAAA,CAAmB,cAAb,QAAM,sBACZL,YAAA,CAA+BqD,iBAAA;UAAvBpB,IAAI,EAAC;QAAM;UA7LnCvB,OAAA,EAAAC,QAAA,CA6LoC,MAAEI,MAAA,SAAAA,MAAA,QA7LtCC,gBAAA,CA6LoC,IAAE,E;UA7LtCC,CAAA;;QAAAP,OAAA,EAAAC,QAAA,CAgMY,MAEM,C,+BAFNb,mBAAA,CAEM,OAFN0G,WAEM,GADJnG,mBAAA,CAAyD,OAAzDoG,WAAyD,8B,0BADnBlF,MAAA,CAAAa,OAAO,CAACsE,oBAAoB,E;QAhMhFzF,CAAA;;MAAAA,CAAA;UAAAuB,mBAAA,gBAsMQA,mBAAA,aAAgB,EAC2CjB,MAAA,CAAAgE,cAAc,c,cAAzEC,YAAA,CAYS7C,iBAAA;MAnNjB8C,GAAA;MAuMiB7C,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE;;MAvMzDtC,OAAA,EAAAC,QAAA,CAwMU,MAUU,CAVVX,YAAA,CAUUiD,kBAAA;QAVDC,MAAM,EAAC,OAAO;QAACtD,KAAK,EAAC;;QACjBuD,MAAM,EAAAxC,QAAA,CACf,MAGM,CAHNN,mBAAA,CAGM,OAHNsG,WAGM,G,4BAFJtG,mBAAA,CAAmB,cAAb,QAAM,sBACZL,YAAA,CAAiCqD,iBAAA;UAAzBpB,IAAI,EAAC;QAAQ;UA5MrCvB,OAAA,EAAAC,QAAA,CA4MsC,MAAEI,MAAA,SAAAA,MAAA,QA5MxCC,gBAAA,CA4MsC,IAAE,E;UA5MxCC,CAAA;;QAAAP,OAAA,EAAAC,QAAA,CA+MY,MAEM,C,+BAFNb,mBAAA,CAEM,OAFN8G,WAEM,GADJvG,mBAAA,CAA4D,OAA5DwG,WAA4D,8B,0BADtBtF,MAAA,CAAAa,OAAO,CAAC0E,uBAAuB,E;QA/MnF7F,CAAA;;MAAAA,CAAA;UAAAuB,mBAAA,e;IAAAvB,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}