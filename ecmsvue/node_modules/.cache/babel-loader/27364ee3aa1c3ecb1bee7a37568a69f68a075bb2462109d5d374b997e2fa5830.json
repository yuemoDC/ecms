{"ast":null,"code":"export default {\n  name: 'ProductManagement',\n  data() {\n    return {\n      products: [],\n      isProductFormVisible: false,\n      productForm: {\n        productName: '',\n        price: 0,\n        status: 'active'\n      },\n      selectedProduct: null\n    };\n  },\n  methods: {\n    fetchProducts() {\n      fetch('http://localhost:8080/api/products').then(response => response.json()).then(data => {\n        this.products = data;\n      }).catch(error => {\n        console.error('获取产品时出错:', error);\n      });\n    },\n    showProductForm() {\n      this.selectedProduct = null;\n      this.productForm = {\n        productName: '',\n        price: 0,\n        status: 'active'\n      };\n      this.isProductFormVisible = true;\n    },\n    editProduct(product) {\n      this.selectedProduct = product;\n      this.productForm = {\n        ...product\n      };\n      this.isProductFormVisible = true;\n    },\n    handleProductFormClose() {\n      this.isProductFormVisible = false;\n    },\n    submitProductForm() {\n      const method = this.selectedProduct ? 'PUT' : 'POST';\n      const url = this.selectedProduct ? `http://localhost:8080/api/products/${this.selectedProduct.productId}` : 'http://localhost:8080/api/products';\n      fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.productForm)\n      }).then(() => {\n        this.fetchProducts();\n        this.handleProductFormClose();\n      });\n    },\n    deleteProduct(productId) {\n      fetch(`http://localhost:8080/api/products/${productId}`, {\n        method: 'DELETE'\n      }).then(() => {\n        this.fetchProducts();\n      });\n    }\n  },\n  mounted() {\n    this.fetchProducts();\n  }\n};","map":{"version":3,"names":["name","data","products","isProductFormVisible","productForm","productName","price","status","selectedProduct","methods","fetchProducts","fetch","then","response","json","catch","error","console","showProductForm","editProduct","product","handleProductFormClose","submitProductForm","method","url","productId","headers","body","JSON","stringify","deleteProduct","mounted"],"sources":["E:\\ecms\\ecmsvue\\src\\views\\Products.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>产品管理</h1>\r\n    <el-button type=\"primary\" @click=\"showProductForm\" style=\"margin-bottom: 20px;\">添加产品</el-button>\r\n    <el-table :data=\"products\" style=\"width: 100%;\">\r\n      <el-table-column prop=\"productName\" label=\"产品名称\" />\r\n      <el-table-column prop=\"price\" label=\"价格\" />\r\n      <el-table-column prop=\"status\" label=\"状态\" />\r\n      <el-table-column label=\"操作\">\r\n        <template #default=\"scope\">\r\n          <el-button size=\"mini\" @click=\"editProduct(scope.row)\">编辑</el-button>\r\n          <el-button size=\"mini\" type=\"danger\" @click=\"deleteProduct(scope.row.productId)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <el-dialog :visible=\"isProductFormVisible\" title=\"产品表单\" @close=\"handleProductFormClose\" width=\"600px\">\r\n      <el-form :model=\"productForm\" label-width=\"120px\" size=\"medium\">\r\n        <el-form-item label=\"产品名称\">\r\n          <el-input v-model=\"productForm.productName\" placeholder=\"请输入产品名称\" required />\r\n        </el-form-item>\r\n        <el-form-item label=\"价格\">\r\n          <el-input type=\"number\" v-model=\"productForm.price\" placeholder=\"请输入产品价格\" required />\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\">\r\n          <el-select v-model=\"productForm.status\" placeholder=\"选择状态\" required>\r\n            <el-option label=\"可用\" value=\"active\" />\r\n            <el-option label=\"不可用\" value=\"inactive\" />\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"handleProductFormClose\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitProductForm\">保存</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ProductManagement',\r\n  data() {\r\n    return {\r\n      products: [],\r\n      isProductFormVisible: false,\r\n      productForm: {\r\n        productName: '',\r\n        price: 0,\r\n        status: 'active'\r\n      },\r\n      selectedProduct: null\r\n    };\r\n  },\r\n  methods: {\r\n    fetchProducts() {\r\n      fetch('http://localhost:8080/api/products')\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            this.products = data;\r\n          })\r\n          .catch(error => {\r\n            console.error('获取产品时出错:', error);\r\n          });\r\n    },\r\n    showProductForm() {\r\n      this.selectedProduct = null;\r\n      this.productForm = {\r\n        productName: '',\r\n        price: 0,\r\n        status: 'active'\r\n      };\r\n      this.isProductFormVisible = true;\r\n    },\r\n    editProduct(product) {\r\n      this.selectedProduct = product;\r\n      this.productForm = {...product};\r\n      this.isProductFormVisible = true;\r\n    },\r\n    handleProductFormClose() {\r\n      this.isProductFormVisible = false;\r\n    },\r\n    submitProductForm() {\r\n      const method = this.selectedProduct ? 'PUT' : 'POST';\r\n      const url = this.selectedProduct ? `http://localhost:8080/api/products/${this.selectedProduct.productId}` : 'http://localhost:8080/api/products';\r\n\r\n      fetch(url, {\r\n        method,\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(this.productForm)\r\n      }).then(() => {\r\n        this.fetchProducts();\r\n        this.handleProductFormClose();\r\n      });\r\n    },\r\n    deleteProduct(productId) {\r\n      fetch(`http://localhost:8080/api/products/${productId}`, {\r\n        method: 'DELETE'\r\n      }).then(() => {\r\n        this.fetchProducts();\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchProducts();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.el-table {\r\n  width: 100%; /* 确保表格占满父容器 */\r\n}\r\n</style>\r\n"],"mappings":"AAwCA,eAAe;EACbA,IAAI,EAAE,mBAAmB;EACzBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,oBAAoB,EAAE,KAAK;MAC3BC,WAAW,EAAE;QACXC,WAAW,EAAE,EAAE;QACfC,KAAK,EAAE,CAAC;QACRC,MAAM,EAAE;MACV,CAAC;MACDC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACdC,KAAK,CAAC,oCAAoC,EACrCC,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAACX,IAAG,IAAK;QACZ,IAAI,CAACC,QAAO,GAAID,IAAI;MACtB,CAAC,EACAc,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAClC,CAAC,CAAC;IACR,CAAC;IACDE,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACV,eAAc,GAAI,IAAI;MAC3B,IAAI,CAACJ,WAAU,GAAI;QACjBC,WAAW,EAAE,EAAE;QACfC,KAAK,EAAE,CAAC;QACRC,MAAM,EAAE;MACV,CAAC;MACD,IAAI,CAACJ,oBAAmB,GAAI,IAAI;IAClC,CAAC;IACDgB,WAAWA,CAACC,OAAO,EAAE;MACnB,IAAI,CAACZ,eAAc,GAAIY,OAAO;MAC9B,IAAI,CAAChB,WAAU,GAAI;QAAC,GAAGgB;MAAO,CAAC;MAC/B,IAAI,CAACjB,oBAAmB,GAAI,IAAI;IAClC,CAAC;IACDkB,sBAAsBA,CAAA,EAAG;MACvB,IAAI,CAAClB,oBAAmB,GAAI,KAAK;IACnC,CAAC;IACDmB,iBAAiBA,CAAA,EAAG;MAClB,MAAMC,MAAK,GAAI,IAAI,CAACf,eAAc,GAAI,KAAI,GAAI,MAAM;MACpD,MAAMgB,GAAE,GAAI,IAAI,CAAChB,eAAc,GAAI,sCAAsC,IAAI,CAACA,eAAe,CAACiB,SAAS,EAAC,GAAI,oCAAoC;MAEhJd,KAAK,CAACa,GAAG,EAAE;QACTD,MAAM;QACNG,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACzB,WAAW;MACvC,CAAC,CAAC,CAACQ,IAAI,CAAC,MAAM;QACZ,IAAI,CAACF,aAAa,CAAC,CAAC;QACpB,IAAI,CAACW,sBAAsB,CAAC,CAAC;MAC/B,CAAC,CAAC;IACJ,CAAC;IACDS,aAAaA,CAACL,SAAS,EAAE;MACvBd,KAAK,CAAC,sCAAsCc,SAAS,EAAE,EAAE;QACvDF,MAAM,EAAE;MACV,CAAC,CAAC,CAACX,IAAI,CAAC,MAAM;QACZ,IAAI,CAACF,aAAa,CAAC,CAAC;MACtB,CAAC,CAAC;IACJ;EACF,CAAC;EACDqB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACrB,aAAa,CAAC,CAAC;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}