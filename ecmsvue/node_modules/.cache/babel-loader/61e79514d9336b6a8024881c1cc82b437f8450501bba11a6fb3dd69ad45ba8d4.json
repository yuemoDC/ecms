{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, reactive, onMounted, nextTick } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport { Refresh } from '@element-plus/icons-vue';\nimport * as echarts from 'echarts';\nimport axios from 'axios';\nexport default {\n  name: 'AdminDataVisualizationView',\n  components: {\n    Refresh\n  },\n  setup() {\n    // 图表引用\n    const salesTrendChart = ref(null);\n    const merchantRankingChart = ref(null);\n    const productRankingChart = ref(null);\n    const regionalDistributionChart = ref(null);\n    const orderStatusDistributionChart = ref(null);\n\n    // 图表实例\n    let salesTrendChartInstance = null;\n    let merchantRankingChartInstance = null;\n    let productRankingChartInstance = null;\n    let regionalDistributionChartInstance = null;\n    let orderStatusDistributionChartInstance = null;\n\n    // 数据状态\n    const loading = reactive({\n      dashboard: false,\n      salesTrend: false,\n      merchantRanking: false,\n      productRanking: false,\n      regionalDistribution: false,\n      orderStatusDistribution: false\n    });\n    const timeFilter = ref('monthly');\n    const salesOverview = reactive({\n      totalSales: 0,\n      totalOrders: 0,\n      avgOrderValue: 0,\n      pendingOrders: 0,\n      completedOrders: 0,\n      recentSales: 0,\n      merchantCount: 0,\n      activeMerchantCount: 0\n    });\n\n    // 当前选中的图表\n    const selectedChart = ref('salesTrend');\n\n    // 获取仪表板数据\n    const fetchDashboardData = async () => {\n      try {\n        loading.dashboard = true;\n\n        // 假设API接口在这\n        const response = await axios.get(`http://localhost:8080/api/admin/data-visualization/dashboard?period=${timeFilter.value}`);\n\n        // 调试用，输出返回的结果\n        console.log('API返回的数据:', response.data);\n        if (response.data) {\n          const dashboardData = response.data;\n\n          // 更新销售概览数据\n          Object.assign(salesOverview, dashboardData.salesOverview);\n\n          // 更新各个图表\n          renderSalesTrendChart(dashboardData.salesTrend);\n          renderMerchantRankingChart(dashboardData.merchantRanking);\n          renderProductRankingChart(dashboardData.productRanking);\n          renderRegionalDistributionChart(dashboardData.regionalDistribution);\n          renderOrderStatusDistributionChart(dashboardData.orderStatusDistribution);\n        } else {\n          ElMessage.error('获取仪表板数据失败，返回数据为空');\n        }\n      } catch (error) {\n        console.error('获取仪表板数据失败', error);\n        ElMessage.error('获取仪表板数据失败');\n      } finally {\n        loading.dashboard = false;\n      }\n    };\n\n    // 渲染销售趋势图\n    const renderSalesTrendChart = data => {\n      if (salesTrendChart.value) {\n        salesTrendChartInstance = echarts.init(salesTrendChart.value);\n        const option = {\n          title: {\n            text: data.title || '平台销售趋势',\n            left: 'center'\n          },\n          tooltip: {\n            trigger: 'axis',\n            formatter: '{b}: {c} 元'\n          },\n          grid: {\n            left: '3%',\n            right: '4%',\n            bottom: '3%',\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: data.xAxis || []\n          },\n          yAxis: {\n            type: 'value',\n            name: '销售额(元)'\n          },\n          series: [{\n            name: '销售额',\n            type: 'line',\n            data: data.series || [],\n            smooth: true,\n            areaStyle: {},\n            itemStyle: {\n              color: '#409EFF'\n            }\n          }]\n        };\n        salesTrendChartInstance.setOption(option);\n      }\n    };\n\n    // 渲染商家销售排行图\n    const renderMerchantRankingChart = data => {\n      if (merchantRankingChart.value) {\n        merchantRankingChartInstance = echarts.init(merchantRankingChart.value);\n        const option = {\n          title: {\n            text: data.title || '商家销售排行',\n            left: 'center'\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            },\n            formatter: '{b}: {c} 元'\n          },\n          grid: {\n            left: '3%',\n            right: '4%',\n            bottom: '3%',\n            containLabel: true\n          },\n          xAxis: {\n            type: 'value',\n            name: '销售额(元)'\n          },\n          yAxis: {\n            type: 'category',\n            data: data.merchantNames || [],\n            axisLabel: {\n              interval: 0,\n              rotate: 30\n            }\n          },\n          series: [{\n            name: '销售额',\n            type: 'bar',\n            data: data.salesValues || [],\n            itemStyle: {\n              color: function (params) {\n                const colorList = ['#409EFF', '#67C23A', '#E6A23C', '#F56C6C', '#909399'];\n                return colorList[params.dataIndex % colorList.length];\n              }\n            }\n          }]\n        };\n        merchantRankingChartInstance.setOption(option);\n      }\n    };\n\n    // 渲染产品销售排行图\n    const renderProductRankingChart = data => {\n      if (productRankingChart.value) {\n        productRankingChartInstance = echarts.init(productRankingChart.value);\n        const option = {\n          title: {\n            text: data.title || '产品销售排行',\n            left: 'center'\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            },\n            formatter: '{b}: {c} 元'\n          },\n          grid: {\n            left: '3%',\n            right: '4%',\n            bottom: '3%',\n            containLabel: true\n          },\n          xAxis: {\n            type: 'value',\n            name: '销售额(元)'\n          },\n          yAxis: {\n            type: 'category',\n            data: data.productNames || [],\n            axisLabel: {\n              interval: 0,\n              rotate: 30\n            }\n          },\n          series: [{\n            name: '销售额',\n            type: 'bar',\n            data: data.salesValues || [],\n            itemStyle: {\n              color: function (params) {\n                const colorList = ['#67C23A', '#409EFF', '#E6A23C', '#F56C6C', '#909399'];\n                return colorList[params.dataIndex % colorList.length];\n              }\n            }\n          }]\n        };\n        productRankingChartInstance.setOption(option);\n      }\n    };\n\n    // 渲染区域销售分布图\n    const renderRegionalDistributionChart = data => {\n      if (regionalDistributionChart.value) {\n        regionalDistributionChartInstance = echarts.init(regionalDistributionChart.value);\n        const option = {\n          title: {\n            text: data.title || '区域销售分布',\n            left: 'center'\n          },\n          tooltip: {\n            trigger: 'item',\n            formatter: '{b}: {c} 元 ({d}%)'\n          },\n          legend: {\n            type: 'scroll',\n            orient: 'vertical',\n            right: 10,\n            top: 20,\n            bottom: 20\n          },\n          series: [{\n            name: '区域销售',\n            type: 'pie',\n            radius: '55%',\n            center: ['40%', '50%'],\n            data: data.regions ? data.regions.map((region, index) => {\n              return {\n                name: region,\n                value: data.values[index]\n              };\n            }) : [],\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }]\n        };\n        regionalDistributionChartInstance.setOption(option);\n      }\n    };\n\n    // 渲染订单状态分布图\n    const renderOrderStatusDistributionChart = data => {\n      if (orderStatusDistributionChart.value) {\n        orderStatusDistributionChartInstance = echarts.init(orderStatusDistributionChart.value);\n        const option = {\n          title: {\n            text: data.title || '订单状态分布',\n            left: 'center'\n          },\n          tooltip: {\n            trigger: 'item',\n            formatter: '{a} <br/>{b}: {c} ({d}%)'\n          },\n          legend: {\n            orient: 'vertical',\n            left: 10,\n            top: 'center'\n          },\n          series: [{\n            name: '订单状态',\n            type: 'pie',\n            radius: ['40%', '70%'],\n            avoidLabelOverlap: false,\n            label: {\n              show: false,\n              position: 'center'\n            },\n            emphasis: {\n              label: {\n                show: true,\n                fontSize: '18',\n                fontWeight: 'bold'\n              }\n            },\n            labelLine: {\n              show: false\n            },\n            data: data.data || []\n          }]\n        };\n        orderStatusDistributionChartInstance.setOption(option);\n      }\n    };\n\n    // 组件挂载\n    onMounted(async () => {\n      await nextTick();\n      fetchDashboardData();\n    });\n\n    // 图表切换\n    const handleChartChange = () => {\n      fetchDashboardData();\n    };\n    return {\n      salesTrendChart,\n      merchantRankingChart,\n      productRankingChart,\n      regionalDistributionChart,\n      orderStatusDistributionChart,\n      loading,\n      timeFilter,\n      salesOverview,\n      fetchDashboardData,\n      formatCurrency,\n      selectedChart,\n      handleChartChange\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","nextTick","ElMessage","Refresh","echarts","axios","name","components","setup","salesTrendChart","merchantRankingChart","productRankingChart","regionalDistributionChart","orderStatusDistributionChart","salesTrendChartInstance","merchantRankingChartInstance","productRankingChartInstance","regionalDistributionChartInstance","orderStatusDistributionChartInstance","loading","dashboard","salesTrend","merchantRanking","productRanking","regionalDistribution","orderStatusDistribution","timeFilter","salesOverview","totalSales","totalOrders","avgOrderValue","pendingOrders","completedOrders","recentSales","merchantCount","activeMerchantCount","selectedChart","fetchDashboardData","response","get","value","console","log","data","dashboardData","Object","assign","renderSalesTrendChart","renderMerchantRankingChart","renderProductRankingChart","renderRegionalDistributionChart","renderOrderStatusDistributionChart","error","init","option","title","text","left","tooltip","trigger","formatter","grid","right","bottom","containLabel","xAxis","type","yAxis","series","smooth","areaStyle","itemStyle","color","setOption","axisPointer","merchantNames","axisLabel","interval","rotate","salesValues","params","colorList","dataIndex","length","productNames","legend","orient","top","radius","center","regions","map","region","index","values","emphasis","shadowBlur","shadowOffsetX","shadowColor","avoidLabelOverlap","label","show","position","fontSize","fontWeight","labelLine","handleChartChange","formatCurrency"],"sources":["E:\\shixun\\420\\ecms\\ecmsvue\\src\\views\\AdminDataVisualizationView.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-visualization-view\">\r\n    <div class=\"view-header\">\r\n      <el-breadcrumb separator=\"/\">\r\n        <el-breadcrumb-item :to=\"{ path: '/admin' }\">首页</el-breadcrumb-item>\r\n        <el-breadcrumb-item>数据分析</el-breadcrumb-item>\r\n        <el-breadcrumb-item>平台数据可视化</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n      <h2>平台数据可视化</h2>\r\n    </div>\r\n\r\n    <div class=\"admin-visualization-dashboard\">\r\n      <div class=\"dashboard-header\">\r\n        <h1>平台数据分析仪表板</h1>\r\n\r\n        <div class=\"toolbar\">\r\n          <el-select v-model=\"timeFilter\" placeholder=\"选择时间周期\" @change=\"fetchDashboardData\">\r\n            <el-option label=\"每日\" value=\"daily\"></el-option>\r\n            <el-option label=\"每周\" value=\"weekly\"></el-option>\r\n            <el-option label=\"每月\" value=\"monthly\"></el-option>\r\n          </el-select>\r\n\r\n          <el-button type=\"primary\" @click=\"fetchDashboardData\" :loading=\"loading.dashboard\">\r\n            <el-icon><Refresh /></el-icon> 刷新数据\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 可视化选择 -->\r\n      <el-radio-group v-model=\"selectedChart\" @change=\"handleChartChange\">\r\n        <el-radio label=\"salesTrend\">销售趋势图</el-radio>\r\n        <el-radio label=\"merchantRanking\">商家销售排行</el-radio>\r\n        <el-radio label=\"productRanking\">产品销售排行</el-radio>\r\n        <el-radio label=\"regionalDistribution\">区域销售分布</el-radio>\r\n        <el-radio label=\"orderStatusDistribution\">订单状态分布</el-radio>\r\n      </el-radio-group>\r\n\r\n      <!-- 图表区域，根据选中的图表显示 -->\r\n      <el-row :gutter=\"20\" class=\"dashboard-charts\">\r\n        <!-- 销售趋势图 -->\r\n        <el-col v-if=\"selectedChart === 'salesTrend'\" :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>平台销售趋势</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.salesTrend\">\r\n              <div ref=\"salesTrendChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <!-- 商家销售排行图 -->\r\n        <el-col v-if=\"selectedChart === 'merchantRanking'\" :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>商家销售排行</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.merchantRanking\">\r\n              <div ref=\"merchantRankingChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <!-- 产品销售排行图 -->\r\n        <el-col v-if=\"selectedChart === 'productRanking'\" :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>产品销售排行</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.productRanking\">\r\n              <div ref=\"productRankingChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <!-- 区域销售分布图 -->\r\n        <el-col v-if=\"selectedChart === 'regionalDistribution'\" :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>区域销售分布</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.regionalDistribution\">\r\n              <div ref=\"regionalDistributionChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <!-- 订单状态分布图 -->\r\n        <el-col v-if=\"selectedChart === 'orderStatusDistribution'\" :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>订单状态分布</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.orderStatusDistribution\">\r\n              <div ref=\"orderStatusDistributionChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted,  nextTick } from 'vue';\r\nimport { ElMessage } from 'element-plus';\r\nimport { Refresh } from '@element-plus/icons-vue';\r\nimport * as echarts from 'echarts';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'AdminDataVisualizationView',\r\n  components: {\r\n    Refresh\r\n  },\r\n  setup() {\r\n    // 图表引用\r\n    const salesTrendChart = ref(null);\r\n    const merchantRankingChart = ref(null);\r\n    const productRankingChart = ref(null);\r\n    const regionalDistributionChart = ref(null);\r\n    const orderStatusDistributionChart = ref(null);\r\n\r\n    // 图表实例\r\n    let salesTrendChartInstance = null;\r\n    let merchantRankingChartInstance = null;\r\n    let productRankingChartInstance = null;\r\n    let regionalDistributionChartInstance = null;\r\n    let orderStatusDistributionChartInstance = null;\r\n\r\n    // 数据状态\r\n    const loading = reactive({\r\n      dashboard: false,\r\n      salesTrend: false,\r\n      merchantRanking: false,\r\n      productRanking: false,\r\n      regionalDistribution: false,\r\n      orderStatusDistribution: false\r\n    });\r\n\r\n    const timeFilter = ref('monthly');\r\n    const salesOverview = reactive({\r\n      totalSales: 0,\r\n      totalOrders: 0,\r\n      avgOrderValue: 0,\r\n      pendingOrders: 0,\r\n      completedOrders: 0,\r\n      recentSales: 0,\r\n      merchantCount: 0,\r\n      activeMerchantCount: 0\r\n    });\r\n\r\n    // 当前选中的图表\r\n    const selectedChart = ref('salesTrend');\r\n\r\n    // 获取仪表板数据\r\n    const fetchDashboardData = async () => {\r\n      try {\r\n        loading.dashboard = true;\r\n\r\n        // 假设API接口在这\r\n        const response = await axios.get(`http://localhost:8080/api/admin/data-visualization/dashboard?period=${timeFilter.value}`);\r\n\r\n        // 调试用，输出返回的结果\r\n        console.log('API返回的数据:', response.data);\r\n\r\n        if (response.data) {\r\n          const dashboardData = response.data;\r\n\r\n          // 更新销售概览数据\r\n          Object.assign(salesOverview, dashboardData.salesOverview);\r\n\r\n          // 更新各个图表\r\n          renderSalesTrendChart(dashboardData.salesTrend);\r\n          renderMerchantRankingChart(dashboardData.merchantRanking);\r\n          renderProductRankingChart(dashboardData.productRanking);\r\n          renderRegionalDistributionChart(dashboardData.regionalDistribution);\r\n          renderOrderStatusDistributionChart(dashboardData.orderStatusDistribution);\r\n        } else {\r\n          ElMessage.error('获取仪表板数据失败，返回数据为空');\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('获取仪表板数据失败', error);\r\n        ElMessage.error('获取仪表板数据失败');\r\n      } finally {\r\n        loading.dashboard = false;\r\n      }\r\n    };\r\n\r\n    // 渲染销售趋势图\r\n    const renderSalesTrendChart = (data) => {\r\n      if (salesTrendChart.value) {\r\n        salesTrendChartInstance = echarts.init(salesTrendChart.value);\r\n        const option = {\r\n          title: {\r\n            text: data.title || '平台销售趋势',\r\n            left: 'center'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            formatter: '{b}: {c} 元'\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            data: data.xAxis || []\r\n          },\r\n          yAxis: {\r\n            type: 'value',\r\n            name: '销售额(元)'\r\n          },\r\n          series: [{\r\n            name: '销售额',\r\n            type: 'line',\r\n            data: data.series || [],\r\n            smooth: true,\r\n            areaStyle: {},\r\n            itemStyle: {\r\n              color: '#409EFF'\r\n            }\r\n          }]\r\n        };\r\n\r\n        salesTrendChartInstance.setOption(option);\r\n      }\r\n    };\r\n\r\n    // 渲染商家销售排行图\r\n    const renderMerchantRankingChart = (data) => {\r\n      if (merchantRankingChart.value) {\r\n        merchantRankingChartInstance = echarts.init(merchantRankingChart.value);\r\n        const option = {\r\n          title: {\r\n            text: data.title || '商家销售排行',\r\n            left: 'center'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            },\r\n            formatter: '{b}: {c} 元'\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n          },\r\n          xAxis: {\r\n            type: 'value',\r\n            name: '销售额(元)'\r\n          },\r\n          yAxis: {\r\n            type: 'category',\r\n            data: data.merchantNames || [],\r\n            axisLabel: {\r\n              interval: 0,\r\n              rotate: 30\r\n            }\r\n          },\r\n          series: [{\r\n            name: '销售额',\r\n            type: 'bar',\r\n            data: data.salesValues || [],\r\n            itemStyle: {\r\n              color: function (params) {\r\n                const colorList = ['#409EFF', '#67C23A', '#E6A23C', '#F56C6C', '#909399'];\r\n                return colorList[params.dataIndex % colorList.length];\r\n              }\r\n            }\r\n          }]\r\n        };\r\n\r\n        merchantRankingChartInstance.setOption(option);\r\n      }\r\n    };\r\n\r\n    // 渲染产品销售排行图\r\n    const renderProductRankingChart = (data) => {\r\n      if (productRankingChart.value) {\r\n        productRankingChartInstance = echarts.init(productRankingChart.value);\r\n        const option = {\r\n          title: {\r\n            text: data.title || '产品销售排行',\r\n            left: 'center'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            },\r\n            formatter: '{b}: {c} 元'\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n          },\r\n          xAxis: {\r\n            type: 'value',\r\n            name: '销售额(元)'\r\n          },\r\n          yAxis: {\r\n            type: 'category',\r\n            data: data.productNames || [],\r\n            axisLabel: {\r\n              interval: 0,\r\n              rotate: 30\r\n            }\r\n          },\r\n          series: [{\r\n            name: '销售额',\r\n            type: 'bar',\r\n            data: data.salesValues || [],\r\n            itemStyle: {\r\n              color: function (params) {\r\n                const colorList = ['#67C23A', '#409EFF', '#E6A23C', '#F56C6C', '#909399'];\r\n                return colorList[params.dataIndex % colorList.length];\r\n              }\r\n            }\r\n          }]\r\n        };\r\n\r\n        productRankingChartInstance.setOption(option);\r\n      }\r\n    };\r\n\r\n    // 渲染区域销售分布图\r\n    const renderRegionalDistributionChart = (data) => {\r\n      if (regionalDistributionChart.value) {\r\n        regionalDistributionChartInstance = echarts.init(regionalDistributionChart.value);\r\n        const option = {\r\n          title: {\r\n            text: data.title || '区域销售分布',\r\n            left: 'center'\r\n          },\r\n          tooltip: {\r\n            trigger: 'item',\r\n            formatter: '{b}: {c} 元 ({d}%)'\r\n          },\r\n          legend: {\r\n            type: 'scroll',\r\n            orient: 'vertical',\r\n            right: 10,\r\n            top: 20,\r\n            bottom: 20,\r\n          },\r\n          series: [{\r\n            name: '区域销售',\r\n            type: 'pie',\r\n            radius: '55%',\r\n            center: ['40%', '50%'],\r\n            data: data.regions ? data.regions.map((region, index) => {\r\n              return {\r\n                name: region,\r\n                value: data.values[index]\r\n              };\r\n            }) : [],\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }]\r\n        };\r\n\r\n        regionalDistributionChartInstance.setOption(option);\r\n      }\r\n    };\r\n\r\n    // 渲染订单状态分布图\r\n    const renderOrderStatusDistributionChart = (data) => {\r\n      if (orderStatusDistributionChart.value) {\r\n        orderStatusDistributionChartInstance = echarts.init(orderStatusDistributionChart.value);\r\n        const option = {\r\n          title: {\r\n            text: data.title || '订单状态分布',\r\n            left: 'center'\r\n          },\r\n          tooltip: {\r\n            trigger: 'item',\r\n            formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n          },\r\n          legend: {\r\n            orient: 'vertical',\r\n            left: 10,\r\n            top: 'center'\r\n          },\r\n          series: [{\r\n            name: '订单状态',\r\n            type: 'pie',\r\n            radius: ['40%', '70%'],\r\n            avoidLabelOverlap: false,\r\n            label: {\r\n              show: false,\r\n              position: 'center'\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: '18',\r\n                fontWeight: 'bold'\r\n              }\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            },\r\n            data: data.data || []\r\n          }]\r\n        };\r\n\r\n        orderStatusDistributionChartInstance.setOption(option);\r\n      }\r\n    };\r\n\r\n    // 组件挂载\r\n    onMounted(async () => {\r\n      await nextTick();\r\n      fetchDashboardData();\r\n    });\r\n\r\n    // 图表切换\r\n    const handleChartChange = () => {\r\n      fetchDashboardData();\r\n    };\r\n\r\n    return {\r\n      salesTrendChart,\r\n      merchantRankingChart,\r\n      productRankingChart,\r\n      regionalDistributionChart,\r\n      orderStatusDistributionChart,\r\n      loading,\r\n      timeFilter,\r\n      salesOverview,\r\n      fetchDashboardData,\r\n      formatCurrency,\r\n      selectedChart,\r\n      handleChartChange\r\n    };\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}