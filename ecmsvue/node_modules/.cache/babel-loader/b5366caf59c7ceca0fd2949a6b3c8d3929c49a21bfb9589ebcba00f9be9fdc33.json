{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, withCtx as _withCtx } from \"vue\";\nconst _hoisted_1 = {\n  class: \"sales-prediction-container\"\n};\nconst _hoisted_2 = {\n  class: \"card filters-card\"\n};\nconst _hoisted_3 = {\n  class: \"filters\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"form-group\"\n};\nconst _hoisted_7 = [\"value\"];\nconst _hoisted_8 = {\n  key: 1,\n  class: \"form-group\"\n};\nconst _hoisted_9 = {\n  class: \"card data-card\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"loading-container\"\n};\nconst _hoisted_11 = {\n  key: 1,\n  class: \"error-container\"\n};\nconst _hoisted_12 = {\n  class: \"alert alert-danger\"\n};\nconst _hoisted_13 = {\n  key: 2,\n  class: \"prediction-content\"\n};\nconst _hoisted_14 = {\n  class: \"chart-container\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  class: \"stats-container\"\n};\nconst _hoisted_16 = {\n  class: \"stats-grid\"\n};\nconst _hoisted_17 = {\n  class: \"stat-item\"\n};\nconst _hoisted_18 = {\n  class: \"stat-value\"\n};\nconst _hoisted_19 = {\n  class: \"stat-item\"\n};\nconst _hoisted_20 = {\n  class: \"stat-value\"\n};\nconst _hoisted_21 = {\n  class: \"stat-item\"\n};\nconst _hoisted_22 = {\n  class: \"stat-value\"\n};\nconst _hoisted_23 = {\n  class: \"stat-item\"\n};\nconst _hoisted_24 = {\n  class: \"stat-value\"\n};\nconst _hoisted_25 = {\n  class: \"stat-item\"\n};\nconst _hoisted_26 = {\n  class: \"stat-value\"\n};\nconst _hoisted_27 = {\n  class: \"stat-item\"\n};\nconst _hoisted_28 = {\n  key: 0,\n  class: \"card related-card\"\n};\nconst _hoisted_29 = {\n  class: \"product-grid\"\n};\nconst _hoisted_30 = {\n  class: \"product-price\"\n};\nconst _hoisted_31 = [\"onClick\"];\nconst _hoisted_32 = {\n  key: 1,\n  class: \"card orders-card\"\n};\nconst _hoisted_33 = {\n  key: 0,\n  class: \"no-data\"\n};\nconst _hoisted_34 = {\n  key: 1,\n  class: \"order-list\"\n};\nconst _hoisted_35 = {\n  class: \"table\"\n};\nconst _hoisted_36 = {\n  key: 0,\n  class: \"view-more\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Line = _resolveComponent(\"Line\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[28] || (_cache[28] = _createElementVNode(\"h1\", null, \"销售预测分析\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_cache[14] || (_cache[14] = _createElementVNode(\"div\", {\n    class: \"card-title\"\n  }, \"预测条件\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"merchantId\"\n  }, \"商家ID:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"merchantId\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.merchantId = $event),\n    type: \"number\",\n    min: \"1\",\n    class: \"form-control\",\n    onChange: _cache[1] || (_cache[1] = $event => $setup.selectedView === 'product' ? $setup.fetchProductPredictions() : $setup.fetchAllProductsPredictions())\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.merchantId, void 0, {\n    number: true\n  }]])]), _createElementVNode(\"div\", _hoisted_5, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", {\n    for: \"viewType\"\n  }, \"查看方式:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"viewType\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.selectedView = $event),\n    class: \"form-control\",\n    onChange: _cache[3] || (_cache[3] = (...args) => $setup.changeViewType && $setup.changeViewType(...args))\n  }, _cache[10] || (_cache[10] = [_createElementVNode(\"option\", {\n    value: \"all\"\n  }, \"所有产品总览\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"product\"\n  }, \"单个产品明细\", -1 /* HOISTED */)]), 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $setup.selectedView]])]), $setup.selectedView === 'product' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_cache[12] || (_cache[12] = _createElementVNode(\"label\", {\n    for: \"productSelect\"\n  }, \"选择产品:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"productSelect\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.selectedProductId = $event),\n    class: \"form-control\",\n    onChange: _cache[5] || (_cache[5] = $event => $setup.fetchProductPredictions())\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.products, product => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: product.productId,\n      value: product.productId\n    }, _toDisplayString(product.productName), 9 /* TEXT, PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $setup.selectedProductId]])])) : _createCommentVNode(\"v-if\", true), $setup.selectedView === 'product' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_cache[13] || (_cache[13] = _createElementVNode(\"label\", {\n    for: \"daysPredict\"\n  }, \"预测天数:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"daysPredict\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.daysToPredict = $event),\n    type: \"number\",\n    min: \"1\",\n    max: \"365\",\n    class: \"form-control\",\n    onChange: _cache[7] || (_cache[7] = $event => $setup.fetchProductPredictions())\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.daysToPredict, void 0, {\n    number: true\n  }]])])) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", _hoisted_9, [_cache[23] || (_cache[23] = _createElementVNode(\"div\", {\n    class: \"card-title\"\n  }, \"预测数据\", -1 /* HOISTED */)), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, _cache[15] || (_cache[15] = [_createElementVNode(\"div\", {\n    class: \"spinner\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"正在加载预测数据...\", -1 /* HOISTED */)]))) : $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, _toDisplayString($setup.error), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = $event => $setup.selectedView === 'product' ? $setup.fetchProductPredictions() : $setup.fetchAllProductsPredictions()),\n    class: \"btn btn-primary\"\n  }, \" 重试 \")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createCommentVNode(\" 图表区域 \"), _createElementVNode(\"div\", _hoisted_14, [_createVNode(_component_Line, {\n    data: $setup.chartData,\n    options: $setup.chartOptions\n  }, null, 8 /* PROPS */, [\"data\", \"options\"])]), _createCommentVNode(\" 统计摘要 \"), $setup.chartData.datasets[0].data.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_cache[22] || (_cache[22] = _createElementVNode(\"h3\", null, \"预测摘要\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, [_cache[16] || (_cache[16] = _createElementVNode(\"div\", {\n    class: \"stat-label\"\n  }, \"预测周期\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_18, _toDisplayString($setup.chartData.labels[0]) + \" 至 \" + _toDisplayString($setup.chartData.labels[$setup.chartData.labels.length - 1]), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_19, [_cache[17] || (_cache[17] = _createElementVNode(\"div\", {\n    class: \"stat-label\"\n  }, \"平均预测销售额\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_20, \"¥\" + _toDisplayString($setup.calculateAverage($setup.chartData.datasets[0].data).toFixed(2)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_21, [_cache[18] || (_cache[18] = _createElementVNode(\"div\", {\n    class: \"stat-label\"\n  }, \"最高预测销售额\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_22, \"¥\" + _toDisplayString(Math.max(...$setup.chartData.datasets[0].data).toFixed(2)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_23, [_cache[19] || (_cache[19] = _createElementVNode(\"div\", {\n    class: \"stat-label\"\n  }, \"最低预测销售额\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_24, \"¥\" + _toDisplayString(Math.min(...$setup.chartData.datasets[0].data).toFixed(2)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_25, [_cache[20] || (_cache[20] = _createElementVNode(\"div\", {\n    class: \"stat-label\"\n  }, \"总预测销售额\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_26, \"¥\" + _toDisplayString($setup.calculateSum($setup.chartData.datasets[0].data).toFixed(2)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_27, [_cache[21] || (_cache[21] = _createElementVNode(\"div\", {\n    class: \"stat-label\"\n  }, \"预测趋势\", -1 /* HOISTED */)), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"stat-value\", $setup.calculateTrend($setup.chartData.datasets[0].data) >= 0 ? 'positive' : 'negative'])\n  }, _toDisplayString($setup.calculateTrend($setup.chartData.datasets[0].data) >= 0 ? '上升' : '下降') + \" \" + _toDisplayString(Math.abs($setup.calculateTrend($setup.chartData.datasets[0].data)).toFixed(2)) + \"% \", 3 /* TEXT, CLASS */)])])])) : _createCommentVNode(\"v-if\", true)]))]), _createCommentVNode(\" 相关产品卡片 \"), $setup.selectedView === 'all' && !$setup.loading && !$setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_28, [_cache[24] || (_cache[24] = _createElementVNode(\"div\", {\n    class: \"card-title\"\n  }, \"相关产品数据\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_29, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.products.slice(0, 4), product => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: product.productId,\n      class: \"product-item\"\n    }, [_createElementVNode(\"h4\", null, _toDisplayString(product.productName), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(product.description ? product.description.length > 50 ? product.description.substring(0, 50) + '...' : product.description : '暂无描述'), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_30, \"¥\" + _toDisplayString(product.price), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $setup.viewProductPrediction(product.productId),\n      class: \"btn btn-sm btn-primary\"\n    }, \"查看预测\", 8 /* PROPS */, _hoisted_31)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 历史订单数据 \"), $setup.selectedProductId && $setup.selectedView === 'product' && !$setup.loading && !$setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32, [_cache[27] || (_cache[27] = _createElementVNode(\"div\", {\n    class: \"card-title\"\n  }, \"产品历史订单\", -1 /* HOISTED */)), $setup.productOrders.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_33, \" 暂无该产品的历史订单数据 \")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_34, [_createElementVNode(\"table\", _hoisted_35, [_cache[25] || (_cache[25] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"订单号\"), _createElementVNode(\"th\", null, \"订单日期\"), _createElementVNode(\"th\", null, \"数量\"), _createElementVNode(\"th\", null, \"订单金额\"), _createElementVNode(\"th\", null, \"状态\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.productOrders.slice(0, 5), order => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: order.orderId\n    }, [_createElementVNode(\"td\", null, _toDisplayString(order.orderNumber), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($setup.formatDate(order.createdAt)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($setup.getOrderQuantity(order)), 1 /* TEXT */), _createElementVNode(\"td\", null, \"¥\" + _toDisplayString(order.totalAmount), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", {\n      class: _normalizeClass('status-' + order.status.toLowerCase())\n    }, _toDisplayString($setup.getStatusText(order.status)), 3 /* TEXT, CLASS */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), $setup.productOrders.length > 5 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_36, [_createVNode(_component_router_link, {\n    to: '/orders?productId=' + $setup.selectedProductId,\n    class: \"btn btn-sm btn-outline\"\n  }, {\n    default: _withCtx(() => _cache[26] || (_cache[26] = [_createTextVNode(\"查看更多订单\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"to\"])])) : _createCommentVNode(\"v-if\", true)]))])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","for","id","_cache","$event","$setup","merchantId","type","min","onChange","selectedView","fetchProductPredictions","fetchAllProductsPredictions","number","_hoisted_5","args","changeViewType","value","_hoisted_6","selectedProductId","_Fragment","_renderList","products","product","productId","productName","_hoisted_7","_createCommentVNode","_hoisted_8","daysToPredict","max","_hoisted_9","loading","_hoisted_10","error","_hoisted_11","_hoisted_12","_toDisplayString","onClick","_hoisted_13","_hoisted_14","_createVNode","_component_Line","data","chartData","options","chartOptions","datasets","length","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","labels","_hoisted_19","_hoisted_20","calculateAverage","toFixed","_hoisted_21","_hoisted_22","Math","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","calculateSum","_hoisted_27","_normalizeClass","calculateTrend","abs","_hoisted_28","_hoisted_29","slice","description","substring","_hoisted_30","price","viewProductPrediction","_hoisted_31","_hoisted_32","productOrders","_hoisted_33","_hoisted_34","_hoisted_35","order","orderId","orderNumber","formatDate","createdAt","getOrderQuantity","totalAmount","status","toLowerCase","getStatusText","_hoisted_36","_component_router_link","to","default","_withCtx","_createTextVNode","_"],"sources":["E:\\shixun\\420\\ecms\\ecmsvue\\src\\views\\SalesPrediction.vue"],"sourcesContent":["// views/SalesPredictionView.vue\r\n<template>\r\n  <div class=\"sales-prediction-container\">\r\n    <h1>销售预测分析</h1>\r\n\r\n    <div class=\"card filters-card\">\r\n      <div class=\"card-title\">预测条件</div>\r\n      <div class=\"filters\">\r\n        <div class=\"form-group\">\r\n          <label for=\"merchantId\">商家ID:</label>\r\n          <input\r\n              id=\"merchantId\"\r\n              v-model.number=\"merchantId\"\r\n              type=\"number\"\r\n              min=\"1\"\r\n              class=\"form-control\"\r\n              @change=\"selectedView === 'product' ? fetchProductPredictions() : fetchAllProductsPredictions()\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"viewType\">查看方式:</label>\r\n          <select id=\"viewType\" v-model=\"selectedView\" class=\"form-control\" @change=\"changeViewType\">\r\n            <option value=\"all\">所有产品总览</option>\r\n            <option value=\"product\">单个产品明细</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div v-if=\"selectedView === 'product'\" class=\"form-group\">\r\n          <label for=\"productSelect\">选择产品:</label>\r\n          <select id=\"productSelect\" v-model=\"selectedProductId\" class=\"form-control\" @change=\"fetchProductPredictions()\">\r\n            <option v-for=\"product in products\" :key=\"product.productId\" :value=\"product.productId\">\r\n              {{ product.productName }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n\r\n        <div v-if=\"selectedView === 'product'\" class=\"form-group\">\r\n          <label for=\"daysPredict\">预测天数:</label>\r\n          <input\r\n              id=\"daysPredict\"\r\n              v-model.number=\"daysToPredict\"\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max=\"365\"\r\n              class=\"form-control\"\r\n              @change=\"fetchProductPredictions()\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"card data-card\">\r\n      <div class=\"card-title\">预测数据</div>\r\n      <div v-if=\"loading\" class=\"loading-container\">\r\n        <div class=\"spinner\"></div>\r\n        <p>正在加载预测数据...</p>\r\n      </div>\r\n\r\n      <div v-else-if=\"error\" class=\"error-container\">\r\n        <div class=\"alert alert-danger\">{{ error }}</div>\r\n        <button @click=\"selectedView === 'product' ? fetchProductPredictions() : fetchAllProductsPredictions()\" class=\"btn btn-primary\">\r\n          重试\r\n        </button>\r\n      </div>\r\n\r\n      <div v-else class=\"prediction-content\">\r\n        <!-- 图表区域 -->\r\n        <div class=\"chart-container\">\r\n          <Line :data=\"chartData\" :options=\"chartOptions\" />\r\n        </div>\r\n\r\n        <!-- 统计摘要 -->\r\n        <div v-if=\"chartData.datasets[0].data.length > 0\" class=\"stats-container\">\r\n          <h3>预测摘要</h3>\r\n          <div class=\"stats-grid\">\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-label\">预测周期</div>\r\n              <div class=\"stat-value\">{{ chartData.labels[0] }} 至 {{ chartData.labels[chartData.labels.length - 1] }}</div>\r\n            </div>\r\n\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-label\">平均预测销售额</div>\r\n              <div class=\"stat-value\">¥{{ calculateAverage(chartData.datasets[0].data).toFixed(2) }}</div>\r\n            </div>\r\n\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-label\">最高预测销售额</div>\r\n              <div class=\"stat-value\">¥{{ Math.max(...chartData.datasets[0].data).toFixed(2) }}</div>\r\n            </div>\r\n\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-label\">最低预测销售额</div>\r\n              <div class=\"stat-value\">¥{{ Math.min(...chartData.datasets[0].data).toFixed(2) }}</div>\r\n            </div>\r\n\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-label\">总预测销售额</div>\r\n              <div class=\"stat-value\">¥{{ calculateSum(chartData.datasets[0].data).toFixed(2) }}</div>\r\n            </div>\r\n\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-label\">预测趋势</div>\r\n              <div class=\"stat-value\" :class=\"calculateTrend(chartData.datasets[0].data) >= 0 ? 'positive' : 'negative'\">\r\n                {{ calculateTrend(chartData.datasets[0].data) >= 0 ? '上升' : '下降' }}\r\n                {{ Math.abs(calculateTrend(chartData.datasets[0].data)).toFixed(2) }}%\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 相关产品卡片 -->\r\n    <div v-if=\"selectedView === 'all' && !loading && !error\" class=\"card related-card\">\r\n      <div class=\"card-title\">相关产品数据</div>\r\n      <div class=\"product-grid\">\r\n        <div v-for=\"product in products.slice(0, 4)\" :key=\"product.productId\" class=\"product-item\">\r\n          <h4>{{ product.productName }}</h4>\r\n          <p>{{ product.description ? (product.description.length > 50 ? product.description.substring(0, 50) + '...' : product.description) : '暂无描述' }}</p>\r\n          <div class=\"product-price\">¥{{ product.price }}</div>\r\n          <button @click=\"viewProductPrediction(product.productId)\" class=\"btn btn-sm btn-primary\">查看预测</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 历史订单数据 -->\r\n    <div v-if=\"selectedProductId && selectedView === 'product' && !loading && !error\" class=\"card orders-card\">\r\n      <div class=\"card-title\">产品历史订单</div>\r\n      <div v-if=\"productOrders.length === 0\" class=\"no-data\">\r\n        暂无该产品的历史订单数据\r\n      </div>\r\n      <div v-else class=\"order-list\">\r\n        <table class=\"table\">\r\n          <thead>\r\n          <tr>\r\n            <th>订单号</th>\r\n            <th>订单日期</th>\r\n            <th>数量</th>\r\n            <th>订单金额</th>\r\n            <th>状态</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr v-for=\"order in productOrders.slice(0, 5)\" :key=\"order.orderId\">\r\n            <td>{{ order.orderNumber }}</td>\r\n            <td>{{ formatDate(order.createdAt) }}</td>\r\n            <td>{{ getOrderQuantity(order) }}</td>\r\n            <td>¥{{ order.totalAmount }}</td>\r\n            <td><span :class=\"'status-' + order.status.toLowerCase()\">{{ getStatusText(order.status) }}</span></td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n        <div v-if=\"productOrders.length > 5\" class=\"view-more\">\r\n          <router-link :to=\"'/orders?productId=' + selectedProductId\" class=\"btn btn-sm btn-outline\">查看更多订单</router-link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport { Chart, registerables } from 'chart.js';\r\nimport { Line } from 'vue-chartjs';\r\n\r\n// Register Chart.js components\r\nChart.register(...registerables);\r\n\r\nexport default {\r\n  name: 'SalesPredictionView',\r\n  components: {\r\n    Line\r\n  },\r\n  setup() {\r\n    // 反应式状态\r\n    const merchantId = ref(1);  // 默认商家ID\r\n    const selectedProductId = ref(null);\r\n    const daysToPredict = ref(30);\r\n    const selectedView = ref('all');  // 'all' 或 'product'\r\n    const loading = ref(false);\r\n    const error = ref(null);\r\n    const products = ref([]);\r\n    const productOrders = ref([]);\r\n\r\n    // 图表数据\r\n    const chartData = reactive({\r\n      labels: [],\r\n      datasets: [{\r\n        label: '预测销售额',\r\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n        borderColor: 'rgba(75, 192, 192, 1)',\r\n        borderWidth: 1,\r\n        data: []\r\n      }]\r\n    });\r\n\r\n    // 图表选项\r\n    const chartOptions = {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      scales: {\r\n        y: {\r\n          beginAtZero: false,\r\n          title: {\r\n            display: true,\r\n            text: '销售金额 (¥)'\r\n          }\r\n        },\r\n        x: {\r\n          title: {\r\n            display: true,\r\n            text: '日期'\r\n          }\r\n        }\r\n      },\r\n      plugins: {\r\n        tooltip: {\r\n          callbacks: {\r\n            label: function(context) {\r\n              return `销售额: ¥${context.raw.toFixed(2)}`;\r\n            }\r\n          }\r\n        },\r\n        legend: {\r\n          position: 'top'\r\n        }\r\n      }\r\n    };\r\n\r\n    // 获取所有产品销售预测\r\n    const fetchAllProductsPredictions = async () => {\r\n      loading.value = true;\r\n      error.value = null;\r\n\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/api/ai/sales-prediction/${merchantId.value}`);\r\n\r\n        // 更新图表数据\r\n        chartData.labels = response.data.dates;\r\n        chartData.datasets[0].data = response.data.predictions;\r\n        chartData.datasets[0].label = '所有产品销售预测';\r\n\r\n        // 获取产品列表\r\n        await fetchProducts();\r\n      } catch (err) {\r\n        console.error('获取预测数据失败:', err);\r\n        error.value = err.response?.data?.message || '无法获取预测数据';\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    // 获取单个产品销售预测\r\n    const fetchProductPredictions = async () => {\r\n      if (!selectedProductId.value) {\r\n        if (products.value.length > 0) {\r\n          selectedProductId.value = products.value[0].productId;\r\n        } else {\r\n          await fetchProducts();\r\n          if (products.value.length > 0) {\r\n            selectedProductId.value = products.value[0].productId;\r\n          } else {\r\n            error.value = '没有可用的产品';\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n      loading.value = true;\r\n      error.value = null;\r\n\r\n      try {\r\n        const response = await axios.get(\r\n            `http://localhost:8080/api/ai/sales-prediction-by-product/${merchantId.value}/${selectedProductId.value}/${daysToPredict.value}`\r\n        );\r\n\r\n        // 更新图表数据\r\n        chartData.labels = response.data.dates;\r\n        chartData.datasets[0].data = response.data.predictions;\r\n\r\n        // 从产品列表中查找产品名称\r\n        const product = products.value.find(p => p.productId === selectedProductId.value);\r\n        const productName = product ? product.productName : `产品 #${selectedProductId.value}`;\r\n        chartData.datasets[0].label = `${productName} 销售预测`;\r\n\r\n        // 获取产品的历史订单\r\n        await fetchProductOrders();\r\n      } catch (err) {\r\n        console.error('获取产品预测数据失败:', err);\r\n        error.value = err.response?.data?.message || '无法获取产品预测数据';\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    // 获取产品列表\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/api/products`);\r\n        products.value = response.data.filter(product => product.merchantId === merchantId.value);\r\n      } catch (err) {\r\n        console.error('获取产品列表失败:', err);\r\n        error.value = '无法获取产品列表';\r\n      }\r\n    };\r\n\r\n    // 获取产品的历史订单\r\n    const fetchProductOrders = async () => {\r\n      try {\r\n        // 假设这里有一个API来获取产品的订单\r\n        // 在实际应用中，你可能需要创建这个API端点\r\n        // 这里我们使用模拟数据\r\n        const response = await axios.get(`http://localhost:8080/api/orders/${merchantId.value}`);\r\n        productOrders.value = response.data.filter(order => {\r\n          // 这里假设订单中有一个orderItems字段包含产品信息\r\n          // 实际应用中可能需要调整\r\n          return order.merchantId === merchantId.value;\r\n        });\r\n      } catch (err) {\r\n        console.error('获取产品订单失败:', err);\r\n        productOrders.value = [];\r\n      }\r\n    };\r\n\r\n    // 切换视图类型\r\n    const changeViewType = () => {\r\n      if (selectedView.value === 'all') {\r\n        fetchAllProductsPredictions();\r\n      } else {\r\n        fetchProductPredictions();\r\n      }\r\n    };\r\n\r\n    // 查看特定产品的预测\r\n    const viewProductPrediction = (productId) => {\r\n      selectedProductId.value = productId;\r\n      selectedView.value = 'product';\r\n      fetchProductPredictions();\r\n    };\r\n\r\n    // 计算统计指标\r\n    const calculateAverage = (data) => {\r\n      if (!data || data.length === 0) return 0;\r\n      return data.reduce((sum, val) => sum + val, 0) / data.length;\r\n    };\r\n\r\n    const calculateSum = (data) => {\r\n      if (!data || data.length === 0) return 0;\r\n      return data.reduce((sum, val) => sum + val, 0);\r\n    };\r\n\r\n    const calculateTrend = (data) => {\r\n      if (!data || data.length < 2) return 0;\r\n      const firstValue = data[0];\r\n      const lastValue = data[data.length - 1];\r\n      return ((lastValue - firstValue) / firstValue) * 100;\r\n    };\r\n\r\n    // 格式化日期\r\n    const formatDate = (dateString) => {\r\n      if (!dateString) return '';\r\n      const date = new Date(dateString);\r\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\r\n    };\r\n\r\n    // 获取订单中的产品数量\r\n    const getOrderQuantity = (order) => {\r\n      // 这里假设订单中有一个orderItems字段包含产品数量\r\n      // 实际应用中可能需要调整\r\n      return order.quantity || 1;\r\n    };\r\n\r\n    // 获取订单状态文本\r\n    const getStatusText = (status) => {\r\n      const statusMap = {\r\n        'PENDING': '待处理',\r\n        'PROCESSING': '处理中',\r\n        'SHIPPED': '已发货',\r\n        'DELIVERED': '已送达',\r\n        'COMPLETED': '已完成',\r\n        'CANCELLED': '已取消'\r\n      };\r\n      return statusMap[status] || status;\r\n    };\r\n\r\n    // 生命周期钩子\r\n    onMounted(async () => {\r\n      await fetchProducts();\r\n      await fetchAllProductsPredictions();\r\n    });\r\n\r\n    return {\r\n      merchantId,\r\n      selectedProductId,\r\n      daysToPredict,\r\n      selectedView,\r\n      loading,\r\n      error,\r\n      products,\r\n      productOrders,\r\n      chartData,\r\n      chartOptions,\r\n      fetchAllProductsPredictions,\r\n      fetchProductPredictions,\r\n      changeViewType,\r\n      viewProductPrediction,\r\n      calculateAverage,\r\n      calculateSum,\r\n      calculateTrend,\r\n      formatDate,\r\n      getOrderQuantity,\r\n      getStatusText\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.sales-prediction-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\nh1 {\r\n  margin-bottom: 20px;\r\n  color: #333;\r\n}\r\n\r\n.card {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card-title {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  margin-bottom: 15px;\r\n  padding-bottom: 10px;\r\n  border-bottom: 1px solid #eee;\r\n  color: #333;\r\n}\r\n\r\n.filters {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n  align-items: flex-end;\r\n}\r\n\r\n.form-group {\r\n  flex: 1;\r\n  min-width: 200px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n}\r\n\r\n.form-control {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n}\r\n\r\n.loading-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 300px;\r\n}\r\n\r\n.spinner {\r\n  border: 4px solid #f3f3f3;\r\n  border-top: 4px solid #3498db;\r\n  border-radius: 50%;\r\n  width: 30px;\r\n  height: 30px;\r\n  animation: spin 1s linear infinite;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n.error-container {\r\n  min-height: 200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 15px;\r\n}\r\n\r\n.chart-container {\r\n  height: 400px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.stats-container {\r\n  background-color: #f8f9fa;\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n}\r\n\r\n.stats-container h3 {\r\n  margin-top: 0;\r\n  margin-bottom: 15px;\r\n  font-size: 16px;\r\n  color: #333;\r\n}\r\n\r\n.stats-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: 15px;\r\n}\r\n\r\n.stat-item {\r\n  padding: 10px;\r\n  background-color: white;\r\n  border-radius: 6px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.stat-label {\r\n  font-size: 14px;\r\n  color: #6c757d;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.stat-value.positive {\r\n  color: #28a745;\r\n}\r\n\r\n.stat-value.negative {\r\n  color: #dc3545;\r\n}\r\n\r\n.product-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.product-item {\r\n  padding: 15px;\r\n  background-color: #f8f9fa;\r\n  border-radius: 6px;\r\n  position: relative;\r\n}\r\n\r\n.product-item h4 {\r\n  margin-top: 0;\r\n  margin-bottom: 10px;\r\n  color: #333;\r\n}\r\n\r\n.product-item p {\r\n  color: #6c757d;\r\n  margin-bottom: 15px;\r\n  line-height: 1.4;\r\n  font-size: 14px;\r\n}\r\n\r\n.product-price {\r\n  font-weight: bold;\r\n  color: #333;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.order-list {\r\n  overflow-x: auto;\r\n}\r\n\r\n.table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.table th, .table td {\r\n  padding: 10px;\r\n  text-align: left;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.table th {\r\n  background-color: #f8f9fa;\r\n  font-weight: bold;\r\n}\r\n\r\n.status-pending { color: #ffc107; }\r\n.status-processing { color: #17a2b8; }\r\n.status-shipped { color: #6f42c1; }\r\n.status-delivered { color: #20c997; }\r\n.status-completed { color: #28a745; }\r\n.status-cancelled { color: #dc3545; }\r\n\r\n.no-data {\r\n  text-align: center;\r\n  padding: 30px;\r\n  color: #6c757d;\r\n  font-style: italic;\r\n}\r\n\r\n.view-more {\r\n  text-align: right;\r\n  margin-top: 10px;\r\n}\r\n\r\n.btn-outline {\r\n  background-color: transparent;\r\n  border: 1px solid #007bff;\r\n  color: #007bff;\r\n}\r\n\r\n.btn-outline:hover {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\n.btn-sm {\r\n  padding: 4px 8px;\r\n  font-size: 14px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .filters {\r\n    flex-direction: column;\r\n    gap: 10px;\r\n  }\r\n\r\n  .form-group {\r\n    width: 100%;\r\n  }\r\n\r\n  .stats-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  .product-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}