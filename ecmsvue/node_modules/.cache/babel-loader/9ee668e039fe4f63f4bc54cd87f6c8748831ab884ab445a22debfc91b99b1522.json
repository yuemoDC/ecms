{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nconst _hoisted_2 = {\n  class: \"register-link\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 登录组件的容器 \"), _createVNode(_component_el_card, {\n    class: \"login-card\"\n  }, {\n    header: _withCtx(() => [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"登录\", -1 /* HOISTED */)), _createCommentVNode(\" 登录标题 \")]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      model: $setup.loginForm,\n      rules: $setup.rules,\n      ref: \"loginFormRef\"\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" 表单组件 \"), _createVNode(_component_el_form_item, {\n        prop: \"username\"\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" 用户名输入项 \"), _createVNode(_component_el_input, {\n          modelValue: $setup.loginForm.username,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.loginForm.username = $event),\n          placeholder: \"请输入用户名\"\n        }, {\n          prefix: _withCtx(() => [_createVNode(_component_el_icon, null, {\n            default: _withCtx(() => [_createVNode($setup[\"User\"])]),\n            _: 1 /* STABLE */\n          }), _createCommentVNode(\" 用户名图标 \")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        prop: \"password\"\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" 密码输入项 \"), _createVNode(_component_el_input, {\n          modelValue: $setup.loginForm.password,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.loginForm.password = $event),\n          type: \"password\",\n          placeholder: \"请输入密码\"\n        }, {\n          prefix: _withCtx(() => [_createVNode(_component_el_icon, null, {\n            default: _withCtx(() => [_createVNode($setup[\"Lock\"])]),\n            _: 1 /* STABLE */\n          }), _createCommentVNode(\" 密码图标 \")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $setup.handleLogin,\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"登录\")])),\n          _: 1 /* STABLE */\n        }), _createCommentVNode(\" 登录按钮 \")]),\n        _: 1 /* STABLE */\n      }), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 注册链接 \"), _createVNode(_component_router_link, {\n        to: \"/register\"\n      }, {\n        default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"还没有账号？立即注册\")])),\n        _: 1 /* STABLE */\n      })])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_el_card","header","_withCtx","_createElementVNode","default","_component_el_form","model","$setup","loginForm","rules","ref","_component_el_form_item","prop","_component_el_input","modelValue","username","_cache","$event","placeholder","prefix","_component_el_icon","_","password","type","_component_el_button","onClick","handleLogin","style","_createTextVNode","_hoisted_2","_component_router_link","to"],"sources":["E:\\软件工程实训\\ecmsV1.2\\ecmsvue\\src\\views\\UserLogin.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\"> <!-- 登录组件的容器 -->\n    <el-card class=\"login-card\"> <!-- Element Plus 的卡片组件 -->\n      <template #header>\n        <h2>登录</h2> <!-- 登录标题 -->\n      </template>\n      <el-form :model=\"loginForm\" :rules=\"rules\" ref=\"loginFormRef\"> <!-- 表单组件 -->\n        <el-form-item prop=\"username\"> <!-- 用户名输入项 -->\n          <el-input v-model=\"loginForm.username\" placeholder=\"请输入用户名\"> <!-- 用户名输入框 -->\n            <template #prefix>\n              <el-icon><User /></el-icon> <!-- 用户名图标 -->\n            </template>\n          </el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\"> <!-- 密码输入项 -->\n          <el-input v-model=\"loginForm.password\" type=\"password\" placeholder=\"请输入密码\"> <!-- 密码输入框 -->\n            <template #prefix>\n              <el-icon><Lock /></el-icon> <!-- 密码图标 -->\n            </template>\n          </el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleLogin\" style=\"width: 100%\">登录</el-button> <!-- 登录按钮 -->\n        </el-form-item>\n        <div class=\"register-link\"> <!-- 注册链接 -->\n          <router-link to=\"/register\">还没有账号？立即注册</router-link>\n        </div>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script setup name=\"UserLogin\">\nimport { ref, reactive } from 'vue' // 导入Vue的响应性API\nimport { User, Lock } from '@element-plus/icons-vue' // 导入Element Plus的图标\nimport { useRouter } from 'vue-router' // 导入路由\nimport axios from '../utils/axios' // 导入自定义的axios实例\nimport { ElMessage } from 'element-plus' // 导入Element Plus的消息提示组件\n\nconst router = useRouter() // 获取路由实例\nconst loginFormRef = ref(null) // 创建用于引用表单的ref\n\nconst loginForm = reactive({ // 创建响应式登录表单数据\n  username: '',\n  password: ''\n})\n\nconst rules = { // 定义表单校验规则\n  username: [{ required: true, message: '请输入用户名', trigger: 'blur' }], // 用户名必填规则\n  password: [{ required: true, message: '请输入密码', trigger: 'blur' }] // 密码必填规则\n}\n\nconst handleLogin = async () => { // 登录处理函数\n  if (!loginFormRef.value) return // 确保表单引用存在\n\n  await loginFormRef.value.validate(async (valid) => { // 校验表单\n    if (valid) { // 如果表单有效\n      try {\n        const response = await axios.post('/api/auth/login', loginForm) // 发送登录请求\n        if (response.data.success) { // 登录成功处理\n          ElMessage.success('登录成功') // 显示成功消息\n          localStorage.setItem('token', response.data.token) // 存储token\n          localStorage.setItem('user', JSON.stringify(response.data)); // 存储用户信息（转成字符串）\n          router.push('/home') // 导航到主页\n        } else {\n          ElMessage.error(response.data.message || '登录失败') // 显示错误消息\n        }\n      } catch (error) {\n        ElMessage.error('登录失败，请稍后重试') // 处理请求错误\n        console.error('Login error:', error) // 输出错误信息\n      }\n    }\n  })\n}\n</script>\n\n<style scoped>\n.login-container {\n  height: 100vh; /* 设置容器高度为视口高度 */\n  display: flex; /* 使用flex布局 */\n  justify-content: center; /* 居中对齐 */\n  align-items: center; /* 垂直居中 */\n  background-color: #f5f5f5; /* 背景色 */\n}\n\n.login-card {\n  width: 400px; /* 卡片宽度 */\n}\n\n.register-link {\n  text-align: center; /* 注册链接居中对齐 */\n  margin-top: 15px; /* 上外边距 */\n}\n\n.register-link a {\n  color: #409eff; /* 链接颜色 */\n  text-decoration: none; /* 移除下划线 */\n}\n\n.register-link a:hover {\n  text-decoration: underline; /* 悬停时添加下划线 */\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EAuBjBA,KAAK,EAAC;AAAe;;;;;;;;;uBAvBhCC,mBAAA,CA4BM,OA5BNC,UA4BM,GA5BwBC,mBAAA,aAAgB,EAC5CC,YAAA,CA0BUC,kBAAA;IA1BDL,KAAK,EAAC;EAAY;IACdM,MAAM,EAAAC,QAAA,CACf,MAAW,C,0BAAXC,mBAAA,CAAW,YAAP,IAAE,sBAAML,mBAAA,UAAa,C;IAJjCM,OAAA,EAAAF,QAAA,CAMM,MAqBU,CArBVH,YAAA,CAqBUM,kBAAA;MArBAC,KAAK,EAAEC,MAAA,CAAAC,SAAS;MAAGC,KAAK,EAAEF,MAAA,CAAAE,KAAK;MAAEC,GAAG,EAAC;;MANrDN,OAAA,EAAAF,QAAA,CAMqE,MAAa,CAAbJ,mBAAA,UAAa,EAC1EC,YAAA,CAMeY,uBAAA;QANDC,IAAI,EAAC;MAAU;QAPrCR,OAAA,EAAAF,QAAA,CAOuC,MAAe,CAAfJ,mBAAA,YAAe,EAC5CC,YAAA,CAIWc,mBAAA;UAZrBC,UAAA,EAQ6BP,MAAA,CAAAC,SAAS,CAACO,QAAQ;UAR/C,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQ6BV,MAAA,CAAAC,SAAS,CAACO,QAAQ,GAAAE,MAAA;UAAEC,WAAW,EAAC;;UACtCC,MAAM,EAAAjB,QAAA,CACf,MAA2B,CAA3BH,YAAA,CAA2BqB,kBAAA;YAVzChB,OAAA,EAAAF,QAAA,CAUuB,MAAQ,CAARH,YAAA,CAAQQ,MAAA,U;YAV/Bc,CAAA;cAU0CvB,mBAAA,WAAc,C;UAVxDuB,CAAA;;QAAAA,CAAA;UAcQtB,YAAA,CAMeY,uBAAA;QANDC,IAAI,EAAC;MAAU;QAdrCR,OAAA,EAAAF,QAAA,CAcuC,MAAc,CAAdJ,mBAAA,WAAc,EAC3CC,YAAA,CAIWc,mBAAA;UAnBrBC,UAAA,EAe6BP,MAAA,CAAAC,SAAS,CAACc,QAAQ;UAf/C,uBAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAe6BV,MAAA,CAAAC,SAAS,CAACc,QAAQ,GAAAL,MAAA;UAAEM,IAAI,EAAC,UAAU;UAACL,WAAW,EAAC;;UACtDC,MAAM,EAAAjB,QAAA,CACf,MAA2B,CAA3BH,YAAA,CAA2BqB,kBAAA;YAjBzChB,OAAA,EAAAF,QAAA,CAiBuB,MAAQ,CAARH,YAAA,CAAQQ,MAAA,U;YAjB/Bc,CAAA;cAiB0CvB,mBAAA,UAAa,C;UAjBvDuB,CAAA;;QAAAA,CAAA;UAqBQtB,YAAA,CAEeY,uBAAA;QAvBvBP,OAAA,EAAAF,QAAA,CAsBU,MAAiF,CAAjFH,YAAA,CAAiFyB,oBAAA;UAAtED,IAAI,EAAC,SAAS;UAAEE,OAAK,EAAElB,MAAA,CAAAmB,WAAW;UAAEC,KAAmB,EAAnB;YAAA;UAAA;;UAtBzDvB,OAAA,EAAAF,QAAA,CAsB6E,MAAEc,MAAA,QAAAA,MAAA,OAtB/EY,gBAAA,CAsB6E,IAAE,E;UAtB/EP,CAAA;YAsB4FvB,mBAAA,UAAa,C;QAtBzGuB,CAAA;UAwBQlB,mBAAA,CAEM,OAFN0B,UAEM,GAFsB/B,mBAAA,UAAa,EACvCC,YAAA,CAAoD+B,sBAAA;QAAvCC,EAAE,EAAC;MAAW;QAzBrC3B,OAAA,EAAAF,QAAA,CAyBsC,MAAUc,MAAA,QAAAA,MAAA,OAzBhDY,gBAAA,CAyBsC,YAAU,E;QAzBhDP,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}