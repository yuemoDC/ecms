{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios'; // 引入 Axios\n\nexport default {\n  name: \"LoginComponent\",\n  // 使用多单词组件名称\n  data() {\n    return {\n      isLogin: true,\n      // 表示当前是否是登录模式\n      form: {\n        username: '',\n        password: '',\n        newUsername: '',\n        newPassword: '',\n        email: ''\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '长度在 3 到 10 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 20,\n          message: '长度在 1 到 20 个字符',\n          trigger: 'blur'\n        }]\n      },\n      registerRules: {\n        newUsername: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '长度在 3 到 10 个字符',\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 20,\n          message: '长度在 1 到 20 个字符',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: '邮箱格式不正确',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    handleLogin() {\n      // 重命名方法以避免重复\n      this.$refs['userForm'].validate(valid => {\n        if (valid) {\n          console.log(\"Attempting to login with: \", this.form); // 调试输出\n          axios.post(\"http://localhost:8080/api/users/login\", {\n            username: this.form.username,\n            password: this.form.password\n          }).then(res => {\n            console.log(\"Response data: \", res.data); // 调试输出完整响应数据\n            if (res.data.message === \"登录成功\") {\n              // 检查登录成功信息\n              const role = res.data.role; // 获取角色信息\n              const userId = res.data.userId; // 获取用户 ID\n              console.log(\"User ID: \", userId); // 检查是否成功获取 ID\n              if (userId) {\n                localStorage.setItem('userId', userId); // 存储用户 ID 到 localStorage\n                localStorage.setItem('role', role); // 存储角色信息\n                this.$message.success(\"登录成功，用户ID: \" + userId); // 显示提示信息\n                if (role === \"ADMIN\") {\n                  this.$router.push('/products'); // 管理员跳转到主页\n                } else {\n                  this.$router.push('/'); // 普通用户跳转到产品页面\n                }\n              } else {\n                console.error(\"No userId returned from backend!\");\n                this.$message.error(\"登录失败，缺少用户ID\");\n              }\n            } else {\n              this.$message.error(res.data.message); // 后端返回失败信息提示\n            }\n          }).catch(error => {\n            // 检查错误响应\n            if (error.response) {\n              this.$message.error(error.response.data || \"请求失败\"); // 显示后端返回的错误信息\n            } else {\n              console.error(\"Login error: \", error);\n              this.$message.error(\"网络请求失败\"); // 处理网络请求失败情况\n            }\n          });\n        }\n      });\n    },\n    handleRegister() {\n      // 重命名方法以避免重复\n      this.$refs['userForm'].validate(valid => {\n        if (valid) {\n          console.log(\"Attempting to register with: \", this.form); // 调试输出\n          axios.post(\"http://localhost:8080/api/users/register\", {\n            username: this.form.newUsername,\n            password: this.form.newPassword,\n            email: this.form.email\n          }).then(res => {\n            console.log(res.data); // 调试输出\n            if (res.data.message === \"注册成功\") {\n              this.$message.success(res.data.message);\n              this.toggleForm(); // 切换回登录界面\n            } else {\n              this.$message.error(res.data.message); // 显示后端返回的错误信息\n            }\n          }).catch(error => {\n            // 检查错误响应\n            if (error.response) {\n              this.$message.error(error.response.data || \"请求失败\"); // 显示后端返回的错误信息\n            } else {\n              console.error(\"Register error:\", error);\n              this.$message.error(\"网络请求失败\"); // 处理网络请求失败情况\n            }\n          });\n        }\n      });\n    },\n    toggleForm() {\n      this.isLogin = !this.isLogin; // 切换登录/注册状态\n      // 清空表单数据\n      if (this.isLogin) {\n        this.form.username = '';\n        this.form.password = '';\n      } else {\n        this.form.newUsername = '';\n        this.form.newPassword = '';\n        this.form.email = '';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","isLogin","form","username","password","newUsername","newPassword","email","loginRules","required","message","trigger","min","max","registerRules","type","methods","handleLogin","$refs","validate","valid","console","log","post","then","res","role","userId","localStorage","setItem","$message","success","$router","push","error","catch","response","handleRegister","toggleForm"],"sources":["E:\\ecms\\ecmsvue\\src\\views\\LoginComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"wrapper\">\r\n    <div style=\"margin: 200px auto; background-color: #fff; width: 350px; padding: 20px; border-radius: 10px\">\r\n      <div style=\"margin: 20px 0; text-align: center; font-size: 24px\"><b>{{ isLogin ? '登录' : '注册' }}</b></div>\r\n      <el-form :model=\"form\" :rules=\"isLogin ? loginRules : registerRules\" ref=\"userForm\">\r\n        <el-form-item prop=\"username\" v-if=\"isLogin\">\r\n          <el-input size=\"medium\" prefix-icon=\"el-icon-user\" v-model=\"form.username\" placeholder=\"用户名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"newUsername\" v-if=\"!isLogin\">\r\n          <el-input size=\"medium\" prefix-icon=\"el-icon-user\" v-model=\"form.newUsername\" placeholder=\"用户名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\" v-if=\"isLogin\">\r\n          <el-input size=\"medium\" prefix-icon=\"el-icon-lock\" show-password v-model=\"form.password\" placeholder=\"密码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"newPassword\" v-if=\"!isLogin\">\r\n          <el-input size=\"medium\" prefix-icon=\"el-icon-lock\" show-password v-model=\"form.newPassword\" placeholder=\"密码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"email\" v-if=\"!isLogin\">\r\n          <el-input size=\"medium\" prefix-icon=\"el-icon-mail\" v-model=\"form.email\" placeholder=\"邮箱\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item style=\"margin: 10px 0; text-align: right\">\r\n          <el-button type=\"warning\" size=\"small\" @click=\"toggleForm\">{{ isLogin ? '切换到注册' : '切换到登录' }}</el-button>\r\n          <el-button type=\"primary\" size=\"small\" @click=\"isLogin ? handleLogin() : handleRegister()\">{{ isLogin ? '登录' : '注册' }}</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'; // 引入 Axios\r\n\r\nexport default {\r\n  name: \"LoginComponent\", // 使用多单词组件名称\r\n  data() {\r\n    return {\r\n      isLogin: true, // 表示当前是否是登录模式\r\n      form: {\r\n        username: '',\r\n        password: '',\r\n        newUsername: '',\r\n        newPassword: '',\r\n        email: ''\r\n      },\r\n      loginRules: {\r\n        username: [\r\n          {required: true, message: '请输入用户名', trigger: 'blur'},\r\n          {min: 3, max: 10, message: '长度在 3 到 10 个字符', trigger: 'blur'}\r\n        ],\r\n        password: [\r\n          {required: true, message: '请输入密码', trigger: 'blur'},\r\n          {min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur'}\r\n        ],\r\n      },\r\n      registerRules: {\r\n        newUsername: [\r\n          {required: true, message: '请输入用户名', trigger: 'blur'},\r\n          {min: 3, max: 10, message: '长度在 3 到 10 个字符', trigger: 'blur'}\r\n        ],\r\n        newPassword: [\r\n          {required: true, message: '请输入密码', trigger: 'blur'},\r\n          {min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur'}\r\n        ],\r\n        email: [\r\n          {required: true, message: '请输入邮箱', trigger: 'blur'},\r\n          {type: 'email', message: '邮箱格式不正确', trigger: 'blur'}\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleLogin() { // 重命名方法以避免重复\r\n      this.$refs['userForm'].validate(valid => {\r\n        if (valid) {\r\n          console.log(\"Attempting to login with: \", this.form); // 调试输出\r\n          axios.post(\"http://localhost:8080/api/users/login\", {\r\n            username: this.form.username,\r\n            password: this.form.password\r\n          })\r\n              .then(res => {\r\n                console.log(\"Response data: \", res.data); // 调试输出完整响应数据\r\n                if (res.data.message === \"登录成功\") { // 检查登录成功信息\r\n                  const role = res.data.role; // 获取角色信息\r\n                  const userId = res.data.userId; // 获取用户 ID\r\n                  console.log(\"User ID: \", userId); // 检查是否成功获取 ID\r\n                  if (userId) {\r\n                    localStorage.setItem('userId', userId); // 存储用户 ID 到 localStorage\r\n                    localStorage.setItem('role', role); // 存储角色信息\r\n                    this.$message.success(\"登录成功，用户ID: \" + userId); // 显示提示信息\r\n                    if (role === \"ADMIN\") {\r\n                      this.$router.push('/products'); // 管理员跳转到主页\r\n                    } else {\r\n                      this.$router.push('/'); // 普通用户跳转到产品页面\r\n                    }\r\n                  } else {\r\n                    console.error(\"No userId returned from backend!\");\r\n                    this.$message.error(\"登录失败，缺少用户ID\");\r\n                  }\r\n                } else {\r\n                  this.$message.error(res.data.message); // 后端返回失败信息提示\r\n                }\r\n              })\r\n              .catch(error => {\r\n                // 检查错误响应\r\n                if (error.response) {\r\n                  this.$message.error(error.response.data || \"请求失败\"); // 显示后端返回的错误信息\r\n                } else {\r\n                  console.error(\"Login error: \", error);\r\n                  this.$message.error(\"网络请求失败\"); // 处理网络请求失败情况\r\n                }\r\n              });\r\n        }\r\n      });\r\n    },\r\n\r\n    handleRegister() { // 重命名方法以避免重复\r\n      this.$refs['userForm'].validate(valid => {\r\n        if (valid) {\r\n          console.log(\"Attempting to register with: \", this.form); // 调试输出\r\n          axios.post(\"http://localhost:8080/api/users/register\", {\r\n            username: this.form.newUsername,\r\n            password: this.form.newPassword,\r\n            email: this.form.email\r\n          })\r\n              .then(res => {\r\n                console.log(res.data); // 调试输出\r\n                if (res.data.message === \"注册成功\") {\r\n                  this.$message.success(res.data.message);\r\n                  this.toggleForm(); // 切换回登录界面\r\n                } else {\r\n                  this.$message.error(res.data.message); // 显示后端返回的错误信息\r\n                }\r\n              })\r\n              .catch(error => {\r\n                // 检查错误响应\r\n                if (error.response) {\r\n                  this.$message.error(error.response.data || \"请求失败\"); // 显示后端返回的错误信息\r\n                } else {\r\n                  console.error(\"Register error:\", error);\r\n                  this.$message.error(\"网络请求失败\"); // 处理网络请求失败情况\r\n                }\r\n              });\r\n        }\r\n      });\r\n    },\r\n\r\n    toggleForm() {\r\n      this.isLogin = !this.isLogin; // 切换登录/注册状态\r\n      // 清空表单数据\r\n      if (this.isLogin) {\r\n        this.form.username = '';\r\n        this.form.password = '';\r\n      } else {\r\n        this.form.newUsername = '';\r\n        this.form.newPassword = '';\r\n        this.form.email = '';\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.wrapper {\r\n  height: 100vh;\r\n  background-image: linear-gradient(to bottom right, #FC466B, #3F5EFB);\r\n  overflow: hidden;\r\n}\r\n</style>\r\n"],"mappings":";AA8BA,OAAOA,KAAI,MAAO,OAAO,EAAE;;AAE3B,eAAe;EACbC,IAAI,EAAE,gBAAgB;EAAE;EACxBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,IAAI;MAAE;MACfC,IAAI,EAAE;QACJC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,WAAW,EAAE,EAAE;QACfC,WAAW,EAAE,EAAE;QACfC,KAAK,EAAE;MACT,CAAC;MACDC,UAAU,EAAE;QACVL,QAAQ,EAAE,CACR;UAACM,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,QAAQ;UAAEC,OAAO,EAAE;QAAM,CAAC,EACpD;UAACC,GAAG,EAAE,CAAC;UAAEC,GAAG,EAAE,EAAE;UAAEH,OAAO,EAAE,gBAAgB;UAAEC,OAAO,EAAE;QAAM,EAC7D;QACDP,QAAQ,EAAE,CACR;UAACK,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAM,CAAC,EACnD;UAACC,GAAG,EAAE,CAAC;UAAEC,GAAG,EAAE,EAAE;UAAEH,OAAO,EAAE,gBAAgB;UAAEC,OAAO,EAAE;QAAM;MAEhE,CAAC;MACDG,aAAa,EAAE;QACbT,WAAW,EAAE,CACX;UAACI,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,QAAQ;UAAEC,OAAO,EAAE;QAAM,CAAC,EACpD;UAACC,GAAG,EAAE,CAAC;UAAEC,GAAG,EAAE,EAAE;UAAEH,OAAO,EAAE,gBAAgB;UAAEC,OAAO,EAAE;QAAM,EAC7D;QACDL,WAAW,EAAE,CACX;UAACG,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAM,CAAC,EACnD;UAACC,GAAG,EAAE,CAAC;UAAEC,GAAG,EAAE,EAAE;UAAEH,OAAO,EAAE,gBAAgB;UAAEC,OAAO,EAAE;QAAM,EAC7D;QACDJ,KAAK,EAAE,CACL;UAACE,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAM,CAAC,EACnD;UAACI,IAAI,EAAE,OAAO;UAAEL,OAAO,EAAE,SAAS;UAAEC,OAAO,EAAE;QAAM;MAEvD;IACF;EACF,CAAC;EACDK,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MAAE;MACd,IAAI,CAACC,KAAK,CAAC,UAAU,CAAC,CAACC,QAAQ,CAACC,KAAI,IAAK;QACvC,IAAIA,KAAK,EAAE;UACTC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE,IAAI,CAACpB,IAAI,CAAC,EAAE;UACtDJ,KAAK,CAACyB,IAAI,CAAC,uCAAuC,EAAE;YAClDpB,QAAQ,EAAE,IAAI,CAACD,IAAI,CAACC,QAAQ;YAC5BC,QAAQ,EAAE,IAAI,CAACF,IAAI,CAACE;UACtB,CAAC,EACIoB,IAAI,CAACC,GAAE,IAAK;YACXJ,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEG,GAAG,CAACzB,IAAI,CAAC,EAAE;YAC1C,IAAIyB,GAAG,CAACzB,IAAI,CAACU,OAAM,KAAM,MAAM,EAAE;cAAE;cACjC,MAAMgB,IAAG,GAAID,GAAG,CAACzB,IAAI,CAAC0B,IAAI,EAAE;cAC5B,MAAMC,MAAK,GAAIF,GAAG,CAACzB,IAAI,CAAC2B,MAAM,EAAE;cAChCN,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEK,MAAM,CAAC,EAAE;cAClC,IAAIA,MAAM,EAAE;gBACVC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEF,MAAM,CAAC,EAAE;gBACxCC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEH,IAAI,CAAC,EAAE;gBACpC,IAAI,CAACI,QAAQ,CAACC,OAAO,CAAC,aAAY,GAAIJ,MAAM,CAAC,EAAE;gBAC/C,IAAID,IAAG,KAAM,OAAO,EAAE;kBACpB,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC,EAAE;gBAClC,OAAO;kBACL,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,EAAE;gBAC1B;cACF,OAAO;gBACLZ,OAAO,CAACa,KAAK,CAAC,kCAAkC,CAAC;gBACjD,IAAI,CAACJ,QAAQ,CAACI,KAAK,CAAC,aAAa,CAAC;cACpC;YACF,OAAO;cACL,IAAI,CAACJ,QAAQ,CAACI,KAAK,CAACT,GAAG,CAACzB,IAAI,CAACU,OAAO,CAAC,EAAE;YACzC;UACF,CAAC,EACAyB,KAAK,CAACD,KAAI,IAAK;YACd;YACA,IAAIA,KAAK,CAACE,QAAQ,EAAE;cAClB,IAAI,CAACN,QAAQ,CAACI,KAAK,CAACA,KAAK,CAACE,QAAQ,CAACpC,IAAG,IAAK,MAAM,CAAC,EAAE;YACtD,OAAO;cACLqB,OAAO,CAACa,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;cACrC,IAAI,CAACJ,QAAQ,CAACI,KAAK,CAAC,QAAQ,CAAC,EAAE;YACjC;UACF,CAAC,CAAC;QACR;MACF,CAAC,CAAC;IACJ,CAAC;IAEDG,cAAcA,CAAA,EAAG;MAAE;MACjB,IAAI,CAACnB,KAAK,CAAC,UAAU,CAAC,CAACC,QAAQ,CAACC,KAAI,IAAK;QACvC,IAAIA,KAAK,EAAE;UACTC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAE,IAAI,CAACpB,IAAI,CAAC,EAAE;UACzDJ,KAAK,CAACyB,IAAI,CAAC,0CAA0C,EAAE;YACrDpB,QAAQ,EAAE,IAAI,CAACD,IAAI,CAACG,WAAW;YAC/BD,QAAQ,EAAE,IAAI,CAACF,IAAI,CAACI,WAAW;YAC/BC,KAAK,EAAE,IAAI,CAACL,IAAI,CAACK;UACnB,CAAC,EACIiB,IAAI,CAACC,GAAE,IAAK;YACXJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAACzB,IAAI,CAAC,EAAE;YACvB,IAAIyB,GAAG,CAACzB,IAAI,CAACU,OAAM,KAAM,MAAM,EAAE;cAC/B,IAAI,CAACoB,QAAQ,CAACC,OAAO,CAACN,GAAG,CAACzB,IAAI,CAACU,OAAO,CAAC;cACvC,IAAI,CAAC4B,UAAU,CAAC,CAAC,EAAE;YACrB,OAAO;cACL,IAAI,CAACR,QAAQ,CAACI,KAAK,CAACT,GAAG,CAACzB,IAAI,CAACU,OAAO,CAAC,EAAE;YACzC;UACF,CAAC,EACAyB,KAAK,CAACD,KAAI,IAAK;YACd;YACA,IAAIA,KAAK,CAACE,QAAQ,EAAE;cAClB,IAAI,CAACN,QAAQ,CAACI,KAAK,CAACA,KAAK,CAACE,QAAQ,CAACpC,IAAG,IAAK,MAAM,CAAC,EAAE;YACtD,OAAO;cACLqB,OAAO,CAACa,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;cACvC,IAAI,CAACJ,QAAQ,CAACI,KAAK,CAAC,QAAQ,CAAC,EAAE;YACjC;UACF,CAAC,CAAC;QACR;MACF,CAAC,CAAC;IACJ,CAAC;IAEDI,UAAUA,CAAA,EAAG;MACX,IAAI,CAACrC,OAAM,GAAI,CAAC,IAAI,CAACA,OAAO,EAAE;MAC9B;MACA,IAAI,IAAI,CAACA,OAAO,EAAE;QAChB,IAAI,CAACC,IAAI,CAACC,QAAO,GAAI,EAAE;QACvB,IAAI,CAACD,IAAI,CAACE,QAAO,GAAI,EAAE;MACzB,OAAO;QACL,IAAI,CAACF,IAAI,CAACG,WAAU,GAAI,EAAE;QAC1B,IAAI,CAACH,IAAI,CAACI,WAAU,GAAI,EAAE;QAC1B,IAAI,CAACJ,IAAI,CAACK,KAAI,GAAI,EAAE;MACtB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}