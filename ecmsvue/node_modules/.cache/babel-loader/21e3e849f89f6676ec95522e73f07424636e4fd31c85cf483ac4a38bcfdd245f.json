{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_OrderForm = _resolveComponent(\"OrderForm\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"Order List\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.showForm && $options.showForm(...args))\n  }, \"Add Order\"), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.orders, order => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: order.orderId\n    }, [_createTextVNode(_toDisplayString(order.orderNumber) + \" - \" + _toDisplayString(order.totalAmount) + \" - \" + _toDisplayString(order.orderStatus) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.editOrder(order)\n    }, \"Edit\", 8 /* PROPS */, _hoisted_1), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteOrder(order.orderId)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_2)]);\n  }), 128 /* KEYED_FRAGMENT */))]), $data.isFormVisible ? (_openBlock(), _createBlock(_component_OrderForm, {\n    key: 0,\n    onClose: _cache[1] || (_cache[1] = $event => $data.isFormVisible = false),\n    order: $data.selectedOrder,\n    onRefresh: $options.fetchOrders\n  }, null, 8 /* PROPS */, [\"order\", \"onRefresh\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","onClick","_cache","args","$options","showForm","_Fragment","_renderList","$data","orders","order","key","orderId","_createTextVNode","_toDisplayString","orderNumber","totalAmount","orderStatus","$event","editOrder","_hoisted_1","deleteOrder","_hoisted_2","isFormVisible","_createBlock","_component_OrderForm","onClose","selectedOrder","onRefresh","fetchOrders","_createCommentVNode"],"sources":["E:\\ecms\\ecmsvue\\src\\components\\OrderList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Order List</h2>\r\n    <button @click=\"showForm\">Add Order</button>\r\n    <ul>\r\n      <li v-for=\"order in orders\" :key=\"order.orderId\">\r\n        {{ order.orderNumber }} - {{ order.totalAmount }} - {{ order.orderStatus }}\r\n        <button @click=\"editOrder(order)\">Edit</button>\r\n        <button @click=\"deleteOrder(order.orderId)\">Delete</button>\r\n      </li>\r\n    </ul>\r\n    <OrderForm v-if=\"isFormVisible\" @close=\"isFormVisible = false\" :order=\"selectedOrder\" @refresh=\"fetchOrders\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport OrderForm from './OrderForm.vue';\r\n\r\nexport default {\r\n  components: {OrderForm},\r\n  data() {\r\n    return {\r\n      orders: [],\r\n      isFormVisible: false,\r\n      selectedOrder: null,\r\n    };\r\n  },\r\n  methods: {\r\n    fetchOrders() {\r\n      fetch('http://localhost:8080/api/orders') // Adjust URL to your backend\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            this.orders = data;\r\n          });\r\n    },\r\n    showForm() {\r\n      this.selectedOrder = null;\r\n      this.isFormVisible = true;\r\n    },\r\n    editOrder(order) {\r\n      this.selectedOrder = order;\r\n      this.isFormVisible = true;\r\n    },\r\n    deleteOrder(orderId) {\r\n      fetch(`http://localhost:8080/api/orders/${orderId}`, {\r\n        method: 'DELETE'\r\n      }).then(() => {\r\n        this.fetchOrders();\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchOrders();\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";mBAAA;mBAAA;;;uBACEA,mBAAA,CAWM,c,0BAVJC,mBAAA,CAAmB,YAAf,YAAU,sBACdA,mBAAA,CAA4C;IAAnCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;KAAE,WAAS,GACnCH,mBAAA,CAMK,c,kBALHD,mBAAA,CAIKO,SAAA,QATXC,WAAA,CAK0BC,KAAA,CAAAC,MAAM,EAAfC,KAAK;yBAAhBX,mBAAA,CAIK;MAJwBY,GAAG,EAAED,KAAK,CAACE;QAL9CC,gBAAA,CAAAC,gBAAA,CAMWJ,KAAK,CAACK,WAAW,IAAG,KAAG,GAAAD,gBAAA,CAAGJ,KAAK,CAACM,WAAW,IAAG,KAAG,GAAAF,gBAAA,CAAGJ,KAAK,CAACO,WAAW,IAAG,GAC3E,iBAAAjB,mBAAA,CAA+C;MAAtCC,OAAK,EAAAiB,MAAA,IAAEd,QAAA,CAAAe,SAAS,CAACT,KAAK;OAAG,MAAI,iBAP9CU,UAAA,GAQQpB,mBAAA,CAA2D;MAAlDC,OAAK,EAAAiB,MAAA,IAAEd,QAAA,CAAAiB,WAAW,CAACX,KAAK,CAACE,OAAO;OAAG,QAAM,iBAR1DU,UAAA,E;oCAWqBd,KAAA,CAAAe,aAAa,I,cAA9BC,YAAA,CAA8GC,oBAAA;IAXlHd,GAAA;IAWqCe,OAAK,EAAAxB,MAAA,QAAAA,MAAA,MAAAgB,MAAA,IAAEV,KAAA,CAAAe,aAAa;IAAWb,KAAK,EAAEF,KAAA,CAAAmB,aAAa;IAAGC,SAAO,EAAExB,QAAA,CAAAyB;qDAXpGC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}