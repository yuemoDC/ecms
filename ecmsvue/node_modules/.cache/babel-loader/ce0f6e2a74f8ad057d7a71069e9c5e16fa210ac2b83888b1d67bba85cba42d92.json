{"ast":null,"code":"// 导入导航栏组件\nimport AppNavbar from '../components/Navbar.vue';\nexport default {\n  // 组件名称\n  name: 'HomePage',\n  // 注册使用的组件\n  components: {\n    AppNavbar\n  },\n  // 数据属性\n  data() {\n    return {\n      // 当前用户信息\n      currentUser: null\n    };\n  },\n  // 生命周期钩子：在实例创建完成后调用\n  created() {\n    // 获取当前用户信息\n    this.getCurrentUser();\n  },\n  // 方法\n  methods: {\n    // 获取当前用户信息的方法\n    getCurrentUser() {\n      // 从localStorage中获取用户信息\n      const userData = localStorage.getItem('user');\n      if (userData) {\n        try {\n          // 解析用户信息\n          const parsedUser = JSON.parse(userData);\n          // 检查解析后的用户信息是否包含必要的字段\n          if (parsedUser && parsedUser.id && parsedUser.username) {\n            // 设置当前用户信息\n            this.currentUser = {\n              id: parsedUser.id,\n              username: parsedUser.username\n            };\n          } else {\n            // 如果用户信息不完整，输出错误信息\n            console.error('用户信息不完整:', parsedUser);\n          }\n        } catch (e) {\n          // 如果解析失败，输出错误信息\n          console.error('解析用户信息失败:', e);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["AppNavbar","name","components","data","currentUser","created","getCurrentUser","methods","userData","localStorage","getItem","parsedUser","JSON","parse","id","username","console","error","e"],"sources":["D:\\code_new\\ecms\\ecmsvue\\src\\views\\Home.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 导航栏组件 -->\n    <AppNavbar />\n    <div class=\"home-container\">\n      <h1>欢迎来到首页!</h1>\n      <div class=\"user-info\">\n        <!-- 如果当前用户存在，则显示用户ID和用户名 -->\n        <el-tag type=\"success\" v-if=\"currentUser\">\n          当前用户ID: {{ currentUser.id }}<br>\n          用户名: {{ currentUser.username }}\n        </el-tag>\n        <!-- 如果当前用户不存在，则显示未登录提示 -->\n        <el-tag type=\"info\" v-else>\n          未登录\n        </el-tag>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// 导入导航栏组件\nimport AppNavbar from '../components/Navbar.vue';\n\nexport default {\n  // 组件名称\n  name: 'HomePage',\n  // 注册使用的组件\n  components: {\n    AppNavbar\n  },\n  // 数据属性\n  data() {\n    return {\n      // 当前用户信息\n      currentUser: null\n    }\n  },\n  // 生命周期钩子：在实例创建完成后调用\n  created() {\n    // 获取当前用户信息\n    this.getCurrentUser();\n  },\n  // 方法\n  methods: {\n    // 获取当前用户信息的方法\n    getCurrentUser() {\n      // 从localStorage中获取用户信息\n      const userData = localStorage.getItem('user');\n      if (userData) {\n        try {\n          // 解析用户信息\n          const parsedUser = JSON.parse(userData);\n          // 检查解析后的用户信息是否包含必要的字段\n          if (parsedUser && parsedUser.id && parsedUser.username) {\n            // 设置当前用户信息\n            this.currentUser = {\n              id: parsedUser.id,\n              username: parsedUser.username\n            };\n          } else {\n            // 如果用户信息不完整，输出错误信息\n            console.error('用户信息不完整:', parsedUser);\n          }\n        } catch (e) {\n          // 如果解析失败，输出错误信息\n          console.error('解析用户信息失败:', e);\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* 首页容器样式 */\n.home-container {\n  position: relative;\n  padding: 20px;\n}\n\n/* 用户信息样式 */\n.user-info {\n  position: absolute;\n  top: 20px;\n  right: 20px;\n}\n\n/* 响应式设计：屏幕宽度小于768px时的样式 */\n@media (max-width: 768px) {\n  .user-info {\n    position: static;\n    margin-top: 20px;\n    text-align: center;\n  }\n}\n</style>"],"mappings":"AAsBA;AACA,OAAOA,SAAQ,MAAO,0BAA0B;AAEhD,eAAe;EACb;EACAC,IAAI,EAAE,UAAU;EAChB;EACAC,UAAU,EAAE;IACVF;EACF,CAAC;EACD;EACAG,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,WAAW,EAAE;IACf;EACF,CAAC;EACD;EACAC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACD;EACAC,OAAO,EAAE;IACP;IACAD,cAAcA,CAAA,EAAG;MACf;MACA,MAAME,QAAO,GAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAC7C,IAAIF,QAAQ,EAAE;QACZ,IAAI;UACF;UACA,MAAMG,UAAS,GAAIC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC;UACvC;UACA,IAAIG,UAAS,IAAKA,UAAU,CAACG,EAAC,IAAKH,UAAU,CAACI,QAAQ,EAAE;YACtD;YACA,IAAI,CAACX,WAAU,GAAI;cACjBU,EAAE,EAAEH,UAAU,CAACG,EAAE;cACjBC,QAAQ,EAAEJ,UAAU,CAACI;YACvB,CAAC;UACH,OAAO;YACL;YACAC,OAAO,CAACC,KAAK,CAAC,UAAU,EAAEN,UAAU,CAAC;UACvC;QACF,EAAE,OAAOO,CAAC,EAAE;UACV;UACAF,OAAO,CAACC,KAAK,CAAC,WAAW,EAAEC,CAAC,CAAC;QAC/B;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}