{"ast":null,"code":"import { ref, reactive, onMounted, onUnmounted, nextTick } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport { Refresh } from '@element-plus/icons-vue';\nimport * as echarts from 'echarts';\nimport axios from 'axios';\nexport default {\n  name: 'AdminDataVisualizationView',\n  components: {\n    Refresh\n  },\n  setup() {\n    const selectedChart = ref('salesTrend');\n    const salesTrendChart = ref(null);\n    const merchantRankingChart = ref(null);\n    const productRankingChart = ref(null);\n    const regionalDistributionChart = ref(null);\n    const orderStatusDistributionChart = ref(null);\n    let salesTrendChartInstance = null;\n    let merchantRankingChartInstance = null;\n    let productRankingChartInstance = null;\n    let regionalDistributionChartInstance = null;\n    let orderStatusDistributionChartInstance = null;\n    const loading = reactive({\n      dashboard: false,\n      salesTrend: false,\n      merchantRanking: false,\n      productRanking: false,\n      regionalDistribution: false,\n      orderStatusDistribution: false\n    });\n    const timeFilter = ref('monthly');\n    const salesOverview = reactive({\n      totalSales: 0,\n      totalOrders: 0,\n      avgOrderValue: 0,\n      pendingOrders: 0,\n      completedOrders: 0,\n      recentSales: 0,\n      merchantCount: 0,\n      activeMerchantCount: 0\n    });\n    const initCharts = () => {\n      salesTrendChartInstance = echarts.init(salesTrendChart.value);\n      merchantRankingChartInstance = echarts.init(merchantRankingChart.value);\n      productRankingChartInstance = echarts.init(productRankingChart.value);\n      regionalDistributionChartInstance = echarts.init(regionalDistributionChart.value);\n      orderStatusDistributionChartInstance = echarts.init(orderStatusDistributionChart.value);\n      window.addEventListener('resize', handleResize);\n    };\n    const handleResize = () => {\n      salesTrendChartInstance && salesTrendChartInstance.resize();\n      merchantRankingChartInstance && merchantRankingChartInstance.resize();\n      productRankingChartInstance && productRankingChartInstance.resize();\n      regionalDistributionChartInstance && regionalDistributionChartInstance.resize();\n      orderStatusDistributionChartInstance && orderStatusDistributionChartInstance.resize();\n    };\n    const fetchDashboardData = async () => {\n      try {\n        loading.dashboard = true;\n        const response = await axios.get(`http://localhost:8080/api/admin/data-visualization/dashboard?period=${timeFilter.value}`);\n        const dashboardData = response.data;\n        Object.assign(salesOverview, dashboardData.salesOverview);\n        renderCharts(dashboardData);\n      } catch (error) {\n        console.error('获取仪表板数据失败', error);\n        ElMessage.error('获取仪表板数据失败');\n      } finally {\n        loading.dashboard = false;\n      }\n    };\n    const renderCharts = data => {\n      renderSalesTrendChart(data.salesTrend);\n      renderMerchantRankingChart(data.merchantRanking);\n      renderProductRankingChart(data.productRanking);\n      renderRegionalDistributionChart(data.regionalDistribution);\n      renderOrderStatusDistributionChart(data.orderStatusDistribution);\n    };\n    const updateVisibleChart = () => {\n      // Placeholder function to handle chart visibility\n    };\n\n    // Other chart rendering functions as before (renderSalesTrendChart, etc.)\n\n    onMounted(async () => {\n      await nextTick();\n      initCharts();\n      fetchDashboardData();\n    });\n    onUnmounted(() => {\n      salesTrendChartInstance && salesTrendChartInstance.dispose();\n      merchantRankingChartInstance && merchantRankingChartInstance.dispose();\n      productRankingChartInstance && productRankingChartInstance.dispose();\n      regionalDistributionChartInstance && regionalDistributionChartInstance.dispose();\n      orderStatusDistributionChartInstance && orderStatusDistributionChartInstance.dispose();\n      window.removeEventListener('resize', handleResize);\n    });\n    return {\n      selectedChart,\n      salesTrendChart,\n      merchantRankingChart,\n      productRankingChart,\n      regionalDistributionChart,\n      orderStatusDistributionChart,\n      loading,\n      timeFilter,\n      salesOverview,\n      fetchDashboardData,\n      formatCurrency\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","onUnmounted","nextTick","ElMessage","Refresh","echarts","axios","name","components","setup","selectedChart","salesTrendChart","merchantRankingChart","productRankingChart","regionalDistributionChart","orderStatusDistributionChart","salesTrendChartInstance","merchantRankingChartInstance","productRankingChartInstance","regionalDistributionChartInstance","orderStatusDistributionChartInstance","loading","dashboard","salesTrend","merchantRanking","productRanking","regionalDistribution","orderStatusDistribution","timeFilter","salesOverview","totalSales","totalOrders","avgOrderValue","pendingOrders","completedOrders","recentSales","merchantCount","activeMerchantCount","initCharts","init","value","window","addEventListener","handleResize","resize","fetchDashboardData","response","get","dashboardData","data","Object","assign","renderCharts","error","console","renderSalesTrendChart","renderMerchantRankingChart","renderProductRankingChart","renderRegionalDistributionChart","renderOrderStatusDistributionChart","updateVisibleChart","dispose","removeEventListener","formatCurrency"],"sources":["E:\\shixun\\420\\ecms\\ecmsvue\\src\\views\\AdminDataVisualizationView.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-visualization-view\">\r\n    <div class=\"view-header\">\r\n      <el-breadcrumb separator=\"/\">\r\n        <el-breadcrumb-item :to=\"{ path: '/admin' }\">首页</el-breadcrumb-item>\r\n        <el-breadcrumb-item>数据分析</el-breadcrumb-item>\r\n        <el-breadcrumb-item>平台数据可视化</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n      <h2>平台数据可视化</h2>\r\n    </div>\r\n\r\n    <div class=\"admin-visualization-dashboard\">\r\n      <div class=\"dashboard-header\">\r\n        <h1>平台数据分析仪表板</h1>\r\n\r\n        <div class=\"toolbar\">\r\n          <el-select v-model=\"timeFilter\" placeholder=\"选择时间周期\" @change=\"fetchDashboardData\">\r\n            <el-option label=\"每日\" value=\"daily\"></el-option>\r\n            <el-option label=\"每周\" value=\"weekly\"></el-option>\r\n            <el-option label=\"每月\" value=\"monthly\"></el-option>\r\n          </el-select>\r\n\r\n          <el-button type=\"primary\" @click=\"fetchDashboardData\" :loading=\"loading.dashboard\">\r\n            <el-icon><Refresh /></el-icon> 刷新数据\r\n          </el-button>\r\n\r\n          <el-select v-model=\"selectedChart\" placeholder=\"选择查看的图表\" @change=\"updateVisibleChart\">\r\n            <el-option label=\"平台销售趋势\" value=\"salesTrend\"></el-option>\r\n            <el-option label=\"商家销售排行\" value=\"merchantRanking\"></el-option>\r\n            <el-option label=\"产品销售排行\" value=\"productRanking\"></el-option>\r\n            <el-option label=\"区域销售分布\" value=\"regionalDistribution\"></el-option>\r\n            <el-option label=\"订单状态分布\" value=\"orderStatusDistribution\"></el-option>\r\n          </el-select>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 销售概览卡片 -->\r\n      <el-row :gutter=\"20\" class=\"dashboard-cards\">\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>总销售额</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2>{{ formatCurrency(salesOverview.totalSales) }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>总订单数</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2>{{ salesOverview.totalOrders || 0 }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>平均订单金额</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2>{{ formatCurrency(salesOverview.avgOrderValue) }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>最近30天销售额</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2>{{ formatCurrency(salesOverview.recentSales) }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>商家总数</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2>{{ salesOverview.merchantCount || 0 }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>活跃商家</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2>{{ salesOverview.activeMerchantCount || 0 }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 图表区域 -->\r\n      <el-row :gutter=\"20\" class=\"dashboard-charts\">\r\n        <!-- Show selected chart based on `selectedChart` -->\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\" v-if=\"selectedChart === 'salesTrend'\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>平台销售趋势</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.salesTrend\">\r\n              <div ref=\"salesTrendChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\" v-if=\"selectedChart === 'merchantRanking'\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>商家销售排行</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.merchantRanking\">\r\n              <div ref=\"merchantRankingChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\" v-if=\"selectedChart === 'productRanking'\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>产品销售排行</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.productRanking\">\r\n              <div ref=\"productRankingChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\" v-if=\"selectedChart === 'regionalDistribution'\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>区域销售分布</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.regionalDistribution\">\r\n              <div ref=\"regionalDistributionChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\" v-if=\"selectedChart === 'orderStatusDistribution'\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>订单状态分布</span>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.orderStatusDistribution\">\r\n              <div ref=\"orderStatusDistributionChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted, onUnmounted, nextTick } from 'vue';\r\nimport { ElMessage } from 'element-plus';\r\nimport { Refresh } from '@element-plus/icons-vue';\r\nimport * as echarts from 'echarts';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'AdminDataVisualizationView',\r\n  components: {\r\n    Refresh\r\n  },\r\n  setup() {\r\n    const selectedChart = ref('salesTrend');\r\n\r\n    const salesTrendChart = ref(null);\r\n    const merchantRankingChart = ref(null);\r\n    const productRankingChart = ref(null);\r\n    const regionalDistributionChart = ref(null);\r\n    const orderStatusDistributionChart = ref(null);\r\n\r\n    let salesTrendChartInstance = null;\r\n    let merchantRankingChartInstance = null;\r\n    let productRankingChartInstance = null;\r\n    let regionalDistributionChartInstance = null;\r\n    let orderStatusDistributionChartInstance = null;\r\n\r\n    const loading = reactive({\r\n      dashboard: false,\r\n      salesTrend: false,\r\n      merchantRanking: false,\r\n      productRanking: false,\r\n      regionalDistribution: false,\r\n      orderStatusDistribution: false\r\n    });\r\n\r\n    const timeFilter = ref('monthly');\r\n    const salesOverview = reactive({\r\n      totalSales: 0,\r\n      totalOrders: 0,\r\n      avgOrderValue: 0,\r\n      pendingOrders: 0,\r\n      completedOrders: 0,\r\n      recentSales: 0,\r\n      merchantCount: 0,\r\n      activeMerchantCount: 0\r\n    });\r\n\r\n    const initCharts = () => {\r\n      salesTrendChartInstance = echarts.init(salesTrendChart.value);\r\n      merchantRankingChartInstance = echarts.init(merchantRankingChart.value);\r\n      productRankingChartInstance = echarts.init(productRankingChart.value);\r\n      regionalDistributionChartInstance = echarts.init(regionalDistributionChart.value);\r\n      orderStatusDistributionChartInstance = echarts.init(orderStatusDistributionChart.value);\r\n      window.addEventListener('resize', handleResize);\r\n    };\r\n\r\n    const handleResize = () => {\r\n      salesTrendChartInstance && salesTrendChartInstance.resize();\r\n      merchantRankingChartInstance && merchantRankingChartInstance.resize();\r\n      productRankingChartInstance && productRankingChartInstance.resize();\r\n      regionalDistributionChartInstance && regionalDistributionChartInstance.resize();\r\n      orderStatusDistributionChartInstance && orderStatusDistributionChartInstance.resize();\r\n    };\r\n\r\n    const fetchDashboardData = async () => {\r\n      try {\r\n        loading.dashboard = true;\r\n        const response = await axios.get(`http://localhost:8080/api/admin/data-visualization/dashboard?period=${timeFilter.value}`);\r\n        const dashboardData = response.data;\r\n        Object.assign(salesOverview, dashboardData.salesOverview);\r\n        renderCharts(dashboardData);\r\n      } catch (error) {\r\n        console.error('获取仪表板数据失败', error);\r\n        ElMessage.error('获取仪表板数据失败');\r\n      } finally {\r\n        loading.dashboard = false;\r\n      }\r\n    };\r\n\r\n    const renderCharts = (data) => {\r\n      renderSalesTrendChart(data.salesTrend);\r\n      renderMerchantRankingChart(data.merchantRanking);\r\n      renderProductRankingChart(data.productRanking);\r\n      renderRegionalDistributionChart(data.regionalDistribution);\r\n      renderOrderStatusDistributionChart(data.orderStatusDistribution);\r\n    };\r\n\r\n    const updateVisibleChart = () => {\r\n      // Placeholder function to handle chart visibility\r\n    };\r\n\r\n    // Other chart rendering functions as before (renderSalesTrendChart, etc.)\r\n\r\n    onMounted(async () => {\r\n      await nextTick();\r\n      initCharts();\r\n      fetchDashboardData();\r\n    });\r\n\r\n    onUnmounted(() => {\r\n      salesTrendChartInstance && salesTrendChartInstance.dispose();\r\n      merchantRankingChartInstance && merchantRankingChartInstance.dispose();\r\n      productRankingChartInstance && productRankingChartInstance.dispose();\r\n      regionalDistributionChartInstance && regionalDistributionChartInstance.dispose();\r\n      orderStatusDistributionChartInstance && orderStatusDistributionChartInstance.dispose();\r\n      window.removeEventListener('resize', handleResize);\r\n    });\r\n\r\n    return {\r\n      selectedChart,\r\n      salesTrendChart,\r\n      merchantRankingChart,\r\n      productRankingChart,\r\n      regionalDistributionChart,\r\n      orderStatusDistributionChart,\r\n      loading,\r\n      timeFilter,\r\n      salesOverview,\r\n      fetchDashboardData,\r\n      formatCurrency\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.admin-visualization-view {\r\n  padding: 20px;\r\n}\r\n\r\n.view-header {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.view-header h2 {\r\n  margin-top: 10px;\r\n}\r\n\r\n.admin-visualization-dashboard {\r\n  padding: 20px;\r\n}\r\n\r\n.dashboard-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.toolbar {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.dashboard-cards {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.data-card {\r\n  margin-bottom: 20px;\r\n  height: 100%;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.card-content {\r\n  text-align: center;\r\n  padding: 10px 0;\r\n}\r\n\r\n.chart-card {\r\n  margin-bottom: 20px;\r\n  height: 100%;\r\n}\r\n\r\n.chart-container {\r\n  height: 350px;\r\n  width: 100%;\r\n}\r\n\r\n.chart {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n.dashboard-charts {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}