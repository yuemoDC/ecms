{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { ref, computed, onUnmounted, nextTick } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { Loading } from '@element-plus/icons-vue';\nimport * as echarts from 'echarts';\nimport axios from 'axios';\n\n// 数据状态\n\nexport default {\n  __name: 'SalesTrendAnalysis',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const selectedMerchantId = ref(null);\n    const loading = ref(false);\n    const analysisData = ref(null);\n    const chartType = ref('line');\n\n    // 商家列表（实际应用中应从API获取）\n    const merchants = ref([{\n      id: 1,\n      name: '商家A'\n    }, {\n      id: 2,\n      name: '商家B'\n    }, {\n      id: 3,\n      name: '商家C'\n    }]);\n\n    // DOM引用\n    const salesChartRef = ref(null);\n    const peakAnalysisRef = ref(null);\n    let salesChart = null;\n    let peakChart = null;\n\n    // 加载销售趋势数据\n    const loadSalesTrendData = async () => {\n      if (!selectedMerchantId.value) {\n        ElMessage.warning('请先选择商家');\n        return;\n      }\n      loading.value = true;\n      try {\n        const response = await axios.get(`http://localhost:8080/api/data-analysis/sales-trend/${selectedMerchantId.value}`);\n        analysisData.value = response.data;\n        nextTick(() => {\n          renderSalesChart();\n          renderPeakAnalysisChart();\n        });\n      } catch (error) {\n        console.error('加载数据失败:', error);\n        ElMessage.error('加载数据失败，请稍后重试');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 渲染销售趋势图表\n    const renderSalesChart = () => {\n      if (!salesChartRef.value) return;\n      if (salesChart) {\n        salesChart.dispose();\n      }\n      salesChart = echarts.init(salesChartRef.value);\n      const salesData = analysisData.value.monthlySales;\n      const option = {\n        title: {\n          text: '月度销售趋势',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis',\n          formatter: params => {\n            const param = params[0];\n            const growthData = analysisData.value.growthRates.find(g => g.month === param.name);\n            let tooltip = `${param.name}<br/>销售额: ￥${param.value.toFixed(2)}`;\n            if (growthData) {\n              tooltip += `<br/>环比增长: ${growthData.growthRate}%`;\n            }\n            return tooltip;\n          }\n        },\n        toolbox: {\n          feature: {\n            dataZoom: {\n              show: true\n            },\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        xAxis: {\n          type: 'category',\n          data: Object.keys(salesData),\n          axisLabel: {\n            rotate: 45\n          }\n        },\n        yAxis: {\n          type: 'value',\n          axisLabel: {\n            formatter: '￥{value}'\n          }\n        },\n        series: [{\n          data: Object.values(salesData),\n          type: chartType.value,\n          smooth: true,\n          areaStyle: chartType.value === 'area' ? {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: 'rgba(64, 158, 255, 0.3)'\n            }, {\n              offset: 1,\n              color: 'rgba(64, 158, 255, 0.1)'\n            }])\n          } : null,\n          itemStyle: {\n            color: '#409EFF'\n          },\n          label: {\n            show: chartType.value === 'bar',\n            position: 'top',\n            formatter: params => `￥${params.value.toFixed(0)}`\n          }\n        }]\n      };\n      salesChart.setOption(option);\n\n      // 监听窗口大小变化\n      window.addEventListener('resize', () => {\n        salesChart.resize();\n      });\n    };\n\n    // 渲染峰谷分析图表\n    const renderPeakAnalysisChart = () => {\n      if (!peakAnalysisRef.value) return;\n      if (peakChart) {\n        peakChart.dispose();\n      }\n      peakChart = echarts.init(peakAnalysisRef.value);\n      const highest = getHighestSalesMonth();\n      const lowest = getLowestSalesMonth();\n      const option = {\n        title: {\n          text: '销售峰谷对比',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{b}: ￥{c}'\n        },\n        legend: {\n          bottom: 0\n        },\n        series: [{\n          type: 'pie',\n          radius: ['40%', '70%'],\n          avoidLabelOverlap: false,\n          itemStyle: {\n            borderRadius: 10,\n            borderColor: '#fff',\n            borderWidth: 2\n          },\n          label: {\n            show: true,\n            formatter: '{b}: {d}%'\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: '16',\n              fontWeight: 'bold'\n            }\n          },\n          data: [{\n            value: highest.sales,\n            name: `最高(${highest.month})`,\n            itemStyle: {\n              color: '#67C23A'\n            }\n          }, {\n            value: lowest.sales,\n            name: `最低(${lowest.month})`,\n            itemStyle: {\n              color: '#F56C6C'\n            }\n          }, {\n            value: analysisData.value.avgMonthlySales,\n            name: '平均值',\n            itemStyle: {\n              color: '#409EFF'\n            }\n          }]\n        }]\n      };\n      peakChart.setOption(option);\n      window.addEventListener('resize', () => {\n        peakChart.resize();\n      });\n    };\n\n    // 更新图表类型\n    const updateChart = () => {\n      renderSalesChart();\n    };\n\n    // 获取最新增长率\n    const latestGrowth = computed(() => {\n      if (!analysisData.value || !analysisData.value.growthRates.length) {\n        return {\n          month: '-',\n          growthRate: 0\n        };\n      }\n      return analysisData.value.growthRates[analysisData.value.growthRates.length - 1];\n    });\n\n    // 获取最高销售月份\n    const getHighestSalesMonth = () => {\n      if (!analysisData.value) return {\n        month: '-',\n        sales: 0\n      };\n      const entries = Object.entries(analysisData.value.monthlySales);\n      const [month, sales] = entries.reduce((max, current) => current[1] > max[1] ? current : max);\n      return {\n        month,\n        sales\n      };\n    };\n\n    // 获取最低销售月份\n    const getLowestSalesMonth = () => {\n      if (!analysisData.value) return {\n        month: '-',\n        sales: 0\n      };\n      const entries = Object.entries(analysisData.value.monthlySales);\n      const [month, sales] = entries.reduce((min, current) => current[1] < min[1] ? current : min);\n      return {\n        month,\n        sales\n      };\n    };\n\n    // 获取总体趋势类型\n    const getOverallTrendType = () => {\n      if (!analysisData.value || !analysisData.value.growthRates.length) return 'info';\n      const avgGrowth = analysisData.value.growthRates.reduce((sum, item) => sum + item.growthRate, 0) / analysisData.value.growthRates.length;\n      if (avgGrowth > 5) return 'success';\n      if (avgGrowth < -5) return 'danger';\n      return 'warning';\n    };\n\n    // 获取总体趋势文本\n    const getOverallTrendText = () => {\n      if (!analysisData.value || !analysisData.value.growthRates.length) return '无数据';\n      const avgGrowth = analysisData.value.growthRates.reduce((sum, item) => sum + item.growthRate, 0) / analysisData.value.growthRates.length;\n      if (avgGrowth > 5) return '强势增长';\n      if (avgGrowth > 0) return '稳定增长';\n      if (avgGrowth > -5) return '略有下降';\n      return '明显下降';\n    };\n\n    // 计算波动系数\n    const calculateVolatility = () => {\n      if (!analysisData.value) return 0;\n      const salesValues = Object.values(analysisData.value.monthlySales);\n      const avg = salesValues.reduce((sum, val) => sum + val, 0) / salesValues.length;\n      const variance = salesValues.reduce((sum, val) => sum + Math.pow(val - avg, 2), 0) / salesValues.length;\n      const stdDev = Math.sqrt(variance);\n      return (stdDev / avg * 100).toFixed(2);\n    };\n\n    // 格式化文本\n    const formatText = text => {\n      return text.replace(/\\n/g, '<br>');\n    };\n\n    // 复制文本\n    const copyText = async text => {\n      try {\n        await navigator.clipboard.writeText(text);\n        ElMessage.success('复制成功');\n      } catch (err) {\n        console.error('复制失败:', err);\n        ElMessage.error('复制失败，请手动复制');\n      }\n    };\n\n    // 导出数据\n    const exportData = () => {\n      ElMessageBox.confirm('是否导出销售趋势分析报告？', '导出确认', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'info'\n      }).then(() => {\n        // 准备导出数据\n        const exportContent = {\n          merchantId: selectedMerchantId.value,\n          date: new Date().toLocaleDateString(),\n          data: analysisData.value\n        };\n\n        // 创建下载链接\n        const blob = new Blob([JSON.stringify(exportContent, null, 2)], {\n          type: 'application/json'\n        });\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `销售趋势分析报告_${selectedMerchantId.value}_${new Date().toISOString().split('T')[0]}.json`;\n        link.click();\n        window.URL.revokeObjectURL(url);\n        ElMessage.success('导出成功');\n      }).catch(() => {\n        // 取消导出\n      });\n    };\n\n    // 组件卸载时清理\n    onUnmounted(() => {\n      if (salesChart) {\n        salesChart.dispose();\n      }\n      if (peakChart) {\n        peakChart.dispose();\n      }\n    });\n    const __returned__ = {\n      selectedMerchantId,\n      loading,\n      analysisData,\n      chartType,\n      merchants,\n      salesChartRef,\n      peakAnalysisRef,\n      get salesChart() {\n        return salesChart;\n      },\n      set salesChart(v) {\n        salesChart = v;\n      },\n      get peakChart() {\n        return peakChart;\n      },\n      set peakChart(v) {\n        peakChart = v;\n      },\n      loadSalesTrendData,\n      renderSalesChart,\n      renderPeakAnalysisChart,\n      updateChart,\n      latestGrowth,\n      getHighestSalesMonth,\n      getLowestSalesMonth,\n      getOverallTrendType,\n      getOverallTrendText,\n      calculateVolatility,\n      formatText,\n      copyText,\n      exportData,\n      ref,\n      computed,\n      onUnmounted,\n      nextTick,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get Loading() {\n        return Loading;\n      },\n      get echarts() {\n        return echarts;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onUnmounted","nextTick","ElMessage","ElMessageBox","Loading","echarts","axios","selectedMerchantId","loading","analysisData","chartType","merchants","id","name","salesChartRef","peakAnalysisRef","salesChart","peakChart","loadSalesTrendData","value","warning","response","get","data","renderSalesChart","renderPeakAnalysisChart","error","console","dispose","init","salesData","monthlySales","option","title","text","left","tooltip","trigger","formatter","params","param","growthData","growthRates","find","g","month","toFixed","growthRate","toolbox","feature","dataZoom","show","restore","saveAsImage","xAxis","type","Object","keys","axisLabel","rotate","yAxis","series","values","smooth","areaStyle","color","graphic","LinearGradient","offset","itemStyle","label","position","setOption","window","addEventListener","resize","highest","getHighestSalesMonth","lowest","getLowestSalesMonth","legend","bottom","radius","avoidLabelOverlap","borderRadius","borderColor","borderWidth","emphasis","fontSize","fontWeight","sales","avgMonthlySales","updateChart","latestGrowth","length","entries","reduce","max","current","min","getOverallTrendType","avgGrowth","sum","item","getOverallTrendText","calculateVolatility","salesValues","avg","val","variance","Math","pow","stdDev","sqrt","formatText","replace","copyText","navigator","clipboard","writeText","success","err","exportData","confirm","confirmButtonText","cancelButtonText","then","exportContent","merchantId","date","Date","toLocaleDateString","blob","Blob","JSON","stringify","url","URL","createObjectURL","link","document","createElement","href","download","toISOString","split","click","revokeObjectURL","catch"],"sources":["E:/shixun/420/ecms/ecmsvue/src/views/SalesTrendAnalysis.vue"],"sourcesContent":["<template>\r\n  <div class=\"sales-trend-analysis\">\r\n    <!-- 头部控制区域 -->\r\n    <el-card class=\"mb-4\">\r\n      <div class=\"header\">\r\n        <h3>销售趋势分析</h3>\r\n        <div class=\"controls\">\r\n          <el-select\r\n              v-model=\"selectedMerchantId\"\r\n              placeholder=\"选择商家\"\r\n              @change=\"loadSalesTrendData\"\r\n              style=\"width: 200px; margin-right: 10px\"\r\n          >\r\n            <el-option\r\n                v-for=\"merchant in merchants\"\r\n                :key=\"merchant.id\"\r\n                :label=\"merchant.name\"\r\n                :value=\"merchant.id\"\r\n            />\r\n          </el-select>\r\n          <el-button\r\n              type=\"primary\"\r\n              @click=\"loadSalesTrendData\"\r\n              :loading=\"loading\"\r\n              :disabled=\"!selectedMerchantId\"\r\n          >\r\n            分析数据\r\n          </el-button>\r\n          <el-button\r\n              type=\"success\"\r\n              @click=\"exportData\"\r\n              :disabled=\"!analysisData\"\r\n          >\r\n            导出报告\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 主要数据展示区域 -->\r\n    <div v-if=\"analysisData\">\r\n      <!-- 关键指标 -->\r\n      <el-row :gutter=\"20\" class=\"metrics-row\">\r\n        <el-col :span=\"6\">\r\n          <el-card shadow=\"hover\">\r\n            <el-statistic title=\"总销售额\" :value=\"analysisData.totalSales\" prefix=\"￥\" :precision=\"2\" />\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-card shadow=\"hover\">\r\n            <el-statistic title=\"平均月销售额\" :value=\"analysisData.avgMonthlySales\" prefix=\"￥\" :precision=\"2\" />\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-card shadow=\"hover\">\r\n            <el-statistic\r\n                :title=\"latestGrowth.month + ' 环比增长'\"\r\n                :value=\"latestGrowth.growthRate\"\r\n                suffix=\"%\"\r\n                :precision=\"2\"\r\n                :value-style=\"{ color: latestGrowth.growthRate > 0 ? '#67C23A' : '#F56C6C' }\"\r\n            />\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-card shadow=\"hover\">\r\n            <el-statistic title=\"数据月份数\" :value=\"Object.keys(analysisData.monthlySales).length\" />\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 图表区域 -->\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"16\">\r\n          <el-card>\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>销售趋势图表</span>\r\n                <el-radio-group v-model=\"chartType\" @change=\"updateChart\">\r\n                  <el-radio-button label=\"line\">折线图</el-radio-button>\r\n                  <el-radio-button label=\"bar\">柱状图</el-radio-button>\r\n                  <el-radio-button label=\"area\">面积图</el-radio-button>\r\n                </el-radio-group>\r\n              </div>\r\n            </template>\r\n            <div ref=\"salesChartRef\" style=\"height: 400px;\"></div>\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"8\">\r\n          <el-card>\r\n            <template #header>\r\n              <span>月度增长率</span>\r\n            </template>\r\n            <el-table\r\n                :data=\"analysisData.growthRates\"\r\n                style=\"width: 100%\"\r\n                max-height=\"400\"\r\n                highlight-current-row\r\n            >\r\n              <el-table-column prop=\"month\" label=\"月份\" width=\"120\" />\r\n              <el-table-column prop=\"sales\" label=\"销售额\">\r\n                <template #default=\"scope\">\r\n                  ￥{{ scope.row.sales.toFixed(2) }}\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"growthRate\" label=\"环比增长\">\r\n                <template #default=\"scope\">\r\n                  <el-tag\r\n                      :type=\"scope.row.growthRate > 0 ? 'success' : (scope.row.growthRate < 0 ? 'danger' : 'info')\"\r\n                      effect=\"dark\"\r\n                  >\r\n                    {{ scope.row.growthRate > 0 ? '+' : '' }}{{ scope.row.growthRate }}%\r\n                  </el-tag>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 分析洞察与建议 -->\r\n      <el-row :gutter=\"20\" class=\"mt-4\">\r\n        <el-col :span=\"12\">\r\n          <el-card>\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>销售趋势洞察</span>\r\n                <el-button type=\"text\" @click=\"copyText(analysisData.insights)\" icon=\"CopyDocument\">复制</el-button>\r\n              </div>\r\n            </template>\r\n            <div class=\"insight-content\" v-html=\"formatText(analysisData.insights)\"></div>\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"12\">\r\n          <el-card>\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>行动建议</span>\r\n                <el-button type=\"text\" @click=\"copyText(analysisData.recommendations)\" icon=\"CopyDocument\">复制</el-button>\r\n              </div>\r\n            </template>\r\n            <div class=\"recommendation-content\" v-html=\"formatText(analysisData.recommendations)\"></div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 销售峰谷分析 -->\r\n      <el-card class=\"mt-4\">\r\n        <template #header>\r\n          <span>销售峰谷分析</span>\r\n        </template>\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"8\">\r\n            <div ref=\"peakAnalysisRef\" style=\"height: 300px;\"></div>\r\n          </el-col>\r\n          <el-col :span=\"16\">\r\n            <el-descriptions :column=\"2\" border>\r\n              <el-descriptions-item label=\"销售高峰月份\">\r\n                {{ getHighestSalesMonth().month }}\r\n              </el-descriptions-item>\r\n              <el-descriptions-item label=\"最高销售额\">\r\n                ￥{{ getHighestSalesMonth().sales.toFixed(2) }}\r\n              </el-descriptions-item>\r\n              <el-descriptions-item label=\"销售低谷月份\">\r\n                {{ getLowestSalesMonth().month }}\r\n              </el-descriptions-item>\r\n              <el-descriptions-item label=\"最低销售额\">\r\n                ￥{{ getLowestSalesMonth().sales.toFixed(2) }}\r\n              </el-descriptions-item>\r\n              <el-descriptions-item label=\"总体趋势\">\r\n                <el-tag :type=\"getOverallTrendType()\">\r\n                  {{ getOverallTrendText() }}\r\n                </el-tag>\r\n              </el-descriptions-item>\r\n              <el-descriptions-item label=\"波动系数\">\r\n                {{ calculateVolatility() }}%\r\n              </el-descriptions-item>\r\n            </el-descriptions>\r\n          </el-col>\r\n        </el-row>\r\n      </el-card>\r\n    </div>\r\n\r\n    <!-- 加载状态 -->\r\n    <div v-else-if=\"loading\" class=\"loading-container\">\r\n      <el-card>\r\n        <div style=\"text-align: center; padding: 50px;\">\r\n          <el-icon class=\"is-loading\" size=\"40px\" color=\"#409EFF\">\r\n            <Loading />\r\n          </el-icon>\r\n          <p>正在分析销售数据...</p>\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n\r\n    <!-- 空状态 -->\r\n    <div v-else class=\"empty-container\">\r\n      <el-empty description=\"请选择商家开始分析\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {ref, computed, onUnmounted, nextTick} from 'vue';\r\nimport {ElMessage, ElMessageBox} from 'element-plus';\r\nimport {Loading} from '@element-plus/icons-vue';\r\nimport * as echarts from 'echarts';\r\nimport axios from 'axios';\r\n\r\n// 数据状态\r\nconst selectedMerchantId = ref(null);\r\nconst loading = ref(false);\r\nconst analysisData = ref(null);\r\nconst chartType = ref('line');\r\n\r\n// 商家列表（实际应用中应从API获取）\r\nconst merchants = ref([\r\n  {id: 1, name: '商家A'},\r\n  {id: 2, name: '商家B'},\r\n  {id: 3, name: '商家C'}\r\n]);\r\n\r\n// DOM引用\r\nconst salesChartRef = ref(null);\r\nconst peakAnalysisRef = ref(null);\r\nlet salesChart = null;\r\nlet peakChart = null;\r\n\r\n// 加载销售趋势数据\r\nconst loadSalesTrendData = async () => {\r\n  if (!selectedMerchantId.value) {\r\n    ElMessage.warning('请先选择商家');\r\n    return;\r\n  }\r\n\r\n  loading.value = true;\r\n  try {\r\n    const response = await axios.get(`http://localhost:8080/api/data-analysis/sales-trend/${selectedMerchantId.value}`);\r\n    analysisData.value = response.data;\r\n\r\n    nextTick(() => {\r\n      renderSalesChart();\r\n      renderPeakAnalysisChart();\r\n    });\r\n  } catch (error) {\r\n    console.error('加载数据失败:', error);\r\n    ElMessage.error('加载数据失败，请稍后重试');\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\n// 渲染销售趋势图表\r\nconst renderSalesChart = () => {\r\n  if (!salesChartRef.value) return;\r\n\r\n  if (salesChart) {\r\n    salesChart.dispose();\r\n  }\r\n\r\n  salesChart = echarts.init(salesChartRef.value);\r\n  const salesData = analysisData.value.monthlySales;\r\n\r\n  const option = {\r\n    title: {\r\n      text: '月度销售趋势',\r\n      left: 'center'\r\n    },\r\n    tooltip: {\r\n      trigger: 'axis',\r\n      formatter: (params) => {\r\n        const param = params[0];\r\n        const growthData = analysisData.value.growthRates.find(g => g.month === param.name);\r\n        let tooltip = `${param.name}<br/>销售额: ￥${param.value.toFixed(2)}`;\r\n        if (growthData) {\r\n          tooltip += `<br/>环比增长: ${growthData.growthRate}%`;\r\n        }\r\n        return tooltip;\r\n      }\r\n    },\r\n    toolbox: {\r\n      feature: {\r\n        dataZoom: {show: true},\r\n        restore: {show: true},\r\n        saveAsImage: {show: true}\r\n      }\r\n    },\r\n    xAxis: {\r\n      type: 'category',\r\n      data: Object.keys(salesData),\r\n      axisLabel: {\r\n        rotate: 45\r\n      }\r\n    },\r\n    yAxis: {\r\n      type: 'value',\r\n      axisLabel: {\r\n        formatter: '￥{value}'\r\n      }\r\n    },\r\n    series: [{\r\n      data: Object.values(salesData),\r\n      type: chartType.value,\r\n      smooth: true,\r\n      areaStyle: chartType.value === 'area' ? {\r\n        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n          {offset: 0, color: 'rgba(64, 158, 255, 0.3)'},\r\n          {offset: 1, color: 'rgba(64, 158, 255, 0.1)'}\r\n        ])\r\n      } : null,\r\n      itemStyle: {\r\n        color: '#409EFF'\r\n      },\r\n      label: {\r\n        show: chartType.value === 'bar',\r\n        position: 'top',\r\n        formatter: (params) => `￥${params.value.toFixed(0)}`\r\n      }\r\n    }]\r\n  };\r\n\r\n  salesChart.setOption(option);\r\n\r\n  // 监听窗口大小变化\r\n  window.addEventListener('resize', () => {\r\n    salesChart.resize();\r\n  });\r\n};\r\n\r\n// 渲染峰谷分析图表\r\nconst renderPeakAnalysisChart = () => {\r\n  if (!peakAnalysisRef.value) return;\r\n\r\n  if (peakChart) {\r\n    peakChart.dispose();\r\n  }\r\n\r\n  peakChart = echarts.init(peakAnalysisRef.value);\r\n  const highest = getHighestSalesMonth();\r\n  const lowest = getLowestSalesMonth();\r\n\r\n  const option = {\r\n    title: {\r\n      text: '销售峰谷对比',\r\n      left: 'center'\r\n    },\r\n    tooltip: {\r\n      trigger: 'item',\r\n      formatter: '{b}: ￥{c}'\r\n    },\r\n    legend: {\r\n      bottom: 0\r\n    },\r\n    series: [{\r\n      type: 'pie',\r\n      radius: ['40%', '70%'],\r\n      avoidLabelOverlap: false,\r\n      itemStyle: {\r\n        borderRadius: 10,\r\n        borderColor: '#fff',\r\n        borderWidth: 2\r\n      },\r\n      label: {\r\n        show: true,\r\n        formatter: '{b}: {d}%'\r\n      },\r\n      emphasis: {\r\n        label: {\r\n          show: true,\r\n          fontSize: '16',\r\n          fontWeight: 'bold'\r\n        }\r\n      },\r\n      data: [\r\n        {\r\n          value: highest.sales,\r\n          name: `最高(${highest.month})`,\r\n          itemStyle: {color: '#67C23A'}\r\n        },\r\n        {\r\n          value: lowest.sales,\r\n          name: `最低(${lowest.month})`,\r\n          itemStyle: {color: '#F56C6C'}\r\n        },\r\n        {\r\n          value: analysisData.value.avgMonthlySales,\r\n          name: '平均值',\r\n          itemStyle: {color: '#409EFF'}\r\n        }\r\n      ]\r\n    }]\r\n  };\r\n\r\n  peakChart.setOption(option);\r\n\r\n  window.addEventListener('resize', () => {\r\n    peakChart.resize();\r\n  });\r\n};\r\n\r\n// 更新图表类型\r\nconst updateChart = () => {\r\n  renderSalesChart();\r\n};\r\n\r\n// 获取最新增长率\r\nconst latestGrowth = computed(() => {\r\n  if (!analysisData.value || !analysisData.value.growthRates.length) {\r\n    return {month: '-', growthRate: 0};\r\n  }\r\n  return analysisData.value.growthRates[analysisData.value.growthRates.length - 1];\r\n});\r\n\r\n// 获取最高销售月份\r\nconst getHighestSalesMonth = () => {\r\n  if (!analysisData.value) return {month: '-', sales: 0};\r\n\r\n  const entries = Object.entries(analysisData.value.monthlySales);\r\n  const [month, sales] = entries.reduce((max, current) =>\r\n      current[1] > max[1] ? current : max\r\n  );\r\n\r\n  return {month, sales};\r\n};\r\n\r\n// 获取最低销售月份\r\nconst getLowestSalesMonth = () => {\r\n  if (!analysisData.value) return {month: '-', sales: 0};\r\n\r\n  const entries = Object.entries(analysisData.value.monthlySales);\r\n  const [month, sales] = entries.reduce((min, current) =>\r\n      current[1] < min[1] ? current : min\r\n  );\r\n\r\n  return {month, sales};\r\n};\r\n\r\n// 获取总体趋势类型\r\nconst getOverallTrendType = () => {\r\n  if (!analysisData.value || !analysisData.value.growthRates.length) return 'info';\r\n\r\n  const avgGrowth = analysisData.value.growthRates\r\n      .reduce((sum, item) => sum + item.growthRate, 0) / analysisData.value.growthRates.length;\r\n\r\n  if (avgGrowth > 5) return 'success';\r\n  if (avgGrowth < -5) return 'danger';\r\n  return 'warning';\r\n};\r\n\r\n// 获取总体趋势文本\r\nconst getOverallTrendText = () => {\r\n  if (!analysisData.value || !analysisData.value.growthRates.length) return '无数据';\r\n\r\n  const avgGrowth = analysisData.value.growthRates\r\n      .reduce((sum, item) => sum + item.growthRate, 0) / analysisData.value.growthRates.length;\r\n\r\n  if (avgGrowth > 5) return '强势增长';\r\n  if (avgGrowth > 0) return '稳定增长';\r\n  if (avgGrowth > -5) return '略有下降';\r\n  return '明显下降';\r\n};\r\n\r\n// 计算波动系数\r\nconst calculateVolatility = () => {\r\n  if (!analysisData.value) return 0;\r\n\r\n  const salesValues = Object.values(analysisData.value.monthlySales);\r\n  const avg = salesValues.reduce((sum, val) => sum + val, 0) / salesValues.length;\r\n  const variance = salesValues.reduce((sum, val) => sum + Math.pow(val - avg, 2), 0) / salesValues.length;\r\n  const stdDev = Math.sqrt(variance);\r\n\r\n  return ((stdDev / avg) * 100).toFixed(2);\r\n};\r\n\r\n// 格式化文本\r\nconst formatText = (text) => {\r\n  return text.replace(/\\n/g, '<br>');\r\n};\r\n\r\n// 复制文本\r\nconst copyText = async (text) => {\r\n  try {\r\n    await navigator.clipboard.writeText(text);\r\n    ElMessage.success('复制成功');\r\n  } catch (err) {\r\n    console.error('复制失败:', err);\r\n    ElMessage.error('复制失败，请手动复制');\r\n  }\r\n};\r\n\r\n// 导出数据\r\nconst exportData = () => {\r\n  ElMessageBox.confirm(\r\n      '是否导出销售趋势分析报告？',\r\n      '导出确认',\r\n      {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'info'\r\n      }\r\n  ).then(() => {\r\n    // 准备导出数据\r\n    const exportContent = {\r\n      merchantId: selectedMerchantId.value,\r\n      date: new Date().toLocaleDateString(),\r\n      data: analysisData.value\r\n    };\r\n\r\n    // 创建下载链接\r\n    const blob = new Blob([JSON.stringify(exportContent, null, 2)], {type: 'application/json'});\r\n    const url = window.URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = `销售趋势分析报告_${selectedMerchantId.value}_${new Date().toISOString().split('T')[0]}.json`;\r\n    link.click();\r\n    window.URL.revokeObjectURL(url);\r\n\r\n    ElMessage.success('导出成功');\r\n  }).catch(() => {\r\n    // 取消导出\r\n  });\r\n};\r\n\r\n// 组件卸载时清理\r\nonUnmounted(() => {\r\n  if (salesChart) {\r\n    salesChart.dispose();\r\n  }\r\n  if (peakChart) {\r\n    peakChart.dispose();\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.sales-trend-analysis {\r\n  padding: 20px;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.controls {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.metrics-row {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.mb-4 {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.mt-4 {\r\n  margin-top: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.insight-content,\r\n.recommendation-content {\r\n  line-height: 1.6;\r\n  white-space: pre-line;\r\n  color: #606266;\r\n}\r\n\r\n.loading-container,\r\n.empty-container {\r\n  margin-top: 20px;\r\n}\r\n\r\n:deep(.el-statistic__content) {\r\n  font-size: 28px;\r\n}\r\n\r\n:deep(.el-table .cell) {\r\n  padding: 8px;\r\n}\r\n\r\n:deep(.el-descriptions__label) {\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}