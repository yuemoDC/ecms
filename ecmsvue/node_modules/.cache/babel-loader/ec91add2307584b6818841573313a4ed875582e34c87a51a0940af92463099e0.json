{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, reactive, onMounted, onUnmounted, nextTick, computed } from 'vue';\nimport { ElMessage, ElNotification } from 'element-plus';\nimport { Refresh } from '@element-plus/icons-vue';\nimport * as echarts from 'echarts';\nimport axios from 'axios';\nexport default {\n  name: 'AdminDataVisualizationView',\n  components: {\n    Refresh\n  },\n  setup() {\n    // 图表引用\n    const salesTrendChart = ref(null);\n    const merchantRankingChart = ref(null);\n    const productRankingChart = ref(null);\n    const regionalDistributionChart = ref(null);\n    const orderStatusDistributionChart = ref(null);\n\n    // 图表实例\n    let salesTrendChartInstance = null;\n    let merchantRankingChartInstance = null;\n    let productRankingChartInstance = null;\n    let regionalDistributionChartInstance = null;\n    let orderStatusDistributionChartInstance = null;\n\n    // 数据状态\n    const loading = reactive({\n      dashboard: false,\n      salesTrend: false,\n      merchantRanking: false,\n      productRanking: false,\n      regionalDistribution: false,\n      orderStatusDistribution: false\n    });\n    const timeFilter = ref('monthly');\n    const timeFilterLabel = computed(() => {\n      switch (timeFilter.value) {\n        case 'daily':\n          return '每日';\n        case 'weekly':\n          return '每周';\n        case 'monthly':\n          return '每月';\n        default:\n          return '每月';\n      }\n    });\n\n    // 图表选择\n    const selectedChartType = ref('all');\n\n    // 用于判断图表是否显示\n    const isChartVisible = chartType => {\n      return selectedChartType.value === 'all' || selectedChartType.value === chartType;\n    };\n\n    // 处理图表类型变更\n    const handleChartTypeChange = value => {\n      // 重新调整图表大小\n      nextTick(() => {\n        if (value === 'all' || value === 'trend') {\n          salesTrendChartInstance && salesTrendChartInstance.resize();\n        }\n        if (value === 'all' || value === 'merchant') {\n          merchantRankingChartInstance && merchantRankingChartInstance.resize();\n        }\n        if (value === 'all' || value === 'product') {\n          productRankingChartInstance && productRankingChartInstance.resize();\n        }\n        if (value === 'all' || value === 'region') {\n          regionalDistributionChartInstance && regionalDistributionChartInstance.resize();\n        }\n        if (value === 'all' || value === 'status') {\n          orderStatusDistributionChartInstance && orderStatusDistributionChartInstance.resize();\n        }\n      });\n\n      // 通知用户\n      ElNotification({\n        title: '图表显示已更新',\n        message: value === 'all' ? '显示所有图表' : `仅显示${getChartTypeName(value)}图表`,\n        type: 'success',\n        duration: 2000\n      });\n    };\n\n    // 获取图表类型名称\n    const getChartTypeName = chartType => {\n      switch (chartType) {\n        case 'trend':\n          return '销售趋势';\n        case 'merchant':\n          return '商家销售排行';\n        case 'product':\n          return '产品销售排行';\n        case 'region':\n          return '区域销售分布';\n        case 'status':\n          return '订单状态分布';\n        default:\n          return '';\n      }\n    };\n    const salesOverview = reactive({\n      totalSales: 0,\n      totalOrders: 0,\n      avgOrderValue: 0,\n      pendingOrders: 0,\n      completedOrders: 0,\n      recentSales: 0,\n      merchantCount: 0,\n      activeMerchantCount: 0\n    });\n\n    // 初始化图表\n    const initCharts = () => {\n      // 创建图表并应用主题\n      const theme = {\n        color: ['#409EFF', '#67C23A', '#E6A23C', '#F56C6C', '#909399', '#9254de', '#36cfc9', '#ff9c6e'],\n        backgroundColor: 'rgba(252,252,252,0.6)',\n        textStyle: {\n          fontFamily: 'Arial, \"Microsoft YaHei\", sans-serif'\n        },\n        title: {\n          textStyle: {\n            color: '#303133',\n            fontSize: 16,\n            fontWeight: 'normal'\n          },\n          left: 'center'\n        },\n        legend: {\n          textStyle: {\n            color: '#606266'\n          }\n        },\n        grid: {\n          containLabel: true,\n          left: '3%',\n          right: '4%',\n          bottom: '3%'\n        }\n      };\n      echarts.registerTheme('ecmsTheme', theme);\n\n      // 销售趋势图\n      salesTrendChartInstance = echarts.init(salesTrendChart.value, 'ecmsTheme');\n\n      // 商家销售排行图\n      merchantRankingChartInstance = echarts.init(merchantRankingChart.value, 'ecmsTheme');\n\n      // 产品销售排行图\n      productRankingChartInstance = echarts.init(productRankingChart.value, 'ecmsTheme');\n\n      // 区域销售分布图\n      regionalDistributionChartInstance = echarts.init(regionalDistributionChart.value, 'ecmsTheme');\n\n      // 订单状态分布图\n      orderStatusDistributionChartInstance = echarts.init(orderStatusDistributionChart.value, 'ecmsTheme');\n\n      // 监听窗口大小变化，调整图表大小\n      window.addEventListener('resize', handleResize);\n    };\n\n    // 处理窗口大小变化\n    const handleResize = () => {\n      if (isChartVisible('trend')) {\n        salesTrendChartInstance && salesTrendChartInstance.resize();\n      }\n      if (isChartVisible('merchant')) {\n        merchantRankingChartInstance && merchantRankingChartInstance.resize();\n      }\n      if (isChartVisible('product')) {\n        productRankingChartInstance && productRankingChartInstance.resize();\n      }\n      if (isChartVisible('region')) {\n        regionalDistributionChartInstance && regionalDistributionChartInstance.resize();\n      }\n      if (isChartVisible('status')) {\n        orderStatusDistributionChartInstance && orderStatusDistributionChartInstance.resize();\n      }\n    };\n\n    // 获取仪表板数据\n    // 获取仪表板数据\n    const fetchDashboardData = async () => {\n      try {\n        loading.dashboard = true;\n        const response = await axios.get(`http://localhost:8080/api/admin/data-visualization/dashboard?period=${timeFilter.value}`);\n        const dashboardData = response.data;\n\n        // 更新销售概览数据\n        Object.assign(salesOverview, dashboardData.salesOverview);\n\n        // 等待下一个 DOM 更新周期后再渲染图表\n        await nextTick();\n\n        // 确保图表实例存在，如果不存在则重新初始化\n        if (!salesTrendChartInstance && salesTrendChart.value) {\n          salesTrendChartInstance = echarts.init(salesTrendChart.value, 'ecmsTheme');\n        }\n        if (!merchantRankingChartInstance && merchantRankingChart.value) {\n          merchantRankingChartInstance = echarts.init(merchantRankingChart.value, 'ecmsTheme');\n        }\n        if (!productRankingChartInstance && productRankingChart.value) {\n          productRankingChartInstance = echarts.init(productRankingChart.value, 'ecmsTheme');\n        }\n        if (!regionalDistributionChartInstance && regionalDistributionChart.value) {\n          regionalDistributionChartInstance = echarts.init(regionalDistributionChart.value, 'ecmsTheme');\n        }\n        if (!orderStatusDistributionChartInstance && orderStatusDistributionChart.value) {\n          orderStatusDistributionChartInstance = echarts.init(orderStatusDistributionChart.value, 'ecmsTheme');\n        }\n\n        // 检查数据是否有效\n        console.log('更新前图表数据:', dashboardData);\n\n        // 更新各个图表\n        if (dashboardData.salesTrend && Object.keys(dashboardData.salesTrend).length > 0) {\n          renderSalesTrendChart(dashboardData.salesTrend);\n        } else {\n          console.warn('销售趋势数据为空');\n        }\n        if (dashboardData.merchantRanking && Object.keys(dashboardData.merchantRanking).length > 0) {\n          renderMerchantRankingChart(dashboardData.merchantRanking);\n        } else {\n          console.warn('商家排行数据为空');\n        }\n        if (dashboardData.productRanking && Object.keys(dashboardData.productRanking).length > 0) {\n          renderProductRankingChart(dashboardData.productRanking);\n        } else {\n          console.warn('产品排行数据为空');\n        }\n        if (dashboardData.regionalDistribution && Object.keys(dashboardData.regionalDistribution).length > 0) {\n          renderRegionalDistributionChart(dashboardData.regionalDistribution);\n        } else {\n          console.warn('区域分布数据为空');\n        }\n        if (dashboardData.orderStatusDistribution && Object.keys(dashboardData.orderStatusDistribution).length > 0) {\n          renderOrderStatusDistributionChart(dashboardData.orderStatusDistribution);\n        } else {\n          console.warn('订单状态数据为空');\n        }\n        ElMessage({\n          message: '数据已成功更新',\n          type: 'success',\n          duration: 2000\n        });\n      } catch (error) {\n        console.error('获取仪表板数据失败', error);\n        ElMessage({\n          message: '获取仪表板数据失败: ' + (error.response?.data?.message || error.message),\n          type: 'error'\n        });\n      } finally {\n        loading.dashboard = false;\n      }\n    };\n\n    // 渲染销售趋势图\n    const renderSalesTrendChart = data => {\n      const option = {\n        title: {\n          text: data.title || '平台销售趋势',\n          subtext: `按${timeFilterLabel.value}统计`\n        },\n        tooltip: {\n          trigger: 'axis',\n          formatter: '{b}: {c} 元',\n          backgroundColor: 'rgba(255,255,255,0.8)',\n          borderColor: '#eee',\n          borderWidth: 1,\n          textStyle: {\n            color: '#333'\n          },\n          extraCssText: 'box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);'\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          data: data.xAxis || [],\n          boundaryGap: false,\n          axisTick: {\n            alignWithLabel: true\n          },\n          axisLine: {\n            lineStyle: {\n              color: '#dcdfe6'\n            }\n          },\n          axisLabel: {\n            color: '#606266',\n            rotate: data.xAxis && data.xAxis.length > 10 ? 30 : 0\n          }\n        },\n        yAxis: {\n          type: 'value',\n          name: '销售额(元)',\n          nameTextStyle: {\n            color: '#606266'\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: '#dcdfe6'\n            }\n          },\n          splitLine: {\n            lineStyle: {\n              color: '#ebeef5'\n            }\n          }\n        },\n        series: [{\n          name: '销售额',\n          type: 'line',\n          data: data.series || [],\n          smooth: true,\n          symbol: 'circle',\n          symbolSize: 6,\n          itemStyle: {\n            color: '#409EFF'\n          },\n          lineStyle: {\n            width: 3\n          },\n          areaStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: 'rgba(64, 158, 255, 0.5)'\n            }, {\n              offset: 1,\n              color: 'rgba(64, 158, 255, 0.1)'\n            }])\n          },\n          markPoint: {\n            data: [{\n              type: 'max',\n              name: '最大值'\n            }, {\n              type: 'min',\n              name: '最小值'\n            }]\n          },\n          markLine: {\n            data: [{\n              type: 'average',\n              name: '平均值'\n            }]\n          }\n        }]\n      };\n      salesTrendChartInstance.setOption(option);\n    };\n\n    // 渲染商家销售排行图\n    const renderMerchantRankingChart = data => {\n      const option = {\n        title: {\n          text: data.title || '商家销售排行',\n          subtext: '按销售额排名'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          },\n          formatter: '{b}: {c} 元',\n          backgroundColor: 'rgba(255,255,255,0.8)',\n          borderColor: '#eee',\n          borderWidth: 1,\n          textStyle: {\n            color: '#333'\n          },\n          extraCssText: 'box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);'\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'value',\n          name: '销售额(元)',\n          nameTextStyle: {\n            color: '#606266'\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: '#dcdfe6'\n            }\n          },\n          splitLine: {\n            lineStyle: {\n              color: '#ebeef5'\n            }\n          }\n        },\n        yAxis: {\n          type: 'category',\n          data: data.merchantNames || [],\n          axisLabel: {\n            interval: 0,\n            rotate: 0,\n            color: '#606266'\n          },\n          axisLine: {\n            lineStyle: {\n              color: '#dcdfe6'\n            }\n          }\n        },\n        visualMap: {\n          min: 0,\n          max: Math.max(...(data.salesValues || [0])),\n          text: ['高', '低'],\n          inRange: {\n            color: ['#67C23A', '#409EFF']\n          },\n          calculable: true,\n          orient: 'horizontal',\n          left: 'center',\n          bottom: '0%',\n          show: false\n        },\n        series: [{\n          name: '销售额',\n          type: 'bar',\n          data: data.salesValues || [],\n          barWidth: '50%',\n          itemStyle: {\n            color: function (params) {\n              const value = params.value;\n              const max = Math.max(...(data.salesValues || [0]));\n              return new echarts.graphic.LinearGradient(0, 0, 1, 0, [{\n                offset: 0,\n                color: '#67C23A'\n              }, {\n                offset: value / max,\n                color: '#409EFF'\n              }]);\n            },\n            borderRadius: [0, 4, 4, 0]\n          },\n          label: {\n            show: true,\n            position: 'right',\n            formatter: '{c} 元'\n          }\n        }]\n      };\n      merchantRankingChartInstance.setOption(option);\n    };\n\n    // 渲染产品销售排行图\n    const renderProductRankingChart = data => {\n      const option = {\n        title: {\n          text: data.title || '产品销售排行',\n          subtext: '按销售额排名'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          },\n          formatter: '{b}: {c} 元',\n          backgroundColor: 'rgba(255,255,255,0.8)',\n          borderColor: '#eee',\n          borderWidth: 1,\n          textStyle: {\n            color: '#333'\n          },\n          extraCssText: 'box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);'\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'value',\n          name: '销售额(元)',\n          nameTextStyle: {\n            color: '#606266'\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: '#dcdfe6'\n            }\n          },\n          splitLine: {\n            lineStyle: {\n              color: '#ebeef5'\n            }\n          }\n        },\n        yAxis: {\n          type: 'category',\n          data: data.productNames || [],\n          axisLabel: {\n            interval: 0,\n            rotate: 0,\n            color: '#606266'\n          },\n          axisLine: {\n            lineStyle: {\n              color: '#dcdfe6'\n            }\n          }\n        },\n        series: [{\n          name: '销售额',\n          type: 'bar',\n          data: data.salesValues || [],\n          barWidth: '50%',\n          itemStyle: {\n            color: function (params) {\n              const colorList = ['#67C23A', '#409EFF', '#E6A23C', '#F56C6C', '#909399'];\n              return new echarts.graphic.LinearGradient(0, 0, 1, 0, [{\n                offset: 0,\n                color: '#E6A23C'\n              }, {\n                offset: 1,\n                color: colorList[params.dataIndex % colorList.length]\n              }]);\n            },\n            borderRadius: [0, 4, 4, 0]\n          },\n          label: {\n            show: true,\n            position: 'right',\n            formatter: '{c} 元'\n          }\n        }]\n      };\n      productRankingChartInstance.setOption(option);\n    };\n\n    // 渲染区域销售分布图\n    const renderRegionalDistributionChart = data => {\n      const option = {\n        title: {\n          text: data.title || '区域销售分布',\n          subtext: '按地区统计'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{b}: {c} 元 ({d}%)',\n          backgroundColor: 'rgba(255,255,255,0.8)',\n          borderColor: '#eee',\n          borderWidth: 1,\n          textStyle: {\n            color: '#333'\n          },\n          extraCssText: 'box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);'\n        },\n        legend: {\n          type: 'scroll',\n          orient: 'vertical',\n          right: 10,\n          top: 20,\n          bottom: 20,\n          textStyle: {\n            color: '#606266'\n          }\n        },\n        series: [{\n          name: '区域销售',\n          type: 'pie',\n          radius: ['40%', '70%'],\n          center: ['40%', '50%'],\n          avoidLabelOverlap: true,\n          itemStyle: {\n            borderRadius: 4,\n            borderColor: '#fff',\n            borderWidth: 2\n          },\n          label: {\n            show: false,\n            position: 'center'\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: '18',\n              fontWeight: 'bold'\n            }\n          },\n          labelLine: {\n            show: false\n          },\n          data: data.regions ? data.regions.map((region, index) => {\n            return {\n              name: region,\n              value: data.values[index]\n            };\n          }) : []\n        }]\n      };\n      regionalDistributionChartInstance.setOption(option);\n    };\n\n    // 渲染订单状态分布图\n    const renderOrderStatusDistributionChart = data => {\n      const option = {\n        title: {\n          text: data.title || '订单状态分布',\n          subtext: '按状态统计'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)',\n          backgroundColor: 'rgba(255,255,255,0.8)',\n          borderColor: '#eee',\n          borderWidth: 1,\n          textStyle: {\n            color: '#333'\n          },\n          extraCssText: 'box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 10,\n          top: 'center',\n          textStyle: {\n            color: '#606266'\n          }\n        },\n        series: [{\n          name: '订单状态',\n          type: 'pie',\n          radius: ['40%', '70%'],\n          avoidLabelOverlap: false,\n          itemStyle: {\n            borderRadius: 4,\n            borderColor: '#fff',\n            borderWidth: 2\n          },\n          label: {\n            show: false,\n            position: 'center'\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: '18',\n              fontWeight: 'bold'\n            }\n          },\n          labelLine: {\n            show: false\n          },\n          data: data.data ? data.data.map(item => {\n            // 为不同状态设置不同颜色\n            const colorMap = {\n              '待处理': '#E6A23C',\n              '已发货': '#409EFF',\n              '已完成': '#67C23A',\n              '已退款': '#F56C6C'\n            };\n            return {\n              ...item,\n              itemStyle: {\n                color: colorMap[item.name] || undefined\n              }\n            };\n          }) : []\n        }]\n      };\n      orderStatusDistributionChartInstance.setOption(option);\n    };\n\n    // 格式化货币\n    const formatCurrency = value => {\n      if (value === undefined || value === null) return '¥0.00';\n      return '¥' + parseFloat(value).toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','); // 添加千位分隔符\n    };\n\n    // 组件挂载\n    onMounted(async () => {\n      await nextTick();\n      initCharts();\n      fetchDashboardData();\n\n      // 显示欢迎提示\n      ElNotification({\n        title: '数据仪表板已加载',\n        message: '欢迎使用平台数据可视化系统',\n        type: 'success',\n        duration: 3000\n      });\n    });\n\n    // 组件卸载\n    onUnmounted(() => {\n      // 销毁图表实例，避免内存泄漏\n      salesTrendChartInstance && salesTrendChartInstance.dispose();\n      merchantRankingChartInstance && merchantRankingChartInstance.dispose();\n      productRankingChartInstance && productRankingChartInstance.dispose();\n      regionalDistributionChartInstance && regionalDistributionChartInstance.dispose();\n      orderStatusDistributionChartInstance && orderStatusDistributionChartInstance.dispose();\n\n      // 移除窗口大小变化监听\n      window.removeEventListener('resize', handleResize);\n    });\n    return {\n      salesTrendChart,\n      merchantRankingChart,\n      productRankingChart,\n      regionalDistributionChart,\n      orderStatusDistributionChart,\n      loading,\n      timeFilter,\n      timeFilterLabel,\n      salesOverview,\n      fetchDashboardData,\n      formatCurrency,\n      selectedChartType,\n      isChartVisible,\n      handleChartTypeChange\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","onUnmounted","nextTick","computed","ElMessage","ElNotification","Refresh","echarts","axios","name","components","setup","salesTrendChart","merchantRankingChart","productRankingChart","regionalDistributionChart","orderStatusDistributionChart","salesTrendChartInstance","merchantRankingChartInstance","productRankingChartInstance","regionalDistributionChartInstance","orderStatusDistributionChartInstance","loading","dashboard","salesTrend","merchantRanking","productRanking","regionalDistribution","orderStatusDistribution","timeFilter","timeFilterLabel","value","selectedChartType","isChartVisible","chartType","handleChartTypeChange","resize","title","message","getChartTypeName","type","duration","salesOverview","totalSales","totalOrders","avgOrderValue","pendingOrders","completedOrders","recentSales","merchantCount","activeMerchantCount","initCharts","theme","color","backgroundColor","textStyle","fontFamily","fontSize","fontWeight","left","legend","grid","containLabel","right","bottom","registerTheme","init","window","addEventListener","handleResize","fetchDashboardData","response","get","dashboardData","data","Object","assign","console","log","keys","length","renderSalesTrendChart","warn","renderMerchantRankingChart","renderProductRankingChart","renderRegionalDistributionChart","renderOrderStatusDistributionChart","error","option","text","subtext","tooltip","trigger","formatter","borderColor","borderWidth","extraCssText","xAxis","boundaryGap","axisTick","alignWithLabel","axisLine","lineStyle","axisLabel","rotate","yAxis","nameTextStyle","show","splitLine","series","smooth","symbol","symbolSize","itemStyle","width","areaStyle","graphic","LinearGradient","offset","markPoint","markLine","setOption","axisPointer","merchantNames","interval","visualMap","min","max","Math","salesValues","inRange","calculable","orient","barWidth","params","borderRadius","label","position","productNames","colorList","dataIndex","top","radius","center","avoidLabelOverlap","emphasis","labelLine","regions","map","region","index","values","item","colorMap","undefined","formatCurrency","parseFloat","toFixed","replace","dispose","removeEventListener"],"sources":["E:\\shixun\\420\\ecms\\ecmsvue\\src\\views\\AdminDataVisualizationView.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-visualization-view\">\r\n    <div class=\"view-header\">\r\n      <el-breadcrumb separator=\"/\">\r\n        <el-breadcrumb-item :to=\"{ path: '/admin' }\">首页</el-breadcrumb-item>\r\n        <el-breadcrumb-item>数据分析</el-breadcrumb-item>\r\n        <el-breadcrumb-item>平台数据可视化</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n      <h2>平台数据可视化</h2>\r\n    </div>\r\n\r\n    <div class=\"admin-visualization-dashboard\">\r\n      <div class=\"dashboard-header\">\r\n        <h1 class=\"dashboard-title\">平台数据分析仪表板</h1>\r\n\r\n        <div class=\"toolbar\">\r\n          <el-select v-model=\"timeFilter\" placeholder=\"选择时间周期\" @change=\"fetchDashboardData\" class=\"time-filter\">\r\n            <el-option label=\"每日\" value=\"daily\"></el-option>\r\n            <el-option label=\"每周\" value=\"weekly\"></el-option>\r\n            <el-option label=\"每月\" value=\"monthly\"></el-option>\r\n          </el-select>\r\n\r\n          <el-button type=\"primary\" @click=\"fetchDashboardData\" :loading=\"loading.dashboard\" class=\"refresh-btn\">\r\n            <el-icon><Refresh /></el-icon> 刷新数据\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 图表选择器 -->\r\n      <div class=\"chart-selector\">\r\n        <el-radio-group v-model=\"selectedChartType\" @change=\"handleChartTypeChange\" size=\"large\">\r\n          <el-radio-button label=\"all\">全部图表</el-radio-button>\r\n          <el-radio-button label=\"trend\">销售趋势</el-radio-button>\r\n          <el-radio-button label=\"merchant\">商家排行</el-radio-button>\r\n          <el-radio-button label=\"product\">产品排行</el-radio-button>\r\n          <el-radio-button label=\"region\">区域分布</el-radio-button>\r\n          <el-radio-button label=\"status\">订单状态</el-radio-button>\r\n        </el-radio-group>\r\n      </div>\r\n\r\n      <!-- 销售概览卡片 -->\r\n      <el-row :gutter=\"24\" class=\"dashboard-cards\">\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>总销售额</span>\r\n                <el-tag type=\"success\" effect=\"plain\" size=\"small\">统计</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2 class=\"card-value\">{{ formatCurrency(salesOverview.totalSales) }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>总订单数</span>\r\n                <el-tag type=\"primary\" effect=\"plain\" size=\"small\">统计</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2 class=\"card-value\">{{ salesOverview.totalOrders || 0 }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>平均订单金额</span>\r\n                <el-tag type=\"warning\" effect=\"plain\" size=\"small\">统计</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2 class=\"card-value\">{{ formatCurrency(salesOverview.avgOrderValue) }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>最近30天销售额</span>\r\n                <el-tag type=\"info\" effect=\"plain\" size=\"small\">统计</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2 class=\"card-value\">{{ formatCurrency(salesOverview.recentSales) }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>商家总数</span>\r\n                <el-tag type=\"danger\" effect=\"plain\" size=\"small\">统计</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2 class=\"card-value\">{{ salesOverview.merchantCount || 0 }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>活跃商家</span>\r\n                <el-tag type=\"success\" effect=\"plain\" size=\"small\">统计</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h2 class=\"card-value\">{{ salesOverview.activeMerchantCount || 0 }}</h2>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 图表区域 -->\r\n      <el-row :gutter=\"24\" class=\"dashboard-charts\">\r\n        <!-- 销售趋势图 -->\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\" v-if=\"isChartVisible('trend')\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>平台销售趋势</span>\r\n                <el-tag type=\"primary\">{{ timeFilterLabel }}</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.salesTrend\">\r\n              <div ref=\"salesTrendChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <!-- 商家销售排行图 -->\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\" v-if=\"isChartVisible('merchant')\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>商家销售排行</span>\r\n                <el-tag type=\"success\">排名</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.merchantRanking\">\r\n              <div ref=\"merchantRankingChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <!-- 产品销售排行图 -->\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\" v-if=\"isChartVisible('product')\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>产品销售排行</span>\r\n                <el-tag type=\"warning\">排名</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.productRanking\">\r\n              <div ref=\"productRankingChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <!-- 区域销售分布图 -->\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\" v-if=\"isChartVisible('region')\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>区域销售分布</span>\r\n                <el-tag type=\"info\">分布</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.regionalDistribution\">\r\n              <div ref=\"regionalDistributionChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <!-- 订单状态分布图 -->\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\" v-if=\"isChartVisible('status')\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>订单状态分布</span>\r\n                <el-tag type=\"danger\">分布</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"chart-container\" v-loading=\"loading.orderStatusDistribution\">\r\n              <div ref=\"orderStatusDistributionChart\" class=\"chart\"></div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted, onUnmounted, nextTick, computed } from 'vue';\r\nimport { ElMessage, ElNotification } from 'element-plus';\r\nimport { Refresh } from '@element-plus/icons-vue';\r\nimport * as echarts from 'echarts';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'AdminDataVisualizationView',\r\n  components: {\r\n    Refresh\r\n  },\r\n  setup() {\r\n    // 图表引用\r\n    const salesTrendChart = ref(null);\r\n    const merchantRankingChart = ref(null);\r\n    const productRankingChart = ref(null);\r\n    const regionalDistributionChart = ref(null);\r\n    const orderStatusDistributionChart = ref(null);\r\n\r\n    // 图表实例\r\n    let salesTrendChartInstance = null;\r\n    let merchantRankingChartInstance = null;\r\n    let productRankingChartInstance = null;\r\n    let regionalDistributionChartInstance = null;\r\n    let orderStatusDistributionChartInstance = null;\r\n\r\n    // 数据状态\r\n    const loading = reactive({\r\n      dashboard: false,\r\n      salesTrend: false,\r\n      merchantRanking: false,\r\n      productRanking: false,\r\n      regionalDistribution: false,\r\n      orderStatusDistribution: false\r\n    });\r\n\r\n    const timeFilter = ref('monthly');\r\n    const timeFilterLabel = computed(() => {\r\n      switch (timeFilter.value) {\r\n        case 'daily': return '每日';\r\n        case 'weekly': return '每周';\r\n        case 'monthly': return '每月';\r\n        default: return '每月';\r\n      }\r\n    });\r\n\r\n    // 图表选择\r\n    const selectedChartType = ref('all');\r\n\r\n    // 用于判断图表是否显示\r\n    const isChartVisible = (chartType) => {\r\n      return selectedChartType.value === 'all' || selectedChartType.value === chartType;\r\n    };\r\n\r\n    // 处理图表类型变更\r\n    const handleChartTypeChange = (value) => {\r\n      // 重新调整图表大小\r\n      nextTick(() => {\r\n        if (value === 'all' || value === 'trend') {\r\n          salesTrendChartInstance && salesTrendChartInstance.resize();\r\n        }\r\n        if (value === 'all' || value === 'merchant') {\r\n          merchantRankingChartInstance && merchantRankingChartInstance.resize();\r\n        }\r\n        if (value === 'all' || value === 'product') {\r\n          productRankingChartInstance && productRankingChartInstance.resize();\r\n        }\r\n        if (value === 'all' || value === 'region') {\r\n          regionalDistributionChartInstance && regionalDistributionChartInstance.resize();\r\n        }\r\n        if (value === 'all' || value === 'status') {\r\n          orderStatusDistributionChartInstance && orderStatusDistributionChartInstance.resize();\r\n        }\r\n      });\r\n\r\n      // 通知用户\r\n      ElNotification({\r\n        title: '图表显示已更新',\r\n        message: value === 'all' ? '显示所有图表' : `仅显示${getChartTypeName(value)}图表`,\r\n        type: 'success',\r\n        duration: 2000\r\n      });\r\n    };\r\n\r\n    // 获取图表类型名称\r\n    const getChartTypeName = (chartType) => {\r\n      switch (chartType) {\r\n        case 'trend': return '销售趋势';\r\n        case 'merchant': return '商家销售排行';\r\n        case 'product': return '产品销售排行';\r\n        case 'region': return '区域销售分布';\r\n        case 'status': return '订单状态分布';\r\n        default: return '';\r\n      }\r\n    };\r\n\r\n    const salesOverview = reactive({\r\n      totalSales: 0,\r\n      totalOrders: 0,\r\n      avgOrderValue: 0,\r\n      pendingOrders: 0,\r\n      completedOrders: 0,\r\n      recentSales: 0,\r\n      merchantCount: 0,\r\n      activeMerchantCount: 0\r\n    });\r\n\r\n    // 初始化图表\r\n    const initCharts = () => {\r\n      // 创建图表并应用主题\r\n      const theme = {\r\n        color: ['#409EFF', '#67C23A', '#E6A23C', '#F56C6C', '#909399', '#9254de', '#36cfc9', '#ff9c6e'],\r\n        backgroundColor: 'rgba(252,252,252,0.6)',\r\n        textStyle: {\r\n          fontFamily: 'Arial, \"Microsoft YaHei\", sans-serif'\r\n        },\r\n        title: {\r\n          textStyle: {\r\n            color: '#303133',\r\n            fontSize: 16,\r\n            fontWeight: 'normal'\r\n          },\r\n          left: 'center'\r\n        },\r\n        legend: {\r\n          textStyle: {\r\n            color: '#606266'\r\n          }\r\n        },\r\n        grid: {\r\n          containLabel: true,\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%'\r\n        }\r\n      };\r\n\r\n      echarts.registerTheme('ecmsTheme', theme);\r\n\r\n      // 销售趋势图\r\n      salesTrendChartInstance = echarts.init(salesTrendChart.value, 'ecmsTheme');\r\n\r\n      // 商家销售排行图\r\n      merchantRankingChartInstance = echarts.init(merchantRankingChart.value, 'ecmsTheme');\r\n\r\n      // 产品销售排行图\r\n      productRankingChartInstance = echarts.init(productRankingChart.value, 'ecmsTheme');\r\n\r\n      // 区域销售分布图\r\n      regionalDistributionChartInstance = echarts.init(regionalDistributionChart.value, 'ecmsTheme');\r\n\r\n      // 订单状态分布图\r\n      orderStatusDistributionChartInstance = echarts.init(orderStatusDistributionChart.value, 'ecmsTheme');\r\n\r\n      // 监听窗口大小变化，调整图表大小\r\n      window.addEventListener('resize', handleResize);\r\n    };\r\n\r\n    // 处理窗口大小变化\r\n    const handleResize = () => {\r\n      if (isChartVisible('trend')) {\r\n        salesTrendChartInstance && salesTrendChartInstance.resize();\r\n      }\r\n      if (isChartVisible('merchant')) {\r\n        merchantRankingChartInstance && merchantRankingChartInstance.resize();\r\n      }\r\n      if (isChartVisible('product')) {\r\n        productRankingChartInstance && productRankingChartInstance.resize();\r\n      }\r\n      if (isChartVisible('region')) {\r\n        regionalDistributionChartInstance && regionalDistributionChartInstance.resize();\r\n      }\r\n      if (isChartVisible('status')) {\r\n        orderStatusDistributionChartInstance && orderStatusDistributionChartInstance.resize();\r\n      }\r\n    };\r\n\r\n    // 获取仪表板数据\r\n    // 获取仪表板数据\r\n    const fetchDashboardData = async () => {\r\n      try {\r\n        loading.dashboard = true;\r\n\r\n        const response = await axios.get(`http://localhost:8080/api/admin/data-visualization/dashboard?period=${timeFilter.value}`);\r\n        const dashboardData = response.data;\r\n\r\n        // 更新销售概览数据\r\n        Object.assign(salesOverview, dashboardData.salesOverview);\r\n\r\n        // 等待下一个 DOM 更新周期后再渲染图表\r\n        await nextTick();\r\n\r\n        // 确保图表实例存在，如果不存在则重新初始化\r\n        if (!salesTrendChartInstance && salesTrendChart.value) {\r\n          salesTrendChartInstance = echarts.init(salesTrendChart.value, 'ecmsTheme');\r\n        }\r\n        if (!merchantRankingChartInstance && merchantRankingChart.value) {\r\n          merchantRankingChartInstance = echarts.init(merchantRankingChart.value, 'ecmsTheme');\r\n        }\r\n        if (!productRankingChartInstance && productRankingChart.value) {\r\n          productRankingChartInstance = echarts.init(productRankingChart.value, 'ecmsTheme');\r\n        }\r\n        if (!regionalDistributionChartInstance && regionalDistributionChart.value) {\r\n          regionalDistributionChartInstance = echarts.init(regionalDistributionChart.value, 'ecmsTheme');\r\n        }\r\n        if (!orderStatusDistributionChartInstance && orderStatusDistributionChart.value) {\r\n          orderStatusDistributionChartInstance = echarts.init(orderStatusDistributionChart.value, 'ecmsTheme');\r\n        }\r\n\r\n        // 检查数据是否有效\r\n        console.log('更新前图表数据:', dashboardData);\r\n\r\n        // 更新各个图表\r\n        if (dashboardData.salesTrend && Object.keys(dashboardData.salesTrend).length > 0) {\r\n          renderSalesTrendChart(dashboardData.salesTrend);\r\n        } else {\r\n          console.warn('销售趋势数据为空');\r\n        }\r\n\r\n        if (dashboardData.merchantRanking && Object.keys(dashboardData.merchantRanking).length > 0) {\r\n          renderMerchantRankingChart(dashboardData.merchantRanking);\r\n        } else {\r\n          console.warn('商家排行数据为空');\r\n        }\r\n\r\n        if (dashboardData.productRanking && Object.keys(dashboardData.productRanking).length > 0) {\r\n          renderProductRankingChart(dashboardData.productRanking);\r\n        } else {\r\n          console.warn('产品排行数据为空');\r\n        }\r\n\r\n        if (dashboardData.regionalDistribution && Object.keys(dashboardData.regionalDistribution).length > 0) {\r\n          renderRegionalDistributionChart(dashboardData.regionalDistribution);\r\n        } else {\r\n          console.warn('区域分布数据为空');\r\n        }\r\n\r\n        if (dashboardData.orderStatusDistribution && Object.keys(dashboardData.orderStatusDistribution).length > 0) {\r\n          renderOrderStatusDistributionChart(dashboardData.orderStatusDistribution);\r\n        } else {\r\n          console.warn('订单状态数据为空');\r\n        }\r\n\r\n        ElMessage({\r\n          message: '数据已成功更新',\r\n          type: 'success',\r\n          duration: 2000\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error('获取仪表板数据失败', error);\r\n        ElMessage({\r\n          message: '获取仪表板数据失败: ' + (error.response?.data?.message || error.message),\r\n          type: 'error'\r\n        });\r\n      } finally {\r\n        loading.dashboard = false;\r\n      }\r\n    };\r\n\r\n    // 渲染销售趋势图\r\n    const renderSalesTrendChart = (data) => {\r\n      const option = {\r\n        title: {\r\n          text: data.title || '平台销售趋势',\r\n          subtext: `按${timeFilterLabel.value}统计`\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          formatter: '{b}: {c} 元',\r\n          backgroundColor: 'rgba(255,255,255,0.8)',\r\n          borderColor: '#eee',\r\n          borderWidth: 1,\r\n          textStyle: {\r\n            color: '#333'\r\n          },\r\n          extraCssText: 'box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);'\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: data.xAxis || [],\r\n          boundaryGap: false,\r\n          axisTick: {\r\n            alignWithLabel: true\r\n          },\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#dcdfe6'\r\n            }\r\n          },\r\n          axisLabel: {\r\n            color: '#606266',\r\n            rotate: data.xAxis && data.xAxis.length > 10 ? 30 : 0\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          name: '销售额(元)',\r\n          nameTextStyle: {\r\n            color: '#606266'\r\n          },\r\n          axisLine: {\r\n            show: true,\r\n            lineStyle: {\r\n              color: '#dcdfe6'\r\n            }\r\n          },\r\n          splitLine: {\r\n            lineStyle: {\r\n              color: '#ebeef5'\r\n            }\r\n          }\r\n        },\r\n        series: [{\r\n          name: '销售额',\r\n          type: 'line',\r\n          data: data.series || [],\r\n          smooth: true,\r\n          symbol: 'circle',\r\n          symbolSize: 6,\r\n          itemStyle: {\r\n            color: '#409EFF'\r\n          },\r\n          lineStyle: {\r\n            width: 3\r\n          },\r\n          areaStyle: {\r\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n              { offset: 0, color: 'rgba(64, 158, 255, 0.5)' },\r\n              { offset: 1, color: 'rgba(64, 158, 255, 0.1)' }\r\n            ])\r\n          },\r\n          markPoint: {\r\n            data: [\r\n              { type: 'max', name: '最大值' },\r\n              { type: 'min', name: '最小值' }\r\n            ]\r\n          },\r\n          markLine: {\r\n            data: [\r\n              { type: 'average', name: '平均值' }\r\n            ]\r\n          }\r\n        }]\r\n      };\r\n\r\n      salesTrendChartInstance.setOption(option);\r\n    };\r\n\r\n    // 渲染商家销售排行图\r\n    const renderMerchantRankingChart = (data) => {\r\n      const option = {\r\n        title: {\r\n          text: data.title || '商家销售排行',\r\n          subtext: '按销售额排名'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          },\r\n          formatter: '{b}: {c} 元',\r\n          backgroundColor: 'rgba(255,255,255,0.8)',\r\n          borderColor: '#eee',\r\n          borderWidth: 1,\r\n          textStyle: {\r\n            color: '#333'\r\n          },\r\n          extraCssText: 'box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);'\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'value',\r\n          name: '销售额(元)',\r\n          nameTextStyle: {\r\n            color: '#606266'\r\n          },\r\n          axisLine: {\r\n            show: true,\r\n            lineStyle: {\r\n              color: '#dcdfe6'\r\n            }\r\n          },\r\n          splitLine: {\r\n            lineStyle: {\r\n              color: '#ebeef5'\r\n            }\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'category',\r\n          data: data.merchantNames || [],\r\n          axisLabel: {\r\n            interval: 0,\r\n            rotate: 0,\r\n            color: '#606266'\r\n          },\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#dcdfe6'\r\n            }\r\n          }\r\n        },\r\n        visualMap: {\r\n          min: 0,\r\n          max: Math.max(...(data.salesValues || [0])),\r\n          text: ['高', '低'],\r\n          inRange: {\r\n            color: ['#67C23A', '#409EFF']\r\n          },\r\n          calculable: true,\r\n          orient: 'horizontal',\r\n          left: 'center',\r\n          bottom: '0%',\r\n          show: false\r\n        },\r\n        series: [{\r\n          name: '销售额',\r\n          type: 'bar',\r\n          data: data.salesValues || [],\r\n          barWidth: '50%',\r\n          itemStyle: {\r\n            color: function (params) {\r\n              const value = params.value;\r\n              const max = Math.max(...(data.salesValues || [0]));\r\n              return new echarts.graphic.LinearGradient(0, 0, 1, 0, [\r\n                { offset: 0, color: '#67C23A' },\r\n                { offset: value / max, color: '#409EFF' }\r\n              ]);\r\n            },\r\n            borderRadius: [0, 4, 4, 0]\r\n          },\r\n          label: {\r\n            show: true,\r\n            position: 'right',\r\n            formatter: '{c} 元'\r\n          }\r\n        }]\r\n      };\r\n\r\n      merchantRankingChartInstance.setOption(option);\r\n    };\r\n\r\n    // 渲染产品销售排行图\r\n    const renderProductRankingChart = (data) => {\r\n      const option = {\r\n        title: {\r\n          text: data.title || '产品销售排行',\r\n          subtext: '按销售额排名'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          },\r\n          formatter: '{b}: {c} 元',\r\n          backgroundColor: 'rgba(255,255,255,0.8)',\r\n          borderColor: '#eee',\r\n          borderWidth: 1,\r\n          textStyle: {\r\n            color: '#333'\r\n          },\r\n          extraCssText: 'box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);'\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'value',\r\n          name: '销售额(元)',\r\n          nameTextStyle: {\r\n            color: '#606266'\r\n          },\r\n          axisLine: {\r\n            show: true,\r\n            lineStyle: {\r\n              color: '#dcdfe6'\r\n            }\r\n          },\r\n          splitLine: {\r\n            lineStyle: {\r\n              color: '#ebeef5'\r\n            }\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'category',\r\n          data: data.productNames || [],\r\n          axisLabel: {\r\n            interval: 0,\r\n            rotate: 0,\r\n            color: '#606266'\r\n          },\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#dcdfe6'\r\n            }\r\n          }\r\n        },\r\n        series: [{\r\n          name: '销售额',\r\n          type: 'bar',\r\n          data: data.salesValues || [],\r\n          barWidth: '50%',\r\n          itemStyle: {\r\n            color: function (params) {\r\n              const colorList = ['#67C23A', '#409EFF', '#E6A23C', '#F56C6C', '#909399'];\r\n              return new echarts.graphic.LinearGradient(0, 0, 1, 0, [\r\n                { offset: 0, color: '#E6A23C' },\r\n                { offset: 1, color: colorList[params.dataIndex % colorList.length] }\r\n              ]);\r\n            },\r\n            borderRadius: [0, 4, 4, 0]\r\n          },\r\n          label: {\r\n            show: true,\r\n            position: 'right',\r\n            formatter: '{c} 元'\r\n          }\r\n        }]\r\n      };\r\n\r\n      productRankingChartInstance.setOption(option);\r\n    };\r\n\r\n    // 渲染区域销售分布图\r\n    const renderRegionalDistributionChart = (data) => {\r\n      const option = {\r\n        title: {\r\n          text: data.title || '区域销售分布',\r\n          subtext: '按地区统计'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{b}: {c} 元 ({d}%)',\r\n          backgroundColor: 'rgba(255,255,255,0.8)',\r\n          borderColor: '#eee',\r\n          borderWidth: 1,\r\n          textStyle: {\r\n            color: '#333'\r\n          },\r\n          extraCssText: 'box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);'\r\n        },\r\n        legend: {\r\n          type: 'scroll',\r\n          orient: 'vertical',\r\n          right: 10,\r\n          top: 20,\r\n          bottom: 20,\r\n          textStyle: {\r\n            color: '#606266'\r\n          }\r\n        },\r\n        series: [{\r\n          name: '区域销售',\r\n          type: 'pie',\r\n          radius: ['40%', '70%'],\r\n          center: ['40%', '50%'],\r\n          avoidLabelOverlap: true,\r\n          itemStyle: {\r\n            borderRadius: 4,\r\n            borderColor: '#fff',\r\n            borderWidth: 2\r\n          },\r\n          label: {\r\n            show: false,\r\n            position: 'center'\r\n          },\r\n          emphasis: {\r\n            label: {\r\n              show: true,\r\n              fontSize: '18',\r\n              fontWeight: 'bold'\r\n            }\r\n          },\r\n          labelLine: {\r\n            show: false\r\n          },\r\n          data: data.regions ? data.regions.map((region, index) => {\r\n            return {\r\n              name: region,\r\n              value: data.values[index]\r\n            };\r\n          }) : []\r\n        }]\r\n      };\r\n\r\n      regionalDistributionChartInstance.setOption(option);\r\n    };\r\n\r\n    // 渲染订单状态分布图\r\n    const renderOrderStatusDistributionChart = (data) => {\r\n      const option = {\r\n        title: {\r\n          text: data.title || '订单状态分布',\r\n          subtext: '按状态统计'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{a} <br/>{b}: {c} ({d}%)',\r\n          backgroundColor: 'rgba(255,255,255,0.8)',\r\n          borderColor: '#eee',\r\n          borderWidth: 1,\r\n          textStyle: {\r\n            color: '#333'\r\n          },\r\n          extraCssText: 'box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 10,\r\n          top: 'center',\r\n          textStyle: {\r\n            color: '#606266'\r\n          }\r\n        },\r\n        series: [{\r\n          name: '订单状态',\r\n          type: 'pie',\r\n          radius: ['40%', '70%'],\r\n          avoidLabelOverlap: false,\r\n          itemStyle: {\r\n            borderRadius: 4,\r\n            borderColor: '#fff',\r\n            borderWidth: 2\r\n          },\r\n          label: {\r\n            show: false,\r\n            position: 'center'\r\n          },\r\n          emphasis: {\r\n            label: {\r\n              show: true,\r\n              fontSize: '18',\r\n              fontWeight: 'bold'\r\n            }\r\n          },\r\n          labelLine: {\r\n            show: false\r\n          },\r\n          data: data.data ? data.data.map(item => {\r\n            // 为不同状态设置不同颜色\r\n            const colorMap = {\r\n              '待处理': '#E6A23C',\r\n              '已发货': '#409EFF',\r\n              '已完成': '#67C23A',\r\n              '已退款': '#F56C6C'\r\n            };\r\n\r\n            return {\r\n              ...item,\r\n              itemStyle: {\r\n                color: colorMap[item.name] || undefined\r\n              }\r\n            };\r\n          }) : []\r\n        }]\r\n      };\r\n\r\n      orderStatusDistributionChartInstance.setOption(option);\r\n    };\r\n\r\n    // 格式化货币\r\n    const formatCurrency = (value) => {\r\n      if (value === undefined || value === null) return '¥0.00';\r\n      return '¥' + parseFloat(value).toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','); // 添加千位分隔符\r\n    };\r\n\r\n    // 组件挂载\r\n    onMounted(async () => {\r\n      await nextTick();\r\n      initCharts();\r\n      fetchDashboardData();\r\n\r\n      // 显示欢迎提示\r\n      ElNotification({\r\n        title: '数据仪表板已加载',\r\n        message: '欢迎使用平台数据可视化系统',\r\n        type: 'success',\r\n        duration: 3000\r\n      });\r\n    });\r\n\r\n    // 组件卸载\r\n    onUnmounted(() => {\r\n      // 销毁图表实例，避免内存泄漏\r\n      salesTrendChartInstance && salesTrendChartInstance.dispose();\r\n      merchantRankingChartInstance && merchantRankingChartInstance.dispose();\r\n      productRankingChartInstance && productRankingChartInstance.dispose();\r\n      regionalDistributionChartInstance && regionalDistributionChartInstance.dispose();\r\n      orderStatusDistributionChartInstance && orderStatusDistributionChartInstance.dispose();\r\n\r\n      // 移除窗口大小变化监听\r\n      window.removeEventListener('resize', handleResize);\r\n    });\r\n\r\n    return {\r\n      salesTrendChart,\r\n      merchantRankingChart,\r\n      productRankingChart,\r\n      regionalDistributionChart,\r\n      orderStatusDistributionChart,\r\n      loading,\r\n      timeFilter,\r\n      timeFilterLabel,\r\n      salesOverview,\r\n      fetchDashboardData,\r\n      formatCurrency,\r\n      selectedChartType,\r\n      isChartVisible,\r\n      handleChartTypeChange\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.admin-visualization-view {\r\n  padding: 20px;\r\n}\r\n\r\n.view-header {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.view-header h2 {\r\n  margin-top: 10px;\r\n}\r\n\r\n.admin-visualization-dashboard {\r\n  padding: 20px;\r\n}\r\n\r\n.dashboard-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.toolbar {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.dashboard-cards {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.data-card {\r\n  margin-bottom: 20px;\r\n  height: 100%;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.card-content {\r\n  text-align: center;\r\n  padding: 10px 0;\r\n}\r\n\r\n.chart-card {\r\n  margin-bottom: 20px;\r\n  height: 100%;\r\n}\r\n\r\n.chart-container {\r\n  height: 350px;\r\n  width: 100%;\r\n}\r\n\r\n.chart {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n.dashboard-charts {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":";;AAiNA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,QAAO,QAAS,KAAK;AAC/E,SAASC,SAAS,EAAEC,cAAa,QAAS,cAAc;AACxD,SAASC,OAAM,QAAS,yBAAyB;AACjD,OAAO,KAAKC,OAAM,MAAO,SAAS;AAClC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,4BAA4B;EAClCC,UAAU,EAAE;IACVJ;EACF,CAAC;EACDK,KAAKA,CAAA,EAAG;IACN;IACA,MAAMC,eAAc,GAAId,GAAG,CAAC,IAAI,CAAC;IACjC,MAAMe,oBAAmB,GAAIf,GAAG,CAAC,IAAI,CAAC;IACtC,MAAMgB,mBAAkB,GAAIhB,GAAG,CAAC,IAAI,CAAC;IACrC,MAAMiB,yBAAwB,GAAIjB,GAAG,CAAC,IAAI,CAAC;IAC3C,MAAMkB,4BAA2B,GAAIlB,GAAG,CAAC,IAAI,CAAC;;IAE9C;IACA,IAAImB,uBAAsB,GAAI,IAAI;IAClC,IAAIC,4BAA2B,GAAI,IAAI;IACvC,IAAIC,2BAA0B,GAAI,IAAI;IACtC,IAAIC,iCAAgC,GAAI,IAAI;IAC5C,IAAIC,oCAAmC,GAAI,IAAI;;IAE/C;IACA,MAAMC,OAAM,GAAIvB,QAAQ,CAAC;MACvBwB,SAAS,EAAE,KAAK;MAChBC,UAAU,EAAE,KAAK;MACjBC,eAAe,EAAE,KAAK;MACtBC,cAAc,EAAE,KAAK;MACrBC,oBAAoB,EAAE,KAAK;MAC3BC,uBAAuB,EAAE;IAC3B,CAAC,CAAC;IAEF,MAAMC,UAAS,GAAI/B,GAAG,CAAC,SAAS,CAAC;IACjC,MAAMgC,eAAc,GAAI3B,QAAQ,CAAC,MAAM;MACrC,QAAQ0B,UAAU,CAACE,KAAK;QACtB,KAAK,OAAO;UAAE,OAAO,IAAI;QACzB,KAAK,QAAQ;UAAE,OAAO,IAAI;QAC1B,KAAK,SAAS;UAAE,OAAO,IAAI;QAC3B;UAAS,OAAO,IAAI;MACtB;IACF,CAAC,CAAC;;IAEF;IACA,MAAMC,iBAAgB,GAAIlC,GAAG,CAAC,KAAK,CAAC;;IAEpC;IACA,MAAMmC,cAAa,GAAKC,SAAS,IAAK;MACpC,OAAOF,iBAAiB,CAACD,KAAI,KAAM,KAAI,IAAKC,iBAAiB,CAACD,KAAI,KAAMG,SAAS;IACnF,CAAC;;IAED;IACA,MAAMC,qBAAoB,GAAKJ,KAAK,IAAK;MACvC;MACA7B,QAAQ,CAAC,MAAM;QACb,IAAI6B,KAAI,KAAM,KAAI,IAAKA,KAAI,KAAM,OAAO,EAAE;UACxCd,uBAAsB,IAAKA,uBAAuB,CAACmB,MAAM,CAAC,CAAC;QAC7D;QACA,IAAIL,KAAI,KAAM,KAAI,IAAKA,KAAI,KAAM,UAAU,EAAE;UAC3Cb,4BAA2B,IAAKA,4BAA4B,CAACkB,MAAM,CAAC,CAAC;QACvE;QACA,IAAIL,KAAI,KAAM,KAAI,IAAKA,KAAI,KAAM,SAAS,EAAE;UAC1CZ,2BAA0B,IAAKA,2BAA2B,CAACiB,MAAM,CAAC,CAAC;QACrE;QACA,IAAIL,KAAI,KAAM,KAAI,IAAKA,KAAI,KAAM,QAAQ,EAAE;UACzCX,iCAAgC,IAAKA,iCAAiC,CAACgB,MAAM,CAAC,CAAC;QACjF;QACA,IAAIL,KAAI,KAAM,KAAI,IAAKA,KAAI,KAAM,QAAQ,EAAE;UACzCV,oCAAmC,IAAKA,oCAAoC,CAACe,MAAM,CAAC,CAAC;QACvF;MACF,CAAC,CAAC;;MAEF;MACA/B,cAAc,CAAC;QACbgC,KAAK,EAAE,SAAS;QAChBC,OAAO,EAAEP,KAAI,KAAM,KAAI,GAAI,QAAO,GAAI,MAAMQ,gBAAgB,CAACR,KAAK,CAAC,IAAI;QACvES,IAAI,EAAE,SAAS;QACfC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ,CAAC;;IAED;IACA,MAAMF,gBAAe,GAAKL,SAAS,IAAK;MACtC,QAAQA,SAAS;QACf,KAAK,OAAO;UAAE,OAAO,MAAM;QAC3B,KAAK,UAAU;UAAE,OAAO,QAAQ;QAChC,KAAK,SAAS;UAAE,OAAO,QAAQ;QAC/B,KAAK,QAAQ;UAAE,OAAO,QAAQ;QAC9B,KAAK,QAAQ;UAAE,OAAO,QAAQ;QAC9B;UAAS,OAAO,EAAE;MACpB;IACF,CAAC;IAED,MAAMQ,aAAY,GAAI3C,QAAQ,CAAC;MAC7B4C,UAAU,EAAE,CAAC;MACbC,WAAW,EAAE,CAAC;MACdC,aAAa,EAAE,CAAC;MAChBC,aAAa,EAAE,CAAC;MAChBC,eAAe,EAAE,CAAC;MAClBC,WAAW,EAAE,CAAC;MACdC,aAAa,EAAE,CAAC;MAChBC,mBAAmB,EAAE;IACvB,CAAC,CAAC;;IAEF;IACA,MAAMC,UAAS,GAAIA,CAAA,KAAM;MACvB;MACA,MAAMC,KAAI,GAAI;QACZC,KAAK,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;QAC/FC,eAAe,EAAE,uBAAuB;QACxCC,SAAS,EAAE;UACTC,UAAU,EAAE;QACd,CAAC;QACDnB,KAAK,EAAE;UACLkB,SAAS,EAAE;YACTF,KAAK,EAAE,SAAS;YAChBI,QAAQ,EAAE,EAAE;YACZC,UAAU,EAAE;UACd,CAAC;UACDC,IAAI,EAAE;QACR,CAAC;QACDC,MAAM,EAAE;UACNL,SAAS,EAAE;YACTF,KAAK,EAAE;UACT;QACF,CAAC;QACDQ,IAAI,EAAE;UACJC,YAAY,EAAE,IAAI;UAClBH,IAAI,EAAE,IAAI;UACVI,KAAK,EAAE,IAAI;UACXC,MAAM,EAAE;QACV;MACF,CAAC;MAEDzD,OAAO,CAAC0D,aAAa,CAAC,WAAW,EAAEb,KAAK,CAAC;;MAEzC;MACAnC,uBAAsB,GAAIV,OAAO,CAAC2D,IAAI,CAACtD,eAAe,CAACmB,KAAK,EAAE,WAAW,CAAC;;MAE1E;MACAb,4BAA2B,GAAIX,OAAO,CAAC2D,IAAI,CAACrD,oBAAoB,CAACkB,KAAK,EAAE,WAAW,CAAC;;MAEpF;MACAZ,2BAA0B,GAAIZ,OAAO,CAAC2D,IAAI,CAACpD,mBAAmB,CAACiB,KAAK,EAAE,WAAW,CAAC;;MAElF;MACAX,iCAAgC,GAAIb,OAAO,CAAC2D,IAAI,CAACnD,yBAAyB,CAACgB,KAAK,EAAE,WAAW,CAAC;;MAE9F;MACAV,oCAAmC,GAAId,OAAO,CAAC2D,IAAI,CAAClD,4BAA4B,CAACe,KAAK,EAAE,WAAW,CAAC;;MAEpG;MACAoC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEC,YAAY,CAAC;IACjD,CAAC;;IAED;IACA,MAAMA,YAAW,GAAIA,CAAA,KAAM;MACzB,IAAIpC,cAAc,CAAC,OAAO,CAAC,EAAE;QAC3BhB,uBAAsB,IAAKA,uBAAuB,CAACmB,MAAM,CAAC,CAAC;MAC7D;MACA,IAAIH,cAAc,CAAC,UAAU,CAAC,EAAE;QAC9Bf,4BAA2B,IAAKA,4BAA4B,CAACkB,MAAM,CAAC,CAAC;MACvE;MACA,IAAIH,cAAc,CAAC,SAAS,CAAC,EAAE;QAC7Bd,2BAA0B,IAAKA,2BAA2B,CAACiB,MAAM,CAAC,CAAC;MACrE;MACA,IAAIH,cAAc,CAAC,QAAQ,CAAC,EAAE;QAC5Bb,iCAAgC,IAAKA,iCAAiC,CAACgB,MAAM,CAAC,CAAC;MACjF;MACA,IAAIH,cAAc,CAAC,QAAQ,CAAC,EAAE;QAC5BZ,oCAAmC,IAAKA,oCAAoC,CAACe,MAAM,CAAC,CAAC;MACvF;IACF,CAAC;;IAED;IACA;IACA,MAAMkC,kBAAiB,GAAI,MAAAA,CAAA,KAAY;MACrC,IAAI;QACFhD,OAAO,CAACC,SAAQ,GAAI,IAAI;QAExB,MAAMgD,QAAO,GAAI,MAAM/D,KAAK,CAACgE,GAAG,CAAC,uEAAuE3C,UAAU,CAACE,KAAK,EAAE,CAAC;QAC3H,MAAM0C,aAAY,GAAIF,QAAQ,CAACG,IAAI;;QAEnC;QACAC,MAAM,CAACC,MAAM,CAAClC,aAAa,EAAE+B,aAAa,CAAC/B,aAAa,CAAC;;QAEzD;QACA,MAAMxC,QAAQ,CAAC,CAAC;;QAEhB;QACA,IAAI,CAACe,uBAAsB,IAAKL,eAAe,CAACmB,KAAK,EAAE;UACrDd,uBAAsB,GAAIV,OAAO,CAAC2D,IAAI,CAACtD,eAAe,CAACmB,KAAK,EAAE,WAAW,CAAC;QAC5E;QACA,IAAI,CAACb,4BAA2B,IAAKL,oBAAoB,CAACkB,KAAK,EAAE;UAC/Db,4BAA2B,GAAIX,OAAO,CAAC2D,IAAI,CAACrD,oBAAoB,CAACkB,KAAK,EAAE,WAAW,CAAC;QACtF;QACA,IAAI,CAACZ,2BAA0B,IAAKL,mBAAmB,CAACiB,KAAK,EAAE;UAC7DZ,2BAA0B,GAAIZ,OAAO,CAAC2D,IAAI,CAACpD,mBAAmB,CAACiB,KAAK,EAAE,WAAW,CAAC;QACpF;QACA,IAAI,CAACX,iCAAgC,IAAKL,yBAAyB,CAACgB,KAAK,EAAE;UACzEX,iCAAgC,GAAIb,OAAO,CAAC2D,IAAI,CAACnD,yBAAyB,CAACgB,KAAK,EAAE,WAAW,CAAC;QAChG;QACA,IAAI,CAACV,oCAAmC,IAAKL,4BAA4B,CAACe,KAAK,EAAE;UAC/EV,oCAAmC,GAAId,OAAO,CAAC2D,IAAI,CAAClD,4BAA4B,CAACe,KAAK,EAAE,WAAW,CAAC;QACtG;;QAEA;QACA8C,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEL,aAAa,CAAC;;QAEtC;QACA,IAAIA,aAAa,CAACjD,UAAS,IAAKmD,MAAM,CAACI,IAAI,CAACN,aAAa,CAACjD,UAAU,CAAC,CAACwD,MAAK,GAAI,CAAC,EAAE;UAChFC,qBAAqB,CAACR,aAAa,CAACjD,UAAU,CAAC;QACjD,OAAO;UACLqD,OAAO,CAACK,IAAI,CAAC,UAAU,CAAC;QAC1B;QAEA,IAAIT,aAAa,CAAChD,eAAc,IAAKkD,MAAM,CAACI,IAAI,CAACN,aAAa,CAAChD,eAAe,CAAC,CAACuD,MAAK,GAAI,CAAC,EAAE;UAC1FG,0BAA0B,CAACV,aAAa,CAAChD,eAAe,CAAC;QAC3D,OAAO;UACLoD,OAAO,CAACK,IAAI,CAAC,UAAU,CAAC;QAC1B;QAEA,IAAIT,aAAa,CAAC/C,cAAa,IAAKiD,MAAM,CAACI,IAAI,CAACN,aAAa,CAAC/C,cAAc,CAAC,CAACsD,MAAK,GAAI,CAAC,EAAE;UACxFI,yBAAyB,CAACX,aAAa,CAAC/C,cAAc,CAAC;QACzD,OAAO;UACLmD,OAAO,CAACK,IAAI,CAAC,UAAU,CAAC;QAC1B;QAEA,IAAIT,aAAa,CAAC9C,oBAAmB,IAAKgD,MAAM,CAACI,IAAI,CAACN,aAAa,CAAC9C,oBAAoB,CAAC,CAACqD,MAAK,GAAI,CAAC,EAAE;UACpGK,+BAA+B,CAACZ,aAAa,CAAC9C,oBAAoB,CAAC;QACrE,OAAO;UACLkD,OAAO,CAACK,IAAI,CAAC,UAAU,CAAC;QAC1B;QAEA,IAAIT,aAAa,CAAC7C,uBAAsB,IAAK+C,MAAM,CAACI,IAAI,CAACN,aAAa,CAAC7C,uBAAuB,CAAC,CAACoD,MAAK,GAAI,CAAC,EAAE;UAC1GM,kCAAkC,CAACb,aAAa,CAAC7C,uBAAuB,CAAC;QAC3E,OAAO;UACLiD,OAAO,CAACK,IAAI,CAAC,UAAU,CAAC;QAC1B;QAEA9E,SAAS,CAAC;UACRkC,OAAO,EAAE,SAAS;UAClBE,IAAI,EAAE,SAAS;UACfC,QAAQ,EAAE;QACZ,CAAC,CAAC;MAEJ,EAAE,OAAO8C,KAAK,EAAE;QACdV,OAAO,CAACU,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjCnF,SAAS,CAAC;UACRkC,OAAO,EAAE,aAAY,IAAKiD,KAAK,CAAChB,QAAQ,EAAEG,IAAI,EAAEpC,OAAM,IAAKiD,KAAK,CAACjD,OAAO,CAAC;UACzEE,IAAI,EAAE;QACR,CAAC,CAAC;MACJ,UAAU;QACRlB,OAAO,CAACC,SAAQ,GAAI,KAAK;MAC3B;IACF,CAAC;;IAED;IACA,MAAM0D,qBAAoB,GAAKP,IAAI,IAAK;MACtC,MAAMc,MAAK,GAAI;QACbnD,KAAK,EAAE;UACLoD,IAAI,EAAEf,IAAI,CAACrC,KAAI,IAAK,QAAQ;UAC5BqD,OAAO,EAAE,IAAI5D,eAAe,CAACC,KAAK;QACpC,CAAC;QACD4D,OAAO,EAAE;UACPC,OAAO,EAAE,MAAM;UACfC,SAAS,EAAE,YAAY;UACvBvC,eAAe,EAAE,uBAAuB;UACxCwC,WAAW,EAAE,MAAM;UACnBC,WAAW,EAAE,CAAC;UACdxC,SAAS,EAAE;YACTF,KAAK,EAAE;UACT,CAAC;UACD2C,YAAY,EAAE;QAChB,CAAC;QACDnC,IAAI,EAAE;UACJF,IAAI,EAAE,IAAI;UACVI,KAAK,EAAE,IAAI;UACXC,MAAM,EAAE,IAAI;UACZF,YAAY,EAAE;QAChB,CAAC;QACDmC,KAAK,EAAE;UACLzD,IAAI,EAAE,UAAU;UAChBkC,IAAI,EAAEA,IAAI,CAACuB,KAAI,IAAK,EAAE;UACtBC,WAAW,EAAE,KAAK;UAClBC,QAAQ,EAAE;YACRC,cAAc,EAAE;UAClB,CAAC;UACDC,QAAQ,EAAE;YACRC,SAAS,EAAE;cACTjD,KAAK,EAAE;YACT;UACF,CAAC;UACDkD,SAAS,EAAE;YACTlD,KAAK,EAAE,SAAS;YAChBmD,MAAM,EAAE9B,IAAI,CAACuB,KAAI,IAAKvB,IAAI,CAACuB,KAAK,CAACjB,MAAK,GAAI,EAAC,GAAI,EAAC,GAAI;UACtD;QACF,CAAC;QACDyB,KAAK,EAAE;UACLjE,IAAI,EAAE,OAAO;UACb/B,IAAI,EAAE,QAAQ;UACdiG,aAAa,EAAE;YACbrD,KAAK,EAAE;UACT,CAAC;UACDgD,QAAQ,EAAE;YACRM,IAAI,EAAE,IAAI;YACVL,SAAS,EAAE;cACTjD,KAAK,EAAE;YACT;UACF,CAAC;UACDuD,SAAS,EAAE;YACTN,SAAS,EAAE;cACTjD,KAAK,EAAE;YACT;UACF;QACF,CAAC;QACDwD,MAAM,EAAE,CAAC;UACPpG,IAAI,EAAE,KAAK;UACX+B,IAAI,EAAE,MAAM;UACZkC,IAAI,EAAEA,IAAI,CAACmC,MAAK,IAAK,EAAE;UACvBC,MAAM,EAAE,IAAI;UACZC,MAAM,EAAE,QAAQ;UAChBC,UAAU,EAAE,CAAC;UACbC,SAAS,EAAE;YACT5D,KAAK,EAAE;UACT,CAAC;UACDiD,SAAS,EAAE;YACTY,KAAK,EAAE;UACT,CAAC;UACDC,SAAS,EAAE;YACT9D,KAAK,EAAE,IAAI9C,OAAO,CAAC6G,OAAO,CAACC,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CACpD;cAAEC,MAAM,EAAE,CAAC;cAAEjE,KAAK,EAAE;YAA0B,CAAC,EAC/C;cAAEiE,MAAM,EAAE,CAAC;cAAEjE,KAAK,EAAE;YAA0B,EAC/C;UACH,CAAC;UACDkE,SAAS,EAAE;YACT7C,IAAI,EAAE,CACJ;cAAElC,IAAI,EAAE,KAAK;cAAE/B,IAAI,EAAE;YAAM,CAAC,EAC5B;cAAE+B,IAAI,EAAE,KAAK;cAAE/B,IAAI,EAAE;YAAM;UAE/B,CAAC;UACD+G,QAAQ,EAAE;YACR9C,IAAI,EAAE,CACJ;cAAElC,IAAI,EAAE,SAAS;cAAE/B,IAAI,EAAE;YAAM;UAEnC;QACF,CAAC;MACH,CAAC;MAEDQ,uBAAuB,CAACwG,SAAS,CAACjC,MAAM,CAAC;IAC3C,CAAC;;IAED;IACA,MAAML,0BAAyB,GAAKT,IAAI,IAAK;MAC3C,MAAMc,MAAK,GAAI;QACbnD,KAAK,EAAE;UACLoD,IAAI,EAAEf,IAAI,CAACrC,KAAI,IAAK,QAAQ;UAC5BqD,OAAO,EAAE;QACX,CAAC;QACDC,OAAO,EAAE;UACPC,OAAO,EAAE,MAAM;UACf8B,WAAW,EAAE;YACXlF,IAAI,EAAE;UACR,CAAC;UACDqD,SAAS,EAAE,YAAY;UACvBvC,eAAe,EAAE,uBAAuB;UACxCwC,WAAW,EAAE,MAAM;UACnBC,WAAW,EAAE,CAAC;UACdxC,SAAS,EAAE;YACTF,KAAK,EAAE;UACT,CAAC;UACD2C,YAAY,EAAE;QAChB,CAAC;QACDnC,IAAI,EAAE;UACJF,IAAI,EAAE,IAAI;UACVI,KAAK,EAAE,IAAI;UACXC,MAAM,EAAE,IAAI;UACZF,YAAY,EAAE;QAChB,CAAC;QACDmC,KAAK,EAAE;UACLzD,IAAI,EAAE,OAAO;UACb/B,IAAI,EAAE,QAAQ;UACdiG,aAAa,EAAE;YACbrD,KAAK,EAAE;UACT,CAAC;UACDgD,QAAQ,EAAE;YACRM,IAAI,EAAE,IAAI;YACVL,SAAS,EAAE;cACTjD,KAAK,EAAE;YACT;UACF,CAAC;UACDuD,SAAS,EAAE;YACTN,SAAS,EAAE;cACTjD,KAAK,EAAE;YACT;UACF;QACF,CAAC;QACDoD,KAAK,EAAE;UACLjE,IAAI,EAAE,UAAU;UAChBkC,IAAI,EAAEA,IAAI,CAACiD,aAAY,IAAK,EAAE;UAC9BpB,SAAS,EAAE;YACTqB,QAAQ,EAAE,CAAC;YACXpB,MAAM,EAAE,CAAC;YACTnD,KAAK,EAAE;UACT,CAAC;UACDgD,QAAQ,EAAE;YACRC,SAAS,EAAE;cACTjD,KAAK,EAAE;YACT;UACF;QACF,CAAC;QACDwE,SAAS,EAAE;UACTC,GAAG,EAAE,CAAC;UACNC,GAAG,EAAEC,IAAI,CAACD,GAAG,CAAC,IAAIrD,IAAI,CAACuD,WAAU,IAAK,CAAC,CAAC,CAAC,CAAC,CAAC;UAC3CxC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;UAChByC,OAAO,EAAE;YACP7E,KAAK,EAAE,CAAC,SAAS,EAAE,SAAS;UAC9B,CAAC;UACD8E,UAAU,EAAE,IAAI;UAChBC,MAAM,EAAE,YAAY;UACpBzE,IAAI,EAAE,QAAQ;UACdK,MAAM,EAAE,IAAI;UACZ2C,IAAI,EAAE;QACR,CAAC;QACDE,MAAM,EAAE,CAAC;UACPpG,IAAI,EAAE,KAAK;UACX+B,IAAI,EAAE,KAAK;UACXkC,IAAI,EAAEA,IAAI,CAACuD,WAAU,IAAK,EAAE;UAC5BI,QAAQ,EAAE,KAAK;UACfpB,SAAS,EAAE;YACT5D,KAAK,EAAE,SAAAA,CAAUiF,MAAM,EAAE;cACvB,MAAMvG,KAAI,GAAIuG,MAAM,CAACvG,KAAK;cAC1B,MAAMgG,GAAE,GAAIC,IAAI,CAACD,GAAG,CAAC,IAAIrD,IAAI,CAACuD,WAAU,IAAK,CAAC,CAAC,CAAC,CAAC,CAAC;cAClD,OAAO,IAAI1H,OAAO,CAAC6G,OAAO,CAACC,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CACpD;gBAAEC,MAAM,EAAE,CAAC;gBAAEjE,KAAK,EAAE;cAAU,CAAC,EAC/B;gBAAEiE,MAAM,EAAEvF,KAAI,GAAIgG,GAAG;gBAAE1E,KAAK,EAAE;cAAU,EACzC,CAAC;YACJ,CAAC;YACDkF,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;UAC3B,CAAC;UACDC,KAAK,EAAE;YACL7B,IAAI,EAAE,IAAI;YACV8B,QAAQ,EAAE,OAAO;YACjB5C,SAAS,EAAE;UACb;QACF,CAAC;MACH,CAAC;MAED3E,4BAA4B,CAACuG,SAAS,CAACjC,MAAM,CAAC;IAChD,CAAC;;IAED;IACA,MAAMJ,yBAAwB,GAAKV,IAAI,IAAK;MAC1C,MAAMc,MAAK,GAAI;QACbnD,KAAK,EAAE;UACLoD,IAAI,EAAEf,IAAI,CAACrC,KAAI,IAAK,QAAQ;UAC5BqD,OAAO,EAAE;QACX,CAAC;QACDC,OAAO,EAAE;UACPC,OAAO,EAAE,MAAM;UACf8B,WAAW,EAAE;YACXlF,IAAI,EAAE;UACR,CAAC;UACDqD,SAAS,EAAE,YAAY;UACvBvC,eAAe,EAAE,uBAAuB;UACxCwC,WAAW,EAAE,MAAM;UACnBC,WAAW,EAAE,CAAC;UACdxC,SAAS,EAAE;YACTF,KAAK,EAAE;UACT,CAAC;UACD2C,YAAY,EAAE;QAChB,CAAC;QACDnC,IAAI,EAAE;UACJF,IAAI,EAAE,IAAI;UACVI,KAAK,EAAE,IAAI;UACXC,MAAM,EAAE,IAAI;UACZF,YAAY,EAAE;QAChB,CAAC;QACDmC,KAAK,EAAE;UACLzD,IAAI,EAAE,OAAO;UACb/B,IAAI,EAAE,QAAQ;UACdiG,aAAa,EAAE;YACbrD,KAAK,EAAE;UACT,CAAC;UACDgD,QAAQ,EAAE;YACRM,IAAI,EAAE,IAAI;YACVL,SAAS,EAAE;cACTjD,KAAK,EAAE;YACT;UACF,CAAC;UACDuD,SAAS,EAAE;YACTN,SAAS,EAAE;cACTjD,KAAK,EAAE;YACT;UACF;QACF,CAAC;QACDoD,KAAK,EAAE;UACLjE,IAAI,EAAE,UAAU;UAChBkC,IAAI,EAAEA,IAAI,CAACgE,YAAW,IAAK,EAAE;UAC7BnC,SAAS,EAAE;YACTqB,QAAQ,EAAE,CAAC;YACXpB,MAAM,EAAE,CAAC;YACTnD,KAAK,EAAE;UACT,CAAC;UACDgD,QAAQ,EAAE;YACRC,SAAS,EAAE;cACTjD,KAAK,EAAE;YACT;UACF;QACF,CAAC;QACDwD,MAAM,EAAE,CAAC;UACPpG,IAAI,EAAE,KAAK;UACX+B,IAAI,EAAE,KAAK;UACXkC,IAAI,EAAEA,IAAI,CAACuD,WAAU,IAAK,EAAE;UAC5BI,QAAQ,EAAE,KAAK;UACfpB,SAAS,EAAE;YACT5D,KAAK,EAAE,SAAAA,CAAUiF,MAAM,EAAE;cACvB,MAAMK,SAAQ,GAAI,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;cACzE,OAAO,IAAIpI,OAAO,CAAC6G,OAAO,CAACC,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CACpD;gBAAEC,MAAM,EAAE,CAAC;gBAAEjE,KAAK,EAAE;cAAU,CAAC,EAC/B;gBAAEiE,MAAM,EAAE,CAAC;gBAAEjE,KAAK,EAAEsF,SAAS,CAACL,MAAM,CAACM,SAAQ,GAAID,SAAS,CAAC3D,MAAM;cAAE,EACpE,CAAC;YACJ,CAAC;YACDuD,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;UAC3B,CAAC;UACDC,KAAK,EAAE;YACL7B,IAAI,EAAE,IAAI;YACV8B,QAAQ,EAAE,OAAO;YACjB5C,SAAS,EAAE;UACb;QACF,CAAC;MACH,CAAC;MAED1E,2BAA2B,CAACsG,SAAS,CAACjC,MAAM,CAAC;IAC/C,CAAC;;IAED;IACA,MAAMH,+BAA8B,GAAKX,IAAI,IAAK;MAChD,MAAMc,MAAK,GAAI;QACbnD,KAAK,EAAE;UACLoD,IAAI,EAAEf,IAAI,CAACrC,KAAI,IAAK,QAAQ;UAC5BqD,OAAO,EAAE;QACX,CAAC;QACDC,OAAO,EAAE;UACPC,OAAO,EAAE,MAAM;UACfC,SAAS,EAAE,mBAAmB;UAC9BvC,eAAe,EAAE,uBAAuB;UACxCwC,WAAW,EAAE,MAAM;UACnBC,WAAW,EAAE,CAAC;UACdxC,SAAS,EAAE;YACTF,KAAK,EAAE;UACT,CAAC;UACD2C,YAAY,EAAE;QAChB,CAAC;QACDpC,MAAM,EAAE;UACNpB,IAAI,EAAE,QAAQ;UACd4F,MAAM,EAAE,UAAU;UAClBrE,KAAK,EAAE,EAAE;UACT8E,GAAG,EAAE,EAAE;UACP7E,MAAM,EAAE,EAAE;UACVT,SAAS,EAAE;YACTF,KAAK,EAAE;UACT;QACF,CAAC;QACDwD,MAAM,EAAE,CAAC;UACPpG,IAAI,EAAE,MAAM;UACZ+B,IAAI,EAAE,KAAK;UACXsG,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;UACtBC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;UACtBC,iBAAiB,EAAE,IAAI;UACvB/B,SAAS,EAAE;YACTsB,YAAY,EAAE,CAAC;YACfzC,WAAW,EAAE,MAAM;YACnBC,WAAW,EAAE;UACf,CAAC;UACDyC,KAAK,EAAE;YACL7B,IAAI,EAAE,KAAK;YACX8B,QAAQ,EAAE;UACZ,CAAC;UACDQ,QAAQ,EAAE;YACRT,KAAK,EAAE;cACL7B,IAAI,EAAE,IAAI;cACVlD,QAAQ,EAAE,IAAI;cACdC,UAAU,EAAE;YACd;UACF,CAAC;UACDwF,SAAS,EAAE;YACTvC,IAAI,EAAE;UACR,CAAC;UACDjC,IAAI,EAAEA,IAAI,CAACyE,OAAM,GAAIzE,IAAI,CAACyE,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;YACvD,OAAO;cACL7I,IAAI,EAAE4I,MAAM;cACZtH,KAAK,EAAE2C,IAAI,CAAC6E,MAAM,CAACD,KAAK;YAC1B,CAAC;UACH,CAAC,IAAI;QACP,CAAC;MACH,CAAC;MAEDlI,iCAAiC,CAACqG,SAAS,CAACjC,MAAM,CAAC;IACrD,CAAC;;IAED;IACA,MAAMF,kCAAiC,GAAKZ,IAAI,IAAK;MACnD,MAAMc,MAAK,GAAI;QACbnD,KAAK,EAAE;UACLoD,IAAI,EAAEf,IAAI,CAACrC,KAAI,IAAK,QAAQ;UAC5BqD,OAAO,EAAE;QACX,CAAC;QACDC,OAAO,EAAE;UACPC,OAAO,EAAE,MAAM;UACfC,SAAS,EAAE,0BAA0B;UACrCvC,eAAe,EAAE,uBAAuB;UACxCwC,WAAW,EAAE,MAAM;UACnBC,WAAW,EAAE,CAAC;UACdxC,SAAS,EAAE;YACTF,KAAK,EAAE;UACT,CAAC;UACD2C,YAAY,EAAE;QAChB,CAAC;QACDpC,MAAM,EAAE;UACNwE,MAAM,EAAE,UAAU;UAClBzE,IAAI,EAAE,EAAE;UACRkF,GAAG,EAAE,QAAQ;UACbtF,SAAS,EAAE;YACTF,KAAK,EAAE;UACT;QACF,CAAC;QACDwD,MAAM,EAAE,CAAC;UACPpG,IAAI,EAAE,MAAM;UACZ+B,IAAI,EAAE,KAAK;UACXsG,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;UACtBE,iBAAiB,EAAE,KAAK;UACxB/B,SAAS,EAAE;YACTsB,YAAY,EAAE,CAAC;YACfzC,WAAW,EAAE,MAAM;YACnBC,WAAW,EAAE;UACf,CAAC;UACDyC,KAAK,EAAE;YACL7B,IAAI,EAAE,KAAK;YACX8B,QAAQ,EAAE;UACZ,CAAC;UACDQ,QAAQ,EAAE;YACRT,KAAK,EAAE;cACL7B,IAAI,EAAE,IAAI;cACVlD,QAAQ,EAAE,IAAI;cACdC,UAAU,EAAE;YACd;UACF,CAAC;UACDwF,SAAS,EAAE;YACTvC,IAAI,EAAE;UACR,CAAC;UACDjC,IAAI,EAAEA,IAAI,CAACA,IAAG,GAAIA,IAAI,CAACA,IAAI,CAAC0E,GAAG,CAACI,IAAG,IAAK;YACtC;YACA,MAAMC,QAAO,GAAI;cACf,KAAK,EAAE,SAAS;cAChB,KAAK,EAAE,SAAS;cAChB,KAAK,EAAE,SAAS;cAChB,KAAK,EAAE;YACT,CAAC;YAED,OAAO;cACL,GAAGD,IAAI;cACPvC,SAAS,EAAE;gBACT5D,KAAK,EAAEoG,QAAQ,CAACD,IAAI,CAAC/I,IAAI,KAAKiJ;cAChC;YACF,CAAC;UACH,CAAC,IAAI;QACP,CAAC;MACH,CAAC;MAEDrI,oCAAoC,CAACoG,SAAS,CAACjC,MAAM,CAAC;IACxD,CAAC;;IAED;IACA,MAAMmE,cAAa,GAAK5H,KAAK,IAAK;MAChC,IAAIA,KAAI,KAAM2H,SAAQ,IAAK3H,KAAI,KAAM,IAAI,EAAE,OAAO,OAAO;MACzD,OAAO,GAAE,GAAI6H,UAAU,CAAC7H,KAAK,CAAC,CAAC8H,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC,EAAE;IACnF,CAAC;;IAED;IACA9J,SAAS,CAAC,YAAY;MACpB,MAAME,QAAQ,CAAC,CAAC;MAChBiD,UAAU,CAAC,CAAC;MACZmB,kBAAkB,CAAC,CAAC;;MAEpB;MACAjE,cAAc,CAAC;QACbgC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE,eAAe;QACxBE,IAAI,EAAE,SAAS;QACfC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACAxC,WAAW,CAAC,MAAM;MAChB;MACAgB,uBAAsB,IAAKA,uBAAuB,CAAC8I,OAAO,CAAC,CAAC;MAC5D7I,4BAA2B,IAAKA,4BAA4B,CAAC6I,OAAO,CAAC,CAAC;MACtE5I,2BAA0B,IAAKA,2BAA2B,CAAC4I,OAAO,CAAC,CAAC;MACpE3I,iCAAgC,IAAKA,iCAAiC,CAAC2I,OAAO,CAAC,CAAC;MAChF1I,oCAAmC,IAAKA,oCAAoC,CAAC0I,OAAO,CAAC,CAAC;;MAEtF;MACA5F,MAAM,CAAC6F,mBAAmB,CAAC,QAAQ,EAAE3F,YAAY,CAAC;IACpD,CAAC,CAAC;IAEF,OAAO;MACLzD,eAAe;MACfC,oBAAoB;MACpBC,mBAAmB;MACnBC,yBAAyB;MACzBC,4BAA4B;MAC5BM,OAAO;MACPO,UAAU;MACVC,eAAe;MACfY,aAAa;MACb4B,kBAAkB;MAClBqF,cAAc;MACd3H,iBAAiB;MACjBC,cAAc;MACdE;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}