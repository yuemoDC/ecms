{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  slot: \"footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createBlock(_component_el_dialog, {\n    visible: $data.visible,\n    title: \"Product Form\",\n    onClose: $options.handleClose\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      model: $data.form,\n      \"label-width\": \"120px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"Product Name\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.form.productName,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.productName = $event),\n          required: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"Price\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"number\",\n          modelValue: $data.form.price,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.price = $event),\n          required: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"Status\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $data.form.status,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.form.status = $event),\n          placeholder: \"Select Status\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_option, {\n            label: \"Active\",\n            value: \"active\"\n          }), _createVNode(_component_el_option, {\n            label: \"Inactive\",\n            value: \"inactive\"\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"]), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_el_button, {\n      onClick: $options.handleClose\n    }, {\n      default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"Cancel\")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $options.submitForm\n    }, {\n      default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"Save\")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\", \"onClose\"]);\n}","map":{"version":3,"names":["slot","_createBlock","_component_el_dialog","visible","$data","title","onClose","$options","handleClose","default","_withCtx","_createVNode","_component_el_form","model","form","_component_el_form_item","label","_component_el_input","modelValue","productName","_cache","$event","required","_","type","price","_component_el_select","status","placeholder","_component_el_option","value","_createElementVNode","_hoisted_1","_component_el_button","onClick","_createTextVNode","submitForm"],"sources":["E:\\ecms\\ecmsvue\\src\\components\\ProductForm.vue"],"sourcesContent":["<template>\r\n  <el-dialog :visible.sync=\"visible\" title=\"Product Form\" @close=\"handleClose\">\r\n    <el-form :model=\"form\" label-width=\"120px\">\r\n      <el-form-item label=\"Product Name\">\r\n        <el-input v-model=\"form.productName\" required />\r\n      </el-form-item>\r\n      <el-form-item label=\"Price\">\r\n        <el-input type=\"number\" v-model=\"form.price\" required />\r\n      </el-form-item>\r\n      <el-form-item label=\"Status\">\r\n        <el-select v-model=\"form.status\" placeholder=\"Select Status\">\r\n          <el-option label=\"Active\" value=\"active\" />\r\n          <el-option label=\"Inactive\" value=\"inactive\" />\r\n        </el-select>\r\n      </el-form-item>\r\n    </el-form>\r\n    <div slot=\"footer\">\r\n      <el-button @click=\"handleClose\">Cancel</el-button>\r\n      <el-button type=\"primary\" @click=\"submitForm\">Save</el-button>\r\n    </div>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: ['product'],\r\n  data() {\r\n    return {\r\n      visible: true,\r\n      form: {\r\n        productName: '',\r\n        price: 0,\r\n        status: 'active'\r\n      }\r\n    };\r\n  },\r\n  watch: {\r\n    product: {\r\n      immediate: true,\r\n      handler(newVal) {\r\n        if (newVal) {\r\n          this.form = { ...newVal };\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm() {\r\n      const method = this.product ? 'PUT' : 'POST';\r\n      const url = this.product ? `http://localhost:8080/api/products/${this.product.productId}` : 'http://localhost:8080/api/products';\r\n\r\n      fetch(url, {\r\n        method,\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(this.form)\r\n      }).then(() => {\r\n        this.$emit('refresh');\r\n        this.handleClose();\r\n      });\r\n    },\r\n    handleClose() {\r\n      this.visible = false;\r\n      this.$emit('close');\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";;EAgBSA,IAAI,EAAC;AAAQ;;;;;;;;;uBAfpBC,YAAA,CAmBYC,oBAAA;IAnBAC,OAAO,EAAOC,KAAA,CAAAD,OAAO;IAAEE,KAAK,EAAC,cAAc;IAAEC,OAAK,EAAEC,QAAA,CAAAC;;IADlEC,OAAA,EAAAC,QAAA,CAEI,MAaU,CAbVC,YAAA,CAaUC,kBAAA;MAbAC,KAAK,EAAET,KAAA,CAAAU,IAAI;MAAE,aAAW,EAAC;;MAFvCL,OAAA,EAAAC,QAAA,CAGM,MAEe,CAFfC,YAAA,CAEeI,uBAAA;QAFDC,KAAK,EAAC;MAAc;QAHxCP,OAAA,EAAAC,QAAA,CAIQ,MAAgD,CAAhDC,YAAA,CAAgDM,mBAAA;UAJxDC,UAAA,EAI2Bd,KAAA,CAAAU,IAAI,CAACK,WAAW;UAJ3C,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAI2BjB,KAAA,CAAAU,IAAI,CAACK,WAAW,GAAAE,MAAA;UAAEC,QAAQ,EAAR;;QAJ7CC,CAAA;UAMMZ,YAAA,CAEeI,uBAAA;QAFDC,KAAK,EAAC;MAAO;QANjCP,OAAA,EAAAC,QAAA,CAOQ,MAAwD,CAAxDC,YAAA,CAAwDM,mBAAA;UAA9CO,IAAI,EAAC,QAAQ;UAP/BN,UAAA,EAOyCd,KAAA,CAAAU,IAAI,CAACW,KAAK;UAPnD,uBAAAL,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOyCjB,KAAA,CAAAU,IAAI,CAACW,KAAK,GAAAJ,MAAA;UAAEC,QAAQ,EAAR;;QAPrDC,CAAA;UASMZ,YAAA,CAKeI,uBAAA;QALDC,KAAK,EAAC;MAAQ;QATlCP,OAAA,EAAAC,QAAA,CAUQ,MAGY,CAHZC,YAAA,CAGYe,oBAAA;UAbpBR,UAAA,EAU4Bd,KAAA,CAAAU,IAAI,CAACa,MAAM;UAVvC,uBAAAP,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAU4BjB,KAAA,CAAAU,IAAI,CAACa,MAAM,GAAAN,MAAA;UAAEO,WAAW,EAAC;;UAVrDnB,OAAA,EAAAC,QAAA,CAWU,MAA2C,CAA3CC,YAAA,CAA2CkB,oBAAA;YAAhCb,KAAK,EAAC,QAAQ;YAACc,KAAK,EAAC;cAChCnB,YAAA,CAA+CkB,oBAAA;YAApCb,KAAK,EAAC,UAAU;YAACc,KAAK,EAAC;;UAZ5CP,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;kCAgBIQ,mBAAA,CAGM,OAHNC,UAGM,GAFJrB,YAAA,CAAkDsB,oBAAA;MAAtCC,OAAK,EAAE3B,QAAA,CAAAC;IAAW;MAjBpCC,OAAA,EAAAC,QAAA,CAiBsC,MAAMU,MAAA,QAAAA,MAAA,OAjB5Ce,gBAAA,CAiBsC,QAAM,E;MAjB5CZ,CAAA;oCAkBMZ,YAAA,CAA8DsB,oBAAA;MAAnDT,IAAI,EAAC,SAAS;MAAEU,OAAK,EAAE3B,QAAA,CAAA6B;;MAlBxC3B,OAAA,EAAAC,QAAA,CAkBoD,MAAIU,MAAA,QAAAA,MAAA,OAlBxDe,gBAAA,CAkBoD,MAAI,E;MAlBxDZ,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}