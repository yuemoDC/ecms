{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'AppMerchantNavbar',\n  // 组件名称\n  data() {\n    return {\n      activeIndex: 'home',\n      // 默认值设为 home\n      isDark: false\n    };\n  },\n  created() {\n    // 检查 localStorage 中是否有 activeIndex，如果没有则设置为 home\n    if (!localStorage.getItem('activeIndex')) {\n      localStorage.setItem('activeIndex', 'home');\n    }\n    this.updateActiveIndex(); // 初始化 activeIndex\n  },\n  watch: {\n    '$route.path'() {\n      this.updateActiveIndex(); // 路由变化时更新 activeIndex\n    }\n  },\n  methods: {\n    updateActiveIndex() {\n      const path = this.$route.path;\n      if (path === '/home') {\n        this.activeIndex = 'home';\n      } else if (path === '/products') {\n        this.activeIndex = 'products';\n      } else if (path === '/orders') {\n        this.activeIndex = 'orders';\n      } else if (path === '/merchant-application') {\n        this.activeIndex = 'merchant-application';\n      } else {\n        this.activeIndex = ''; // 其他情况设为空\n      }\n      localStorage.setItem('activeIndex', this.activeIndex); // 更新 localStorage\n    },\n    handleSelect(index) {\n      // 当选择菜单项时调用此方法\n      if (index === 'logout') return; // 防止重复执行登出逻辑\n      this.activeIndex = index; // 更新选中的菜单项\n      localStorage.setItem('activeIndex', index);\n      this.$router.push({\n        name: index\n      }); // 根据选中项跳转到对应的路由\n    },\n    toggleTheme() {\n      this.isDark = !this.isDark;\n      localStorage.setItem('theme', this.isDark ? 'dark' : 'light');\n      this.applyTheme();\n    },\n    handleLogout() {\n      // 处理用户登出\n      localStorage.removeItem('token'); // 清除本地存储中的 token\n      localStorage.removeItem('activeIndex'); // 清除保存的状态\n      this.activeIndex = 'home'; // 设置默认的激活菜单项\n      this.$router.push('/login'); // 跳转到登录页面\n    },\n    applyTheme() {\n      document.body.classList.toggle('dark-mode', this.isDark);\n    }\n  }\n};","map":{"version":3,"names":["name","data","activeIndex","isDark","created","localStorage","getItem","setItem","updateActiveIndex","watch","$route.path","methods","path","$route","handleSelect","index","$router","push","toggleTheme","applyTheme","handleLogout","removeItem","document","body","classList","toggle"],"sources":["D:\\code_new\\ecms\\ecmsvue\\src\\components\\MerchantNavbar.vue"],"sourcesContent":["<template>\n  <el-header>\n    <div class=\"navbar\"> <!-- 导航栏容器 -->\n      <el-menu :default-active=\"activeIndex\"\n               class=\"menu\"\n               @select=\"handleSelect\"\n               mode=\"horizontal\"\n      >\n        <!-- 设置默认选中的菜单项 -->\n        <!-- 处理菜单项选择事件 --><!-- 设置菜单模式为水平 -->\n        <el-menu-item index=\"home\">首页</el-menu-item> <!-- 首页菜单项 -->\n        <el-menu-item index=\"products\">产品管理</el-menu-item> <!-- 产品管理菜单项 -->\n        <el-menu-item index=\"orders\">订单管理</el-menu-item> <!-- 订单管理菜单项 -->\n        <el-menu-item index=\"merchant-application\">商家入驻申请</el-menu-item>\n\n\n        <!-- 登出按钮放在最右边 -->\n        <div class=\"logout-wrapper\">\n          <!-- 日夜模式按钮 -->\n          <div class=\"theme-toggle\" @click=\"toggleTheme\">\n            {{ isDark ? '☀️ 日间模式' : '🌙 夜间模式' }}\n          </div>\n          <!-- 登出按钮 -->\n          <el-menu-item index=\"logout\" @click=\"handleLogout\">登出</el-menu-item>\n        </div>\n\n\n      </el-menu>\n    </div>\n  </el-header>\n</template>\n\n<script>\nexport default {\n  name: 'AppMerchantNavbar', // 组件名称\n  data() {\n    return {\n      activeIndex: 'home', // 默认值设为 home\n      isDark: false\n    };\n  },\n  created() {\n    // 检查 localStorage 中是否有 activeIndex，如果没有则设置为 home\n    if (!localStorage.getItem('activeIndex')) {\n      localStorage.setItem('activeIndex', 'home');\n    }\n    this.updateActiveIndex(); // 初始化 activeIndex\n  },\n  watch: {\n    '$route.path'() {\n      this.updateActiveIndex(); // 路由变化时更新 activeIndex\n    }\n  },\n  methods: {\n    updateActiveIndex() {\n      const path = this.$route.path;\n      if (path === '/home') {\n        this.activeIndex = 'home';\n      } else if (path === '/products') {\n        this.activeIndex = 'products';\n      } else if (path === '/orders') {\n        this.activeIndex = 'orders';\n      }  else if (path === '/merchant-application') {\n        this.activeIndex = 'merchant-application';\n      }  else {\n        this.activeIndex = ''; // 其他情况设为空\n      }\n      localStorage.setItem('activeIndex', this.activeIndex); // 更新 localStorage\n    },\n    handleSelect(index) {\n      // 当选择菜单项时调用此方法\n      if (index === 'logout') return; // 防止重复执行登出逻辑\n      this.activeIndex = index; // 更新选中的菜单项\n      localStorage.setItem('activeIndex', index);\n      this.$router.push({ name: index }); // 根据选中项跳转到对应的路由\n    },\n    toggleTheme() {\n      this.isDark = !this.isDark;\n      localStorage.setItem('theme', this.isDark ? 'dark' : 'light');\n      this.applyTheme();\n    },\n    handleLogout() {\n      // 处理用户登出\n      localStorage.removeItem('token'); // 清除本地存储中的 token\n      localStorage.removeItem('activeIndex'); // 清除保存的状态\n      this.activeIndex = 'home'; // 设置默认的激活菜单项\n      this.$router.push('/login'); // 跳转到登录页面\n    },\n    applyTheme() {\n      document.body.classList.toggle('dark-mode', this.isDark);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.logout-wrapper {\n  margin-left: auto;\n  display: flex;\n  align-items: center;\n  gap: 20px; /* 添加间隔让按钮有点距离 */\n}\n\n.navbar {\n  background-color: #409eff;\n  color: #ffffff;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  border: none;\n}\n\n.menu {\n  line-height: 60px;\n  flex-grow: 1;\n  display: flex;\n  align-items: center;\n  border: none;\n}\n\n.theme-toggle {\n  padding: 0 20px;\n  height: 60px;\n  line-height: 60px;\n  cursor: pointer;\n  color: #000;\n  font-size: 14px;\n  transition: background-color 0.3s;\n  white-space: nowrap;\n  user-select: none;\n  border: none;\n  outline: none;\n}\n\n.theme-toggle:hover {\n  background-color: rgba(0, 0, 0, 0.1); /* 悬停效果 */\n}\n\n.theme-toggle:active {\n  background-color: transparent;\n  color: inherit;\n}\n\n.el-menu .el-menu-item {\n  outline: none;\n  border: none;\n  height: 60px;\n  line-height: 60px;\n}\n\n.el-menu .el-menu-item:focus {\n  outline: none;\n  border: none;\n}\n\n.el-menu {\n  border: none;\n  outline: none;\n}\n</style>\n\n<style>\n/* 暗黑模式全局背景 */\nbody.dark-mode {\n  background-color: #000000;\n  color: #ffffff;\n}\n</style>\n"],"mappings":";AAiCA,eAAe;EACbA,IAAI,EAAE,mBAAmB;EAAE;EAC3BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,MAAM;MAAE;MACrBC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,EAAE;MACxCD,YAAY,CAACE,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC;IAC7C;IACA,IAAI,CAACC,iBAAiB,CAAC,CAAC,EAAE;EAC5B,CAAC;EACDC,KAAK,EAAE;IACL,aAAaC,CAAA,EAAG;MACd,IAAI,CAACF,iBAAiB,CAAC,CAAC,EAAE;IAC5B;EACF,CAAC;EACDG,OAAO,EAAE;IACPH,iBAAiBA,CAAA,EAAG;MAClB,MAAMI,IAAG,GAAI,IAAI,CAACC,MAAM,CAACD,IAAI;MAC7B,IAAIA,IAAG,KAAM,OAAO,EAAE;QACpB,IAAI,CAACV,WAAU,GAAI,MAAM;MAC3B,OAAO,IAAIU,IAAG,KAAM,WAAW,EAAE;QAC/B,IAAI,CAACV,WAAU,GAAI,UAAU;MAC/B,OAAO,IAAIU,IAAG,KAAM,SAAS,EAAE;QAC7B,IAAI,CAACV,WAAU,GAAI,QAAQ;MAC7B,OAAQ,IAAIU,IAAG,KAAM,uBAAuB,EAAE;QAC5C,IAAI,CAACV,WAAU,GAAI,sBAAsB;MAC3C,OAAQ;QACN,IAAI,CAACA,WAAU,GAAI,EAAE,EAAE;MACzB;MACAG,YAAY,CAACE,OAAO,CAAC,aAAa,EAAE,IAAI,CAACL,WAAW,CAAC,EAAE;IACzD,CAAC;IACDY,YAAYA,CAACC,KAAK,EAAE;MAClB;MACA,IAAIA,KAAI,KAAM,QAAQ,EAAE,OAAM,CAAE;MAChC,IAAI,CAACb,WAAU,GAAIa,KAAK,EAAE;MAC1BV,YAAY,CAACE,OAAO,CAAC,aAAa,EAAEQ,KAAK,CAAC;MAC1C,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEjB,IAAI,EAAEe;MAAM,CAAC,CAAC,EAAE;IACtC,CAAC;IACDG,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACf,MAAK,GAAI,CAAC,IAAI,CAACA,MAAM;MAC1BE,YAAY,CAACE,OAAO,CAAC,OAAO,EAAE,IAAI,CAACJ,MAAK,GAAI,MAAK,GAAI,OAAO,CAAC;MAC7D,IAAI,CAACgB,UAAU,CAAC,CAAC;IACnB,CAAC;IACDC,YAAYA,CAAA,EAAG;MACb;MACAf,YAAY,CAACgB,UAAU,CAAC,OAAO,CAAC,EAAE;MAClChB,YAAY,CAACgB,UAAU,CAAC,aAAa,CAAC,EAAE;MACxC,IAAI,CAACnB,WAAU,GAAI,MAAM,EAAE;MAC3B,IAAI,CAACc,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC,EAAE;IAC/B,CAAC;IACDE,UAAUA,CAAA,EAAG;MACXG,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,EAAE,IAAI,CAACtB,MAAM,CAAC;IAC1D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}