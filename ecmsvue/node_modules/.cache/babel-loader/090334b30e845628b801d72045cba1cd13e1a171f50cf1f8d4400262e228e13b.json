{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'AppMerchantNavbar',\n  // 组件名称\n  data() {\n    return {\n      activeIndex: 'home',\n      // 默认值设为 home\n      isDark: false\n    };\n  },\n  created() {\n    // 检查 localStorage 中是否有 activeIndex，如果没有则设置为 home\n    if (!localStorage.getItem('activeIndex')) {\n      localStorage.setItem('activeIndex', 'home');\n    }\n    this.updateActiveIndex(); // 初始化 activeIndex\n  },\n  watch: {\n    '$route.path'() {\n      this.updateActiveIndex(); // 路由变化时更新 activeIndex\n    }\n  },\n  methods: {\n    updateActiveIndex() {\n      const path = this.$route.path;\n      if (path === '/home') {\n        this.activeIndex = 'home';\n      } else if (path === '/products') {\n        this.activeIndex = 'products';\n      } else if (path === '/orders') {\n        this.activeIndex = 'orders';\n      } else if (path === '/merchant-application') {\n        this.activeIndex = 'merchant-application';\n      } else {\n        this.activeIndex = ''; // 其他情况设为空\n      }\n      localStorage.setItem('activeIndex', this.activeIndex); // 更新 localStorage\n    },\n    handleSelect(index) {\n      // 当选择菜单项时调用此方法\n      if (index === 'logout') return; // 防止重复执行登出逻辑\n      const routeMap = {\n        'home': '/home',\n        'merchant-applications': '/merchant-applications',\n        'data-visualization': '/data-visualization',\n        'data-SalesPrediction': '/data-SalesPrediction',\n        'bulkPrediction': '/bulkPrediction'\n      };\n\n      // 触发自定义事件\n      this.$emit('navigate', routeMap[index] || '/home');\n    },\n    toggleTheme() {\n      this.isDark = !this.isDark;\n      localStorage.setItem('theme', this.isDark ? 'dark' : 'light');\n      this.applyTheme();\n    },\n    handleLogout() {\n      // 处理用户登出\n      localStorage.removeItem('token'); // 清除本地存储中的 token\n      localStorage.removeItem('activeIndex'); // 清除保存的状态\n      this.activeIndex = 'home'; // 设置默认的激活菜单项\n      this.$router.push('/login'); // 跳转到登录页面\n    },\n    applyTheme() {\n      document.body.classList.toggle('dark-mode', this.isDark);\n    }\n  }\n};","map":{"version":3,"names":["name","data","activeIndex","isDark","created","localStorage","getItem","setItem","updateActiveIndex","watch","$route.path","methods","path","$route","handleSelect","index","routeMap","$emit","toggleTheme","applyTheme","handleLogout","removeItem","$router","push","document","body","classList","toggle"],"sources":["D:\\code_new\\ecms\\ecmsvue\\src\\components\\MerchantNavbar.vue"],"sourcesContent":["<template>\r\n  <el-header>\r\n    <div class=\"navbar\"> <!-- 导航栏容器 -->\r\n      <el-menu :default-active=\"activeIndex\"\r\n               class=\"menu\"\r\n               @select=\"handleSelect\"\r\n               mode=\"horizontal\"\r\n      >\r\n        <!-- 设置默认选中的菜单项 -->\r\n        <!-- 处理菜单项选择事件 --><!-- 设置菜单模式为水平 -->\r\n        <el-menu-item index=\"home\">首页</el-menu-item> <!-- 首页菜单项 -->\r\n        <el-menu-item index=\"products\">产品管理</el-menu-item> <!-- 产品管理菜单项 -->\r\n        <el-menu-item index=\"orders\">订单管理</el-menu-item> <!-- 订单管理菜单项 -->\r\n        <el-menu-item index=\"merchant-application\">商家入驻申请</el-menu-item>\r\n\r\n\r\n        <!-- 登出按钮放在最右边 -->\r\n        <div class=\"logout-wrapper\">\r\n          <!-- 日夜模式按钮 -->\r\n          <div class=\"theme-toggle\" @click=\"toggleTheme\">\r\n            {{ isDark ? '☀️ 日间模式' : '🌙 夜间模式' }}\r\n          </div>\r\n          <!-- 登出按钮 -->\r\n          <el-menu-item index=\"logout\" @click=\"handleLogout\">登出</el-menu-item>\r\n        </div>\r\n\r\n\r\n      </el-menu>\r\n    </div>\r\n  </el-header>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'AppMerchantNavbar', // 组件名称\r\n  data() {\r\n    return {\r\n      activeIndex: 'home', // 默认值设为 home\r\n      isDark: false\r\n    };\r\n  },\r\n  created() {\r\n    // 检查 localStorage 中是否有 activeIndex，如果没有则设置为 home\r\n    if (!localStorage.getItem('activeIndex')) {\r\n      localStorage.setItem('activeIndex', 'home');\r\n    }\r\n    this.updateActiveIndex(); // 初始化 activeIndex\r\n  },\r\n  watch: {\r\n    '$route.path'() {\r\n      this.updateActiveIndex(); // 路由变化时更新 activeIndex\r\n    }\r\n  },\r\n  methods: {\r\n    updateActiveIndex() {\r\n      const path = this.$route.path;\r\n      if (path === '/home') {\r\n        this.activeIndex = 'home';\r\n      } else if (path === '/products') {\r\n        this.activeIndex = 'products';\r\n      } else if (path === '/orders') {\r\n        this.activeIndex = 'orders';\r\n      }  else if (path === '/merchant-application') {\r\n        this.activeIndex = 'merchant-application';\r\n      }  else {\r\n        this.activeIndex = ''; // 其他情况设为空\r\n      }\r\n      localStorage.setItem('activeIndex', this.activeIndex); // 更新 localStorage\r\n    },\r\n    handleSelect(index) {\r\n      // 当选择菜单项时调用此方法\r\n      if (index === 'logout') return; // 防止重复执行登出逻辑\r\n      const routeMap = {\r\n        'home': '/home',\r\n        'merchant-applications': '/merchant-applications',\r\n        'data-visualization': '/data-visualization',\r\n        'data-SalesPrediction': '/data-SalesPrediction',\r\n        'bulkPrediction': '/bulkPrediction'\r\n      };\r\n\r\n      // 触发自定义事件\r\n      this.$emit('navigate', routeMap[index] || '/home');\r\n      \r\n    },\r\n    toggleTheme() {\r\n      this.isDark = !this.isDark;\r\n      localStorage.setItem('theme', this.isDark ? 'dark' : 'light');\r\n      this.applyTheme();\r\n    },\r\n    handleLogout() {\r\n      // 处理用户登出\r\n      localStorage.removeItem('token'); // 清除本地存储中的 token\r\n      localStorage.removeItem('activeIndex'); // 清除保存的状态\r\n      this.activeIndex = 'home'; // 设置默认的激活菜单项\r\n      this.$router.push('/login'); // 跳转到登录页面\r\n    },\r\n    applyTheme() {\r\n      document.body.classList.toggle('dark-mode', this.isDark);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.logout-wrapper {\r\n  margin-left: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px; /* 添加间隔让按钮有点距离 */\r\n}\r\n\r\n.navbar {\r\n  background-color: #409eff;\r\n  color: #ffffff;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 100%;\r\n  border: none;\r\n}\r\n\r\n.menu {\r\n  line-height: 60px;\r\n  flex-grow: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  border: none;\r\n}\r\n\r\n.theme-toggle {\r\n  padding: 0 20px;\r\n  height: 60px;\r\n  line-height: 60px;\r\n  cursor: pointer;\r\n  color: #000;\r\n  font-size: 14px;\r\n  transition: background-color 0.3s;\r\n  white-space: nowrap;\r\n  user-select: none;\r\n  border: none;\r\n  outline: none;\r\n}\r\n\r\n.theme-toggle:hover {\r\n  background-color: rgba(0, 0, 0, 0.1); /* 悬停效果 */\r\n}\r\n\r\n.theme-toggle:active {\r\n  background-color: transparent;\r\n  color: inherit;\r\n}\r\n\r\n.el-menu .el-menu-item {\r\n  outline: none;\r\n  border: none;\r\n  height: 60px;\r\n  line-height: 60px;\r\n}\r\n\r\n.el-menu .el-menu-item:focus {\r\n  outline: none;\r\n  border: none;\r\n}\r\n\r\n.el-menu {\r\n  border: none;\r\n  outline: none;\r\n}\r\n</style>\r\n\r\n<style>\r\n/* 暗黑模式全局背景 */\r\nbody.dark-mode {\r\n  background-color: #000000;\r\n  color: #ffffff;\r\n}\r\n</style>\r\n"],"mappings":";AAiCA,eAAe;EACbA,IAAI,EAAE,mBAAmB;EAAE;EAC3BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,MAAM;MAAE;MACrBC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,EAAE;MACxCD,YAAY,CAACE,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC;IAC7C;IACA,IAAI,CAACC,iBAAiB,CAAC,CAAC,EAAE;EAC5B,CAAC;EACDC,KAAK,EAAE;IACL,aAAaC,CAAA,EAAG;MACd,IAAI,CAACF,iBAAiB,CAAC,CAAC,EAAE;IAC5B;EACF,CAAC;EACDG,OAAO,EAAE;IACPH,iBAAiBA,CAAA,EAAG;MAClB,MAAMI,IAAG,GAAI,IAAI,CAACC,MAAM,CAACD,IAAI;MAC7B,IAAIA,IAAG,KAAM,OAAO,EAAE;QACpB,IAAI,CAACV,WAAU,GAAI,MAAM;MAC3B,OAAO,IAAIU,IAAG,KAAM,WAAW,EAAE;QAC/B,IAAI,CAACV,WAAU,GAAI,UAAU;MAC/B,OAAO,IAAIU,IAAG,KAAM,SAAS,EAAE;QAC7B,IAAI,CAACV,WAAU,GAAI,QAAQ;MAC7B,OAAQ,IAAIU,IAAG,KAAM,uBAAuB,EAAE;QAC5C,IAAI,CAACV,WAAU,GAAI,sBAAsB;MAC3C,OAAQ;QACN,IAAI,CAACA,WAAU,GAAI,EAAE,EAAE;MACzB;MACAG,YAAY,CAACE,OAAO,CAAC,aAAa,EAAE,IAAI,CAACL,WAAW,CAAC,EAAE;IACzD,CAAC;IACDY,YAAYA,CAACC,KAAK,EAAE;MAClB;MACA,IAAIA,KAAI,KAAM,QAAQ,EAAE,OAAM,CAAE;MAChC,MAAMC,QAAO,GAAI;QACf,MAAM,EAAE,OAAO;QACf,uBAAuB,EAAE,wBAAwB;QACjD,oBAAoB,EAAE,qBAAqB;QAC3C,sBAAsB,EAAE,uBAAuB;QAC/C,gBAAgB,EAAE;MACpB,CAAC;;MAED;MACA,IAAI,CAACC,KAAK,CAAC,UAAU,EAAED,QAAQ,CAACD,KAAK,KAAK,OAAO,CAAC;IAEpD,CAAC;IACDG,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACf,MAAK,GAAI,CAAC,IAAI,CAACA,MAAM;MAC1BE,YAAY,CAACE,OAAO,CAAC,OAAO,EAAE,IAAI,CAACJ,MAAK,GAAI,MAAK,GAAI,OAAO,CAAC;MAC7D,IAAI,CAACgB,UAAU,CAAC,CAAC;IACnB,CAAC;IACDC,YAAYA,CAAA,EAAG;MACb;MACAf,YAAY,CAACgB,UAAU,CAAC,OAAO,CAAC,EAAE;MAClChB,YAAY,CAACgB,UAAU,CAAC,aAAa,CAAC,EAAE;MACxC,IAAI,CAACnB,WAAU,GAAI,MAAM,EAAE;MAC3B,IAAI,CAACoB,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC,EAAE;IAC/B,CAAC;IACDJ,UAAUA,CAAA,EAAG;MACXK,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,EAAE,IAAI,CAACxB,MAAM,CAAC;IAC1D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}