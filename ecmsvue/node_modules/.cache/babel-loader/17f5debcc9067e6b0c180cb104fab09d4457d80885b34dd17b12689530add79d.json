{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderSlot as _renderSlot, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppNavbar = _resolveComponent(\"AppNavbar\");\n  const _component_VantaBackground = _resolveComponent(\"VantaBackground\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_AppNavbar), _createVNode(_component_VantaBackground), _createElementVNode(\"div\", _hoisted_1, [_renderSlot(_ctx.$slots, \"default\", {}, undefined, true)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createVNode","_component_AppNavbar","_component_VantaBackground","_createElementVNode","_hoisted_1","_renderSlot","_ctx","$slots","undefined"],"sources":["D:\\code_new\\ecms\\ecmsvue\\src\\views\\AIhome.vue"],"sourcesContent":["<template>\r\n  <AppNavbar />\r\n  <VantaBackground />\r\n  <div class=\"content\">\r\n    <slot></slot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\r\nimport * as THREE from 'three';\r\nimport GLOBE from 'vanta/dist/vanta.globe.min';\r\nimport AppNavbar from \"@/components/AdminNavbar.vue\";\r\n\r\nexport default {\r\n  name: 'VantaGlobe',\r\n  components: {AppNavbar},\r\n  props: {\r\n    backgroundColor: {\r\n      type: String,\r\n      default: '#f5f5f5' // 偏白的灰色背景\r\n    },\r\n    color: {\r\n      type: String,\r\n      default: '#1976D2' // 蓝色的描边\r\n    },\r\n    color2: {\r\n      type: String,\r\n      default: '#1565C0' // 较深的蓝色\r\n    },\r\n    size: {\r\n      type: Number,\r\n      default: 1.0\r\n    },\r\n    speed: {\r\n      type: Number,\r\n      default: 1.0\r\n    },\r\n    wireframe: {\r\n      type: Boolean,\r\n      default: true // 启用线框模式\r\n    }\r\n  },\r\n  setup(props) {\r\n    const vantaContainer = ref(null);\r\n    let vantaEffect = null;\r\n\r\n    onMounted(() => {\r\n      vantaEffect = GLOBE({\r\n        el: vantaContainer.value,\r\n        THREE: THREE,\r\n        backgroundColor: props.backgroundColor,\r\n        color: props.color,\r\n        color2: props.color2,\r\n        size: props.size,\r\n        speed: props.speed,\r\n        wireframe: props.wireframe // 启用线框模式\r\n      });\r\n    });\r\n\r\n    onBeforeUnmount(() => {\r\n      if (vantaEffect) {\r\n        vantaEffect.destroy();\r\n      }\r\n    });\r\n\r\n    return {\r\n      vantaContainer\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.vanta-container {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100vh;\r\n  z-index: -1;\r\n}\r\n</style>"],"mappings":";;EAGOA,KAAK,EAAC;AAAS;;;;uBAHtBC,mBAAA,CAAAC,SAAA,SACEC,YAAA,CAAaC,oBAAA,GACbD,YAAA,CAAmBE,0BAAA,GACnBC,mBAAA,CAEM,OAFNC,UAEM,GADJC,WAAA,CAAaC,IAAA,CAAAC,MAAA,iBAAAC,SAAA,Q","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}