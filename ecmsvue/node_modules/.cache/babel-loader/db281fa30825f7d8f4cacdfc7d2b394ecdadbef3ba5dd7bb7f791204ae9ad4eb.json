{"ast":null,"code":"import axios from 'axios';\nimport { Line } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale } from 'chart.js';\n\n// Register chart.js components\nChartJS.register(Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale);\nexport default {\n  name: 'SalesPrediction',\n  components: {\n    LineChart: Line\n  },\n  data() {\n    return {\n      merchantId: '',\n      // 用户输入的商家ID\n      productId: '',\n      // 用户输入的产品ID\n      salesPrediction: null,\n      // 存储所有产品的销售预测\n      productSalesPrediction: null,\n      // 存储特定产品的销售预测\n      chartData: {\n        labels: [],\n        datasets: [{\n          label: '预测销售额',\n          data: [],\n          borderColor: '#42b983',\n          backgroundColor: 'rgba(66, 185, 131, 0.2)',\n          fill: true\n        }]\n      },\n      productChartData: {\n        labels: [],\n        datasets: [{\n          label: '产品预测销售额',\n          data: [],\n          borderColor: '#42b983',\n          backgroundColor: 'rgba(66, 185, 131, 0.2)',\n          fill: true\n        }]\n      },\n      chartOptions: {\n        responsive: true,\n        plugins: {\n          title: {\n            display: true,\n            text: '未来30天销售预测'\n          }\n        }\n      }\n    };\n  },\n  methods: {\n    // 获取所有产品的销售预测\n    async getSalesPrediction() {\n      if (!this.merchantId) {\n        alert('请输入商家ID');\n        return;\n      }\n      try {\n        const response = await axios.get(`http://localhost:8080/api/ai/sales-prediction/${this.merchantId}`);\n        this.salesPrediction = response.data;\n\n        // 更新图表数据\n        this.updateChartData(this.salesPrediction);\n      } catch (error) {\n        console.error('获取销售预测数据失败', error);\n      }\n    },\n    // 获取特定产品的销售预测\n    async getProductSalesPrediction() {\n      if (!this.merchantId || !this.productId) {\n        alert('请输入商家ID和产品ID');\n        return;\n      }\n      try {\n        const response = await axios.get(`http://localhost:8080/api/ai/product-sales-prediction/${this.merchantId}/${this.productId}`);\n        this.productSalesPrediction = response.data;\n\n        // 更新产品销售预测图表数据\n        this.updateProductChartData(this.productSalesPrediction);\n      } catch (error) {\n        console.error('获取特定产品销售预测失败', error);\n      }\n    },\n    // 更新图表数据（商家所有产品销售预测）\n    updateChartData(data) {\n      this.chartData.labels = data.dates;\n      this.chartData.datasets[0].data = data.predictions;\n    },\n    // 更新产品图表数据（特定产品销售预测）\n    updateProductChartData(data) {\n      this.productChartData.labels = data.dates;\n      this.productChartData.datasets[0].data = data.predictions;\n    }\n  }\n};","map":{"version":3,"names":["axios","Line","Chart","ChartJS","Title","Tooltip","Legend","LineElement","CategoryScale","LinearScale","register","name","components","LineChart","data","merchantId","productId","salesPrediction","productSalesPrediction","chartData","labels","datasets","label","borderColor","backgroundColor","fill","productChartData","chartOptions","responsive","plugins","title","display","text","methods","getSalesPrediction","alert","response","get","updateChartData","error","console","getProductSalesPrediction","updateProductChartData","dates","predictions"],"sources":["E:\\shixun\\420\\ecms\\ecmsvue\\src\\views\\SalesPrediction.vue"],"sourcesContent":["<template>\r\n  <div id=\"sales-prediction\">\r\n    <h1>AI 销售预测</h1>\r\n\r\n    <!-- 销售趋势 -->\r\n    <div>\r\n      <h2>商家的销售预测数据（所有产品）</h2>\r\n      <input v-model=\"merchantId\" type=\"number\" placeholder=\"输入商家ID\" />\r\n      <button @click=\"getSalesPrediction\">获取销售预测</button>\r\n\r\n      <div v-if=\"salesPrediction\">\r\n        <h3>销售预测</h3>\r\n        <ul>\r\n          <li v-for=\"(prediction, index) in salesPrediction.predictions\" :key=\"index\">\r\n            {{ salesPrediction.dates[index] }}: {{ prediction }}\r\n          </li>\r\n        </ul>\r\n\r\n        <!-- 销售趋势图 -->\r\n        <div>\r\n          <line-chart :chart-data=\"chartData\" :options=\"chartOptions\"></line-chart>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 特定产品的销售预测 -->\r\n    <div>\r\n      <h2>商家特定产品的销售预测</h2>\r\n      <input v-model=\"productId\" type=\"number\" placeholder=\"输入产品ID\" />\r\n      <button @click=\"getProductSalesPrediction\">获取产品销售预测</button>\r\n\r\n      <div v-if=\"productSalesPrediction\">\r\n        <h3>产品销售预测</h3>\r\n        <ul>\r\n          <li v-for=\"(prediction, index) in productSalesPrediction.predictions\" :key=\"index\">\r\n            {{ productSalesPrediction.dates[index] }}: {{ prediction }}\r\n          </li>\r\n        </ul>\r\n\r\n        <!-- 产品销售趋势图 -->\r\n        <div>\r\n          <line-chart :chart-data=\"productChartData\" :options=\"chartOptions\"></line-chart>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { Line } from 'vue-chartjs';\r\nimport { Chart as ChartJS, Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale } from 'chart.js';\r\n\r\n// Register chart.js components\r\nChartJS.register(Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale);\r\n\r\nexport default {\r\n  name: 'SalesPrediction',\r\n  components: {\r\n    LineChart: Line\r\n  },\r\n  data() {\r\n    return {\r\n      merchantId: '', // 用户输入的商家ID\r\n      productId: '',  // 用户输入的产品ID\r\n      salesPrediction: null, // 存储所有产品的销售预测\r\n      productSalesPrediction: null, // 存储特定产品的销售预测\r\n      chartData: {\r\n        labels: [],\r\n        datasets: [{\r\n          label: '预测销售额',\r\n          data: [],\r\n          borderColor: '#42b983',\r\n          backgroundColor: 'rgba(66, 185, 131, 0.2)',\r\n          fill: true,\r\n        }],\r\n      },\r\n      productChartData: {\r\n        labels: [],\r\n        datasets: [{\r\n          label: '产品预测销售额',\r\n          data: [],\r\n          borderColor: '#42b983',\r\n          backgroundColor: 'rgba(66, 185, 131, 0.2)',\r\n          fill: true,\r\n        }],\r\n      },\r\n      chartOptions: {\r\n        responsive: true,\r\n        plugins: {\r\n          title: {\r\n            display: true,\r\n            text: '未来30天销售预测',\r\n          },\r\n        },\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    // 获取所有产品的销售预测\r\n    async getSalesPrediction() {\r\n      if (!this.merchantId) {\r\n        alert('请输入商家ID');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/api/ai/sales-prediction/${this.merchantId}`);\r\n        this.salesPrediction = response.data;\r\n\r\n        // 更新图表数据\r\n        this.updateChartData(this.salesPrediction);\r\n      } catch (error) {\r\n        console.error('获取销售预测数据失败', error);\r\n      }\r\n    },\r\n\r\n    // 获取特定产品的销售预测\r\n    async getProductSalesPrediction() {\r\n      if (!this.merchantId || !this.productId) {\r\n        alert('请输入商家ID和产品ID');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(\r\n            `http://localhost:8080/api/ai/product-sales-prediction/${this.merchantId}/${this.productId}`\r\n        );\r\n        this.productSalesPrediction = response.data;\r\n\r\n        // 更新产品销售预测图表数据\r\n        this.updateProductChartData(this.productSalesPrediction);\r\n      } catch (error) {\r\n        console.error('获取特定产品销售预测失败', error);\r\n      }\r\n    },\r\n\r\n    // 更新图表数据（商家所有产品销售预测）\r\n    updateChartData(data) {\r\n      this.chartData.labels = data.dates;\r\n      this.chartData.datasets[0].data = data.predictions;\r\n    },\r\n\r\n    // 更新产品图表数据（特定产品销售预测）\r\n    updateProductChartData(data) {\r\n      this.productChartData.labels = data.dates;\r\n      this.productChartData.datasets[0].data = data.predictions;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#sales-prediction {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n}\r\n\r\ninput {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\nbutton {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #42b983;\r\n  color: white;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #4CAF50;\r\n}\r\n\r\nh1, h2 {\r\n  font-weight: bold;\r\n}\r\n\r\nh3 {\r\n  margin-top: 20px;\r\n}\r\n\r\nul {\r\n  text-align: left;\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\nli {\r\n  margin: 10px 0;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}