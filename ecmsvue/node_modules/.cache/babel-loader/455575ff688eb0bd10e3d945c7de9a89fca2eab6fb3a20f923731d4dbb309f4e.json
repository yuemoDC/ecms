{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport * as echarts from 'echarts';\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'MerchantDashboard',\n  data() {\n    return {\n      merchantId: '',\n      activeTab: 'dashboard',\n      activeReportTab: 'dailySales',\n      activeSearchTab: 'orders',\n      activeVisualizationTab: 'salesTrend',\n      visualizationPeriod: 'monthly',\n      loading: {\n        salesTrend: false,\n        inventoryAlerts: false,\n        customerBehavior: false,\n        dailySalesReport: false,\n        monthlySalesReport: false,\n        productSalesReport: false,\n        inventoryReport: false,\n        regionalSalesReport: false,\n        forecastComparisonReport: false,\n        orderSearch: false,\n        productSearch: false,\n        visualizationSalesTrend: false,\n        visualizationProductSales: false,\n        visualizationRegionalSales: false,\n        visualizationOrderStatus: false,\n        visualizationSalesOverview: false\n      },\n      salesTrend: null,\n      inventoryAlerts: null,\n      customerBehavior: null,\n      reports: {\n        dailySales: null,\n        monthlySales: null,\n        productSales: null,\n        inventory: null,\n        regionalSales: null,\n        forecastComparison: null\n      },\n      searchResults: {\n        orders: [],\n        products: []\n      },\n      visualizationData: {\n        salesTrend: null,\n        productSales: null,\n        regionalSales: null,\n        orderStatus: null,\n        salesOverview: null\n      },\n      dateRange: {\n        dailySales: [],\n        productSales: [],\n        regionalSales: [],\n        orderSearch: null,\n        productSearch: null\n      },\n      selectedYear: new Date(),\n      searchParams: {\n        orders: {\n          customerId: '',\n          productId: '',\n          orderNumber: '',\n          orderStatus: '',\n          region: '',\n          minAmount: null,\n          maxAmount: null\n        },\n        products: {\n          productName: '',\n          description: '',\n          minPrice: null,\n          maxPrice: null,\n          minStock: null,\n          maxStock: null,\n          status: ''\n        }\n      },\n      pagination: {\n        orders: {\n          page: 1,\n          size: 10,\n          total: 0\n        },\n        products: {\n          page: 1,\n          size: 10,\n          total: 0\n        }\n      },\n      selectedOrders: [],\n      selectedProducts: [],\n      bulkOperation: {\n        orders: {\n          operation: '',\n          newValues: {}\n        },\n        products: {\n          operation: '',\n          newValues: {}\n        }\n      }\n    };\n  },\n  computed: {\n    customerSegmentData() {\n      if (!this.customerBehavior?.segmentStats) return [];\n      return Object.entries(this.customerBehavior.segmentStats).map(([segment, data]) => ({\n        segment,\n        count: data.count,\n        percentage: data.percentage\n      }));\n    }\n  },\n  mounted() {\n    // 设置默认日期范围\n    const today = new Date();\n    const thirtyDaysAgo = new Date();\n    thirtyDaysAgo.setDate(today.getDate() - 30);\n    this.dateRange.dailySales = [thirtyDaysAgo, today];\n    this.dateRange.productSales = [thirtyDaysAgo, today];\n    this.dateRange.regionalSales = [thirtyDaysAgo, today];\n  },\n  methods: {\n    async fetchData() {\n      if (!this.merchantId) {\n        ElMessage.error('请输入商家ID');\n        return;\n      }\n      await this.loadDashboardData();\n    },\n    async loadDashboardData() {\n      await Promise.all([this.loadSalesTrend(), this.loadInventoryAlerts(), this.loadCustomerBehavior()]);\n    },\n    async loadSalesTrend() {\n      this.loading.salesTrend = true;\n      try {\n        const response = await axios.get(`http://localhost:8080/api/data-analysis/sales-trend/${this.merchantId}`);\n        this.salesTrend = response.data;\n        this.$nextTick(() => {\n          this.renderSalesChart();\n        });\n      } catch (error) {\n        ElMessage.error('获取销售趋势数据失败');\n      } finally {\n        this.loading.salesTrend = false;\n      }\n    },\n    async loadInventoryAlerts() {\n      this.loading.inventoryAlerts = true;\n      try {\n        const response = await axios.get(`http://localhost:8080/api/data-analysis/inventory-alerts/${this.merchantId}`);\n        this.inventoryAlerts = response.data;\n      } catch (error) {\n        ElMessage.error('获取库存预警数据失败');\n      } finally {\n        this.loading.inventoryAlerts = false;\n      }\n    },\n    async loadCustomerBehavior() {\n      this.loading.customerBehavior = true;\n      try {\n        const response = await axios.get(`http://localhost:8080/api/data-analysis/customer-behavior/${this.merchantId}`);\n        this.customerBehavior = response.data;\n        this.$nextTick(() => {\n          this.renderCustomerSegmentChart();\n        });\n      } catch (error) {\n        ElMessage.error('获取客户行为数据失败');\n      } finally {\n        this.loading.customerBehavior = false;\n      }\n    },\n    async loadDailySalesReport() {\n      if (!this.dateRange.dailySales || this.dateRange.dailySales.length !== 2) {\n        ElMessage.warning('请选择日期范围');\n        return;\n      }\n      this.loading.dailySalesReport = true;\n      try {\n        const [startDate, endDate] = this.dateRange.dailySales;\n        const response = await axios.get(`http://localhost:8080/api/reports/daily-sales/${this.merchantId}`, {\n          params: {\n            startDate,\n            endDate\n          }\n        });\n        this.reports.dailySales = response.data;\n        this.$nextTick(() => {\n          this.renderDailySalesChart();\n        });\n      } catch (error) {\n        ElMessage.error('获取日销售报表失败');\n      } finally {\n        this.loading.dailySalesReport = false;\n      }\n    },\n    async loadMonthlySalesReport() {\n      this.loading.monthlySalesReport = true;\n      try {\n        const year = this.selectedYear instanceof Date ? this.selectedYear.getFullYear() : new Date(this.selectedYear).getFullYear();\n        const response = await axios.get(`http://localhost:8080/api/reports/monthly-sales/${this.merchantId}`, {\n          params: {\n            year\n          }\n        });\n        this.reports.monthlySales = response.data;\n        this.$nextTick(() => {\n          this.renderMonthlySalesChart();\n        });\n      } catch (error) {\n        ElMessage.error('获取月销售报表失败');\n      } finally {\n        this.loading.monthlySalesReport = false;\n      }\n    },\n    async loadProductSalesReport() {\n      if (!this.dateRange.productSales || this.dateRange.productSales.length !== 2) {\n        ElMessage.warning('请选择日期范围');\n        return;\n      }\n      this.loading.productSalesReport = true;\n      try {\n        const [startDate, endDate] = this.dateRange.productSales;\n        const response = await axios.get(`http://localhost:8080/api/reports/product-sales/${this.merchantId}`, {\n          params: {\n            startDate,\n            endDate\n          }\n        });\n        this.reports.productSales = response.data;\n        this.$nextTick(() => {\n          this.renderProductSalesChart();\n        });\n      } catch (error) {\n        ElMessage.error('获取产品销售报表失败');\n      } finally {\n        this.loading.productSalesReport = false;\n      }\n    },\n    async loadInventoryReport() {\n      this.loading.inventoryReport = true;\n      try {\n        const response = await axios.get(`http://localhost:8080/api/reports/inventory/${this.merchantId}`);\n        this.reports.inventory = response.data;\n        this.$nextTick(() => {\n          this.renderInventoryStatusChart();\n        });\n      } catch (error) {\n        ElMessage.error('获取库存报表失败');\n      } finally {\n        this.loading.inventoryReport = false;\n      }\n    },\n    async loadRegionalSalesReport() {\n      if (!this.dateRange.regionalSales || this.dateRange.regionalSales.length !== 2) {\n        ElMessage.warning('请选择日期范围');\n        return;\n      }\n      this.loading.regionalSalesReport = true;\n      try {\n        const [startDate, endDate] = this.dateRange.regionalSales;\n        const response = await axios.get(`http://localhost:8080/api/reports/regional-sales/${this.merchantId}`, {\n          params: {\n            startDate,\n            endDate\n          }\n        });\n        this.reports.regionalSales = response.data;\n        this.$nextTick(() => {\n          this.renderRegionalSalesChart();\n        });\n      } catch (error) {\n        ElMessage.error('获取区域销售报表失败');\n      } finally {\n        this.loading.regionalSalesReport = false;\n      }\n    },\n    async loadForecastComparisonReport() {\n      this.loading.forecastComparisonReport = true;\n      try {\n        const response = await axios.get(`http://localhost:8080/api/reports/forecast-comparison/${this.merchantId}`);\n        this.reports.forecastComparison = response.data;\n        this.$nextTick(() => {\n          if (!this.reports.forecastComparison.message) {\n            this.renderForecastComparisonChart();\n          }\n        });\n      } catch (error) {\n        ElMessage.error('获取预测对比报表失败');\n      } finally {\n        this.loading.forecastComparisonReport = false;\n      }\n    },\n    exportReport(reportType) {\n      if (!this.reports[reportType]) {\n        ElMessage.warning('请先生成报表');\n        return;\n      }\n\n      // 构建导出参数\n      const reportId = reportType + '_' + Date.now();\n      const format = 'PDF'; // 可以改为用户选择\n\n      axios.post(`http://localhost:8080/api/reports/export/${reportId}`, null, {\n        params: {\n          format\n        }\n      }).then(response => {\n        ElMessage.success('报表导出成功');\n      }).catch(error => {\n        ElMessage.error('报表导出失败');\n      });\n    },\n    async searchOrders() {\n      this.loading.orderSearch = true;\n      try {\n        // 构建查询参数\n        const params = {\n          merchantId: this.merchantId,\n          page: this.pagination.orders.page - 1,\n          size: this.pagination.orders.size\n        };\n\n        // 添加其他搜索条件\n        if (this.searchParams.orders.customerId) params.customerId = this.searchParams.orders.customerId;\n        if (this.searchParams.orders.productId) params.productId = this.searchParams.orders.productId;\n        if (this.searchParams.orders.orderNumber) params.orderNumber = this.searchParams.orders.orderNumber;\n        if (this.searchParams.orders.orderStatus) params.orderStatus = this.searchParams.orders.orderStatus;\n        if (this.searchParams.orders.region) params.region = this.searchParams.orders.region;\n        if (this.searchParams.orders.minAmount) params.minAmount = this.searchParams.orders.minAmount;\n        if (this.searchParams.orders.maxAmount) params.maxAmount = this.searchParams.orders.maxAmount;\n\n        // 添加日期范围\n        if (this.dateRange.orderSearch && this.dateRange.orderSearch.length === 2) {\n          params.startDate = this.dateRange.orderSearch[0];\n          params.endDate = this.dateRange.orderSearch[1];\n        }\n        const response = await axios.get('http://localhost:8080/api/advanced-search/orders', {\n          params\n        });\n        this.searchResults.orders = response.data.content;\n        this.pagination.orders.total = response.data.totalElements;\n      } catch (error) {\n        ElMessage.error('订单搜索失败');\n      } finally {\n        this.loading.orderSearch = false;\n      }\n    },\n    async searchProducts() {\n      this.loading.productSearch = true;\n      try {\n        // 构建查询参数\n        const params = {\n          merchantId: this.merchantId,\n          page: this.pagination.products.page - 1,\n          size: this.pagination.products.size\n        };\n\n        // 添加其他搜索条件\n        if (this.searchParams.products.productName) params.productName = this.searchParams.products.productName;\n        if (this.searchParams.products.description) params.description = this.searchParams.products.description;\n        if (this.searchParams.products.status) params.status = this.searchParams.products.status;\n        if (this.searchParams.products.minPrice) params.minPrice = this.searchParams.products.minPrice;\n        if (this.searchParams.products.maxPrice) params.maxPrice = this.searchParams.products.maxPrice;\n        if (this.searchParams.products.minStock) params.minStock = this.searchParams.products.minStock;\n        if (this.searchParams.products.maxStock) params.maxStock = this.searchParams.products.maxStock;\n\n        // 添加日期范围\n        if (this.dateRange.productSearch && this.dateRange.productSearch.length === 2) {\n          params.startDate = this.dateRange.productSearch[0];\n          params.endDate = this.dateRange.productSearch[1];\n        }\n        const response = await axios.get('http://localhost:8080/api/advanced-search/products', {\n          params\n        });\n        this.searchResults.products = response.data.content;\n        this.pagination.products.total = response.data.totalElements;\n      } catch (error) {\n        ElMessage.error('产品搜索失败');\n      } finally {\n        this.loading.productSearch = false;\n      }\n    },\n    resetOrderSearch() {\n      // 重置订单搜索条件\n      this.searchParams.orders = {\n        customerId: '',\n        productId: '',\n        orderNumber: '',\n        orderStatus: '',\n        region: '',\n        minAmount: null,\n        maxAmount: null\n      };\n      this.dateRange.orderSearch = null;\n      this.pagination.orders.page = 1;\n    },\n    resetProductSearch() {\n      // 重置产品搜索条件\n      this.searchParams.products = {\n        productName: '',\n        description: '',\n        minPrice: null,\n        maxPrice: null,\n        minStock: null,\n        maxStock: null,\n        status: ''\n      };\n      this.dateRange.productSearch = null;\n      this.pagination.products.page = 1;\n    },\n    handleOrderSelectionChange(selection) {\n      this.selectedOrders = selection;\n    },\n    handleProductSelectionChange(selection) {\n      this.selectedProducts = selection;\n    },\n    executeBulkOperation(entityType) {\n      const selection = entityType === 'orders' ? this.selectedOrders : this.selectedProducts;\n      if (selection.length === 0) {\n        ElMessage.warning('请至少选择一项');\n        return;\n      }\n      const operation = this.bulkOperation[entityType].operation;\n      if (!operation) {\n        ElMessage.warning('请选择操作类型');\n        return;\n      }\n\n      // 获取选中项ID\n      const ids = selection.map(item => entityType === 'orders' ? item.orderId : item.productId);\n      axios.post(`http://localhost:8080/api/advanced-search/${entityType}/bulk-operation`, this.bulkOperation[entityType].newValues, {\n        params: {\n          [`${entityType.slice(0, -1)}Ids`]: ids.join(','),\n          operation\n        }\n      }).then(response => {\n        // 处理操作结果\n        if (response.data.successCount > 0) {\n          ElMessage.success(`成功处理 ${response.data.successCount} 项`);\n\n          // 刷新数据\n          if (entityType === 'orders') {\n            this.searchOrders();\n          } else {\n            this.searchProducts();\n          }\n        }\n        if (response.data.failCount > 0) {\n          ElMessage.warning(`${response.data.failCount} 项处理失败`);\n        }\n      }).catch(error => {\n        ElMessage.error(`批量操作${entityType}失败`);\n      });\n    },\n    // 可视化方法\n    loadVisualizationData() {\n      switch (this.activeVisualizationTab) {\n        case 'salesTrend':\n          this.loadVisualizationSalesTrend();\n          break;\n        case 'productSales':\n          this.loadVisualizationProductSales();\n          break;\n        case 'regionalSales':\n          this.loadVisualizationRegionalSales();\n          break;\n        case 'orderStatus':\n          this.loadVisualizationOrderStatus();\n          break;\n        case 'salesOverview':\n          this.loadVisualizationSalesOverview();\n          break;\n      }\n    },\n    async loadVisualizationSalesTrend() {\n      this.loading.visualizationSalesTrend = true;\n      try {\n        const response = await axios.get(`http://localhost:8080/api/data-visualization/sales-trend/${this.merchantId}`, {\n          params: {\n            period: this.visualizationPeriod\n          }\n        });\n        this.visualizationData.salesTrend = response.data;\n        this.$nextTick(() => {\n          this.renderVisualizationSalesChart();\n        });\n      } catch (error) {\n        ElMessage.error('获取销售趋势可视化数据失败');\n      } finally {\n        this.loading.visualizationSalesTrend = false;\n      }\n    },\n    async loadVisualizationProductSales() {\n      this.loading.visualizationProductSales = true;\n      try {\n        const response = await axios.get(`http://localhost:8080/api/data-visualization/product-sales-distribution/${this.merchantId}`);\n        this.visualizationData.productSales = response.data;\n        this.$nextTick(() => {\n          this.renderVisualizationProductChart();\n        });\n      } catch (error) {\n        ElMessage.error('获取产品销售分布可视化数据失败');\n      } finally {\n        this.loading.visualizationProductSales = false;\n      }\n    },\n    async loadVisualizationRegionalSales() {\n      this.loading.visualizationRegionalSales = true;\n      try {\n        const response = await axios.get(`http://localhost:8080/api/data-visualization/regional-sales-distribution/${this.merchantId}`);\n        this.visualizationData.regionalSales = response.data;\n        this.$nextTick(() => {\n          this.renderVisualizationRegionalChart();\n        });\n      } catch (error) {\n        ElMessage.error('获取区域销售分布可视化数据失败');\n      } finally {\n        this.loading.visualizationRegionalSales = false;\n      }\n    },\n    async loadVisualizationOrderStatus() {\n      this.loading.visualizationOrderStatus = true;\n      try {\n        const response = await axios.get(`http://localhost:8080/api/data-visualization/order-status-distribution/${this.merchantId}`);\n        this.visualizationData.orderStatus = response.data;\n        this.$nextTick(() => {\n          this.renderVisualizationOrderStatusChart();\n        });\n      } catch (error) {\n        ElMessage.error('获取订单状态分布可视化数据失败');\n      } finally {\n        this.loading.visualizationOrderStatus = false;\n      }\n    },\n    async loadVisualizationSalesOverview() {\n      this.loading.visualizationSalesOverview = true;\n      try {\n        const response = await axios.get(`http://localhost:8080/api/data-visualization/sales-overview/${this.merchantId}`);\n        this.visualizationData.salesOverview = response.data;\n      } catch (error) {\n        ElMessage.error('获取销售概览可视化数据失败');\n      } finally {\n        this.loading.visualizationSalesOverview = false;\n      }\n    },\n    // 图表渲染方法\n    renderSalesChart() {\n      if (!this.salesTrend?.monthlySales) return;\n      const chart = echarts.init(this.$refs.salesChart);\n      const data = Object.entries(this.salesTrend.monthlySales);\n      chart.setOption({\n        title: {\n          text: '月销售趋势'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: data.map(([month]) => month)\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: '销售额',\n          type: 'line',\n          data: data.map(([, amount]) => amount)\n        }]\n      });\n    },\n    renderCustomerSegmentChart() {\n      if (!this.customerBehavior?.segmentStats) return;\n      const chart = echarts.init(this.$refs.customerSegmentChart);\n      const data = Object.entries(this.customerBehavior.segmentStats).map(([segment, data]) => ({\n        name: segment,\n        value: data.count\n      }));\n      chart.setOption({\n        title: {\n          text: '客户细分分布'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left'\n        },\n        series: [{\n          name: '客户细分',\n          type: 'pie',\n          radius: '70%',\n          data: data,\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      });\n    },\n    renderDailySalesChart() {\n      if (!this.reports.dailySales?.dailySales) return;\n      const chart = echarts.init(this.$refs.dailySalesChart);\n      const data = Object.entries(this.reports.dailySales.dailySales);\n      chart.setOption({\n        title: {\n          text: '日销售趋势'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: data.map(([date]) => date)\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: '销售额',\n          type: 'bar',\n          data: data.map(([, amount]) => amount)\n        }]\n      });\n    },\n    renderMonthlySalesChart() {\n      if (!this.reports.monthlySales?.monthlySales) return;\n      const chart = echarts.init(this.$refs.monthlySalesChart);\n      const data = Object.entries(this.reports.monthlySales.monthlySales);\n      chart.setOption({\n        title: {\n          text: '月销售趋势'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: data.map(([month]) => month)\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: '销售额',\n          type: 'line',\n          data: data.map(([, amount]) => amount)\n        }]\n      });\n    },\n    renderProductSalesChart() {\n      if (!this.reports.productSales?.productSalesDetails) return;\n      const chart = echarts.init(this.$refs.productSalesChart);\n      const data = this.reports.productSales.productSalesDetails.slice(0, 10); // 取前10个产品\n\n      chart.setOption({\n        title: {\n          text: '产品销售分布'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          type: 'scroll',\n          height: 250\n        },\n        series: [{\n          name: '销售额',\n          type: 'pie',\n          radius: '70%',\n          data: data.map(item => ({\n            name: item.productName,\n            value: item.sales\n          })),\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      });\n    },\n    renderInventoryStatusChart() {\n      if (!this.reports.inventory?.statusCounts) return;\n      const chart = echarts.init(this.$refs.inventoryStatusChart);\n      const data = Object.entries(this.reports.inventory.statusCounts).map(([status, count]) => ({\n        name: status,\n        value: count\n      }));\n      chart.setOption({\n        title: {\n          text: '库存状态分布'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left'\n        },\n        series: [{\n          name: '库存状态',\n          type: 'pie',\n          radius: '70%',\n          data: data,\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      });\n    },\n    renderRegionalSalesChart() {\n      if (!this.reports.regionalSales?.regionalSalesDetails) return;\n      const chart = echarts.init(this.$refs.regionalSalesChart);\n      const data = this.reports.regionalSales.regionalSalesDetails;\n      chart.setOption({\n        title: {\n          text: '区域销售分布'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: data.map(item => item.region),\n          axisLabel: {\n            rotate: 45\n          }\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: '销售额',\n          type: 'bar',\n          data: data.map(item => item.sales)\n        }]\n      });\n    },\n    renderForecastComparisonChart() {\n      if (!this.reports.forecastComparison?.comparisonDetails) return;\n      const chart = echarts.init(this.$refs.forecastComparisonChart);\n      const data = this.reports.forecastComparison.comparisonDetails;\n      chart.setOption({\n        title: {\n          text: '预测vs实际销售对比'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['预测销售额', '实际销售额']\n        },\n        xAxis: {\n          type: 'category',\n          data: data.map(item => item.productName),\n          axisLabel: {\n            rotate: 45\n          }\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: '预测销售额',\n          type: 'bar',\n          data: data.map(item => item.predictedSales)\n        }, {\n          name: '实际销售额',\n          type: 'bar',\n          data: data.map(item => item.actualSales)\n        }]\n      });\n    },\n    renderVisualizationSalesChart() {\n      if (!this.visualizationData.salesTrend) return;\n      const chart = echarts.init(this.$refs.visualizationSalesChart);\n      const chartConfig = this.visualizationData.salesTrend.chartConfig;\n      const dataMap = this.visualizationData.salesTrend.dataMap;\n      chart.setOption({\n        title: {\n          text: chartConfig.title\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: dataMap.xAxis\n        },\n        yAxis: {\n          type: 'value',\n          name: chartConfig.yAxis\n        },\n        series: [{\n          name: '销售额',\n          type: 'line',\n          data: dataMap.series\n        }]\n      });\n    },\n    renderVisualizationProductChart() {\n      if (!this.visualizationData.productSales) return;\n      const chart = echarts.init(this.$refs.visualizationProductChart);\n      const chartConfig = this.visualizationData.productSales.chartConfig;\n      const dataMap = this.visualizationData.productSales.dataMap;\n      chart.setOption({\n        title: {\n          text: chartConfig.title\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          type: 'scroll'\n        },\n        series: [{\n          name: '销售额',\n          type: 'pie',\n          radius: chartConfig.radius || '70%',\n          data: dataMap.data,\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      });\n    },\n    renderVisualizationRegionalChart() {\n      if (!this.visualizationData.regionalSales) return;\n      const chart = echarts.init(this.$refs.visualizationRegionalChart);\n      const chartConfig = this.visualizationData.regionalSales.chartConfig;\n      const dataMap = this.visualizationData.regionalSales.dataMap;\n      chart.setOption({\n        title: {\n          text: chartConfig.title\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: dataMap.regions,\n          axisLabel: {\n            rotate: 45\n          }\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: '销售额',\n          type: 'bar',\n          data: dataMap.values\n        }]\n      });\n    },\n    renderVisualizationOrderStatusChart() {\n      if (!this.visualizationData.orderStatus) return;\n      const chart = echarts.init(this.$refs.visualizationOrderStatusChart);\n      const chartConfig = this.visualizationData.orderStatus.chartConfig;\n      const dataMap = this.visualizationData.orderStatus.dataMap;\n      chart.setOption({\n        title: {\n          text: chartConfig.title\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left'\n        },\n        series: [{\n          name: '订单状态',\n          type: 'pie',\n          radius: '70%',\n          data: dataMap.data,\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      });\n    },\n    formatCurrency(value) {\n      return new Intl.NumberFormat('zh-CN', {\n        style: 'currency',\n        currency: 'CNY'\n      }).format(value || 0);\n    },\n    formatPercentage(value) {\n      return `${(value || 0).toFixed(2)}%`;\n    },\n    formatDate(date) {\n      if (!date) return '';\n      return new Date(date).toLocaleString('zh-CN');\n    },\n    getStatusType(status) {\n      const types = {\n        '无库存': 'danger',\n        '紧急': 'danger',\n        '警告': 'warning',\n        '注意': 'info',\n        '充足': 'success'\n      };\n      return types[status] || 'info';\n    },\n    getOrderStatusType(status) {\n      const types = {\n        'pending': 'warning',\n        'shipped': 'info',\n        'completed': 'success',\n        'refunded': 'danger'\n      };\n      return types[status] || 'info';\n    },\n    getInventoryStatusType(status) {\n      const types = {\n        'CRITICAL': 'danger',\n        'WARNING': 'warning',\n        'ATTENTION': 'info',\n        'HEALTHY': 'success',\n        'STABLE': 'success'\n      };\n      return types[status] || 'info';\n    },\n    getInventoryStatusLabel(status) {\n      const labels = {\n        'CRITICAL': '紧急',\n        'WARNING': '警告',\n        'ATTENTION': '注意',\n        'HEALTHY': '健康',\n        'STABLE': '稳定'\n      };\n      return labels[status] || status;\n    },\n    getForecastQualityType(quality) {\n      const types = {\n        '优秀': 'success',\n        '良好': 'success',\n        '一般': 'warning',\n        '需要改进': 'danger'\n      };\n      return types[quality] || 'info';\n    },\n    getKpiLabel(key) {\n      const labels = {\n        'totalSales': '总销售额',\n        'totalOrders': '总订单数',\n        'avgOrderValue': '平均订单额',\n        'pendingOrders': '待处理订单',\n        'completedOrders': '已完成订单',\n        'recentSales': '近期销售额'\n      };\n      return labels[key] || key;\n    }\n  }\n};","map":{"version":3,"names":["echarts","axios","ElMessage","name","data","merchantId","activeTab","activeReportTab","activeSearchTab","activeVisualizationTab","visualizationPeriod","loading","salesTrend","inventoryAlerts","customerBehavior","dailySalesReport","monthlySalesReport","productSalesReport","inventoryReport","regionalSalesReport","forecastComparisonReport","orderSearch","productSearch","visualizationSalesTrend","visualizationProductSales","visualizationRegionalSales","visualizationOrderStatus","visualizationSalesOverview","reports","dailySales","monthlySales","productSales","inventory","regionalSales","forecastComparison","searchResults","orders","products","visualizationData","orderStatus","salesOverview","dateRange","selectedYear","Date","searchParams","customerId","productId","orderNumber","region","minAmount","maxAmount","productName","description","minPrice","maxPrice","minStock","maxStock","status","pagination","page","size","total","selectedOrders","selectedProducts","bulkOperation","operation","newValues","computed","customerSegmentData","segmentStats","Object","entries","map","segment","count","percentage","mounted","today","thirtyDaysAgo","setDate","getDate","methods","fetchData","error","loadDashboardData","Promise","all","loadSalesTrend","loadInventoryAlerts","loadCustomerBehavior","response","get","$nextTick","renderSalesChart","renderCustomerSegmentChart","loadDailySalesReport","length","warning","startDate","endDate","params","renderDailySalesChart","loadMonthlySalesReport","year","getFullYear","renderMonthlySalesChart","loadProductSalesReport","renderProductSalesChart","loadInventoryReport","renderInventoryStatusChart","loadRegionalSalesReport","renderRegionalSalesChart","loadForecastComparisonReport","message","renderForecastComparisonChart","exportReport","reportType","reportId","now","format","post","then","success","catch","searchOrders","content","totalElements","searchProducts","resetOrderSearch","resetProductSearch","handleOrderSelectionChange","selection","handleProductSelectionChange","executeBulkOperation","entityType","ids","item","orderId","slice","join","successCount","failCount","loadVisualizationData","loadVisualizationSalesTrend","loadVisualizationProductSales","loadVisualizationRegionalSales","loadVisualizationOrderStatus","loadVisualizationSalesOverview","period","renderVisualizationSalesChart","renderVisualizationProductChart","renderVisualizationRegionalChart","renderVisualizationOrderStatusChart","chart","init","$refs","salesChart","setOption","title","text","tooltip","trigger","xAxis","type","month","yAxis","series","amount","customerSegmentChart","value","formatter","legend","orient","left","radius","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","dailySalesChart","date","monthlySalesChart","productSalesDetails","productSalesChart","height","sales","statusCounts","inventoryStatusChart","regionalSalesDetails","regionalSalesChart","axisLabel","rotate","comparisonDetails","forecastComparisonChart","predictedSales","actualSales","visualizationSalesChart","chartConfig","dataMap","visualizationProductChart","visualizationRegionalChart","regions","values","visualizationOrderStatusChart","formatCurrency","Intl","NumberFormat","style","currency","formatPercentage","toFixed","formatDate","toLocaleString","getStatusType","types","getOrderStatusType","getInventoryStatusType","getInventoryStatusLabel","labels","getForecastQualityType","quality","getKpiLabel","key"],"sources":["E:\\shixun\\420\\ecms\\ecmsvue\\src\\views\\DataAnalysis.vue"],"sourcesContent":["<template>\r\n  <div class=\"merchant-dashboard\">\r\n    <h1>ECMS 商家管理仪表板</h1>\r\n\r\n    <!-- 商家ID搜索 -->\r\n    <div class=\"search-container\">\r\n      <el-input\r\n          v-model=\"merchantId\"\r\n          placeholder=\"输入商家ID\"\r\n          class=\"search-input\"\r\n          @keyup.enter=\"fetchData\"\r\n      >\r\n        <template #append>\r\n          <el-button type=\"primary\" @click=\"fetchData\">搜索</el-button>\r\n        </template>\r\n      </el-input>\r\n    </div>\r\n\r\n    <!-- 功能Tab -->\r\n    <el-tabs v-model=\"activeTab\" v-if=\"merchantId\">\r\n      <!-- 数据分析仪表板 -->\r\n      <el-tab-pane label=\"数据分析仪表板\" name=\"dashboard\">\r\n        <el-row :gutter=\"20\">\r\n          <!-- KPI指标展示 -->\r\n          <el-col :span=\"24\">\r\n            <el-card class=\"box-card\">\r\n              <template #header>\r\n                <div class=\"card-header\">\r\n                  <span>核心业绩指标</span>\r\n                </div>\r\n              </template>\r\n              <el-row :gutter=\"20\" v-loading=\"loading.salesTrend\">\r\n                <el-col :span=\"6\">\r\n                  <div class=\"kpi-card\">\r\n                    <div class=\"kpi-value\">{{ formatCurrency(salesTrend?.totalSales || 0) }}</div>\r\n                    <div class=\"kpi-label\">总销售额</div>\r\n                  </div>\r\n                </el-col>\r\n                <el-col :span=\"6\">\r\n                  <div class=\"kpi-card\">\r\n                    <div class=\"kpi-value\">{{ formatCurrency(salesTrend?.avgMonthlySales || 0) }}</div>\r\n                    <div class=\"kpi-label\">平均月销售额</div>\r\n                  </div>\r\n                </el-col>\r\n                <el-col :span=\"6\">\r\n                  <div class=\"kpi-card\">\r\n                    <div class=\"kpi-value\">{{ inventoryAlerts?.criticalCount || 0 }}</div>\r\n                    <div class=\"kpi-label\">紧急库存项</div>\r\n                  </div>\r\n                </el-col>\r\n                <el-col :span=\"6\">\r\n                  <div class=\"kpi-card\">\r\n                    <div class=\"kpi-value\">{{ customerBehavior?.totalCustomers || 0 }}</div>\r\n                    <div class=\"kpi-label\">总客户数</div>\r\n                  </div>\r\n                </el-col>\r\n              </el-row>\r\n            </el-card>\r\n          </el-col>\r\n\r\n          <el-col :span=\"12\">\r\n            <el-card class=\"box-card\">\r\n              <template #header>\r\n                <div class=\"card-header\">\r\n                  <span>销售趋势分析</span>\r\n                  <el-button type=\"text\" @click=\"loadSalesTrend\">刷新</el-button>\r\n                </div>\r\n              </template>\r\n              <div v-loading=\"loading.salesTrend\">\r\n                <div v-if=\"salesTrend\">\r\n                  <el-descriptions :column=\"1\" border>\r\n                    <el-descriptions-item label=\"总销售额\">\r\n                      {{ formatCurrency(salesTrend.totalSales) }}\r\n                    </el-descriptions-item>\r\n                    <el-descriptions-item label=\"平均月销售额\">\r\n                      {{ formatCurrency(salesTrend.avgMonthlySales) }}\r\n                    </el-descriptions-item>\r\n                  </el-descriptions>\r\n                  <div class=\"chart-container\" v-if=\"salesTrend.monthlySales\">\r\n                    <div ref=\"salesChart\" style=\"height: 300px\"></div>\r\n                  </div>\r\n                  <div class=\"insights\" v-if=\"salesTrend.insights\">\r\n                    <h4>分析洞察：</h4>\r\n                    <pre>{{ salesTrend.insights }}</pre>\r\n                  </div>\r\n                  <div class=\"insights\" v-if=\"salesTrend.recommendations\">\r\n                    <h4>建议：</h4>\r\n                    <pre>{{ salesTrend.recommendations }}</pre>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </el-card>\r\n          </el-col>\r\n\r\n          <el-col :span=\"12\">\r\n            <el-card class=\"box-card\">\r\n              <template #header>\r\n                <div class=\"card-header\">\r\n                  <span>库存预警</span>\r\n                  <el-button type=\"text\" @click=\"loadInventoryAlerts\">刷新</el-button>\r\n                </div>\r\n              </template>\r\n              <div v-loading=\"loading.inventoryAlerts\">\r\n                <div v-if=\"inventoryAlerts\">\r\n                  <el-descriptions :column=\"1\" border>\r\n                    <el-descriptions-item label=\"紧急库存项\">\r\n                      <el-tag type=\"danger\">{{ inventoryAlerts.criticalCount }}</el-tag>\r\n                    </el-descriptions-item>\r\n                    <el-descriptions-item label=\"警告库存项\">\r\n                      <el-tag type=\"warning\">{{ inventoryAlerts.warningCount }}</el-tag>\r\n                    </el-descriptions-item>\r\n                    <el-descriptions-item label=\"需关注库存项\">\r\n                      <el-tag type=\"info\">{{ inventoryAlerts.attentionCount }}</el-tag>\r\n                    </el-descriptions-item>\r\n                  </el-descriptions>\r\n                  <div class=\"sub-section\">\r\n                    <div class=\"sub-section-title\">库存耗尽预测：</div>\r\n                    <el-table\r\n                        :data=\"inventoryAlerts.stockoutPredictions?.slice(0, 5) || []\"\r\n                        style=\"width: 100%\"\r\n                        :default-sort=\"{prop: 'daysToStockout', order: 'ascending'}\"\r\n                    >\r\n                      <el-table-column prop=\"productName\" label=\"产品名称\" width=\"180\"></el-table-column>\r\n                      <el-table-column prop=\"currentStock\" label=\"当前库存\" width=\"100\"></el-table-column>\r\n                      <el-table-column prop=\"daysToStockout\" label=\"库存耗尽天数\" sortable width=\"120\">\r\n                        <template #default=\"scope\">\r\n                          <span v-if=\"scope.row.daysToStockout\">{{ scope.row.daysToStockout }}</span>\r\n                          <span v-else>-</span>\r\n                        </template>\r\n                      </el-table-column>\r\n                      <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n                        <template #default=\"scope\">\r\n                          <el-tag :type=\"getInventoryStatusType(scope.row.status)\">\r\n                            {{ getInventoryStatusLabel(scope.row.status) }}\r\n                          </el-tag>\r\n                        </template>\r\n                      </el-table-column>\r\n                    </el-table>\r\n                  </div>\r\n                  <div class=\"assessment\" v-if=\"inventoryAlerts.inventoryHealthAssessment\">\r\n                    <h4>健康状况评估：</h4>\r\n                    <pre>{{ inventoryAlerts.inventoryHealthAssessment }}</pre>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </el-card>\r\n          </el-col>\r\n\r\n          <el-col :span=\"24\" style=\"margin-top: 20px\">\r\n            <el-card class=\"box-card\">\r\n              <template #header>\r\n                <div class=\"card-header\">\r\n                  <span>客户行为分析</span>\r\n                  <el-button type=\"text\" @click=\"loadCustomerBehavior\">刷新</el-button>\r\n                </div>\r\n              </template>\r\n              <div v-loading=\"loading.customerBehavior\">\r\n                <div v-if=\"customerBehavior\">\r\n                  <el-descriptions :column=\"3\" border>\r\n                    <el-descriptions-item label=\"总客户数\">\r\n                      {{ customerBehavior.totalCustomers }}\r\n                    </el-descriptions-item>\r\n                    <el-descriptions-item label=\"高价值客户贡献\">\r\n                      {{ formatPercentage(customerBehavior.highValueContribution) }}\r\n                    </el-descriptions-item>\r\n                  </el-descriptions>\r\n                  <div class=\"customer-segments\">\r\n                    <h4>客户细分统计：</h4>\r\n                    <el-row :gutter=\"20\">\r\n                      <el-col :span=\"12\">\r\n                        <el-table :data=\"customerSegmentData\" style=\"width: 100%\">\r\n                          <el-table-column prop=\"segment\" label=\"客户细分\" />\r\n                          <el-table-column prop=\"count\" label=\"数量\" />\r\n                          <el-table-column prop=\"percentage\" label=\"占比\">\r\n                            <template #default=\"scope\">\r\n                              {{ formatPercentage(scope.row.percentage) }}\r\n                            </template>\r\n                          </el-table-column>\r\n                        </el-table>\r\n                      </el-col>\r\n                      <el-col :span=\"12\">\r\n                        <div ref=\"customerSegmentChart\" style=\"height: 300px\"></div>\r\n                      </el-col>\r\n                    </el-row>\r\n                  </div>\r\n                  <div class=\"insights\" v-if=\"customerBehavior.insights\">\r\n                    <h4>行为分析洞察：</h4>\r\n                    <pre>{{ customerBehavior.insights }}</pre>\r\n                  </div>\r\n                  <div class=\"insights\" v-if=\"customerBehavior.recommendations\">\r\n                    <h4>建议：</h4>\r\n                    <pre>{{ customerBehavior.recommendations }}</pre>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </el-card>\r\n          </el-col>\r\n        </el-row>\r\n      </el-tab-pane>\r\n\r\n      <!-- 报表系统 -->\r\n      <el-tab-pane label=\"报表系统\" name=\"reports\">\r\n        <el-card class=\"box-card\">\r\n          <el-tabs v-model=\"activeReportTab\">\r\n            <el-tab-pane label=\"日销售报表\" name=\"dailySales\">\r\n              <el-date-picker\r\n                  v-model=\"dateRange.dailySales\"\r\n                  type=\"daterange\"\r\n                  range-separator=\"至\"\r\n                  start-placeholder=\"开始日期\"\r\n                  end-placeholder=\"结束日期\"\r\n                  value-format=\"YYYY-MM-DDTHH:mm:ss\"\r\n                  @change=\"loadDailySalesReport\"\r\n              />\r\n              <el-button type=\"primary\" style=\"margin-left: 10px\" @click=\"loadDailySalesReport\">生成报表</el-button>\r\n              <el-button style=\"margin-left: 10px\" @click=\"exportReport('dailySales')\">导出报表</el-button>\r\n\r\n              <div v-loading=\"loading.dailySalesReport\" style=\"margin-top: 20px\">\r\n                <div v-if=\"reports.dailySales\">\r\n                  <el-descriptions :column=\"2\" border>\r\n                    <el-descriptions-item label=\"总销售额\">\r\n                      {{ formatCurrency(reports.dailySales.totalSales) }}\r\n                    </el-descriptions-item>\r\n                    <el-descriptions-item label=\"平均日销售额\">\r\n                      {{ formatCurrency(reports.dailySales.avgDailySales) }}\r\n                    </el-descriptions-item>\r\n                    <el-descriptions-item label=\"最高销售日\">\r\n                      {{ reports.dailySales.highestDay }} ({{ formatCurrency(reports.dailySales.highestSales) }})\r\n                    </el-descriptions-item>\r\n                    <el-descriptions-item label=\"最低销售日\">\r\n                      {{ reports.dailySales.lowestDay }} ({{ formatCurrency(reports.dailySales.lowestSales) }})\r\n                    </el-descriptions-item>\r\n                  </el-descriptions>\r\n                  <div ref=\"dailySalesChart\" style=\"height: 300px; margin-top: 20px\"></div>\r\n                </div>\r\n              </div>\r\n            </el-tab-pane>\r\n\r\n            <el-tab-pane label=\"月销售报表\" name=\"monthlySales\">\r\n              <el-date-picker\r\n                  v-model=\"selectedYear\"\r\n                  type=\"year\"\r\n                  placeholder=\"选择年份\"\r\n                  @change=\"loadMonthlySalesReport\"\r\n              />\r\n              <el-button type=\"primary\" style=\"margin-left: 10px\" @click=\"loadMonthlySalesReport\">生成报表</el-button>\r\n              <el-button style=\"margin-left: 10px\" @click=\"exportReport('monthlySales')\">导出报表</el-button>\r\n\r\n              <div v-loading=\"loading.monthlySalesReport\" style=\"margin-top: 20px\">\r\n                <div v-if=\"reports.monthlySales\">\r\n                  <el-descriptions :column=\"2\" border>\r\n                    <el-descriptions-item label=\"年度总销售额\">\r\n                      {{ formatCurrency(reports.monthlySales.totalSales) }}\r\n                    </el-descriptions-item>\r\n                    <el-descriptions-item label=\"平均月销售额\">\r\n                      {{ formatCurrency(reports.monthlySales.avgMonthlySales) }}\r\n                    </el-descriptions-item>\r\n                  </el-descriptions>\r\n\r\n                  <div class=\"sub-section\">\r\n                    <div class=\"sub-section-title\">月度增长率：</div>\r\n                    <el-table\r\n                        :data=\"reports.monthlySales.growthRates || []\"\r\n                        style=\"width: 100%\"\r\n                    >\r\n                      <el-table-column prop=\"month\" label=\"月份\" width=\"120\"></el-table-column>\r\n                      <el-table-column prop=\"sales\" label=\"销售额\" width=\"150\">\r\n                        <template #default=\"scope\">\r\n                          {{ formatCurrency(scope.row.sales) }}\r\n                        </template>\r\n                      </el-table-column>\r\n                      <el-table-column prop=\"growthRate\" label=\"环比增长率\" width=\"120\">\r\n                        <template #default=\"scope\">\r\n                          <span :style=\"{ color: scope.row.growthRate >= 0 ? '#67C23A' : '#F56C6C' }\">\r\n                            {{ scope.row.growthRate >= 0 ? '+' : '' }}{{ scope.row.growthRate }}%\r\n                          </span>\r\n                        </template>\r\n                      </el-table-column>\r\n                    </el-table>\r\n                  </div>\r\n\r\n                  <div ref=\"monthlySalesChart\" style=\"height: 300px; margin-top: 20px\"></div>\r\n                </div>\r\n              </div>\r\n            </el-tab-pane>\r\n\r\n            <el-tab-pane label=\"产品销售报表\" name=\"productSales\">\r\n              <el-date-picker\r\n                  v-model=\"dateRange.productSales\"\r\n                  type=\"daterange\"\r\n                  range-separator=\"至\"\r\n                  start-placeholder=\"开始日期\"\r\n                  end-placeholder=\"结束日期\"\r\n                  value-format=\"YYYY-MM-DDTHH:mm:ss\"\r\n                  @change=\"loadProductSalesReport\"\r\n              />\r\n              <el-button type=\"primary\" style=\"margin-left: 10px\" @click=\"loadProductSalesReport\">生成报表</el-button>\r\n              <el-button style=\"margin-left: 10px\" @click=\"exportReport('productSales')\">导出报表</el-button>\r\n\r\n              <div v-loading=\"loading.productSalesReport\" style=\"margin-top: 20px\">\r\n                <div v-if=\"reports.productSales\">\r\n                  <el-descriptions :column=\"2\" border>\r\n                    <el-descriptions-item label=\"总销售额\">\r\n                      {{ formatCurrency(reports.productSales.totalSales) }}\r\n                    </el-descriptions-item>\r\n                    <el-descriptions-item label=\"产品数量\">\r\n                      {{ reports.productSales.productCount }}\r\n                    </el-descriptions-item>\r\n                  </el-descriptions>\r\n\r\n                  <div ref=\"productSalesChart\" style=\"height: 300px; margin-top: 20px\"></div>\r\n\r\n                  <el-table :data=\"reports.productSales.productSalesDetails\" style=\"width: 100%; margin-top: 20px\">\r\n                    <el-table-column prop=\"productName\" label=\"产品名称\" />\r\n                    <el-table-column prop=\"sales\" label=\"销售额\">\r\n                      <template #default=\"scope\">\r\n                        {{ formatCurrency(scope.row.sales) }}\r\n                      </template>\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"orderCount\" label=\"订单数\" />\r\n                    <el-table-column prop=\"salesPercentage\" label=\"销售占比\">\r\n                      <template #default=\"scope\">\r\n                        {{ formatPercentage(scope.row.salesPercentage) }}\r\n                      </template>\r\n                    </el-table-column>\r\n                  </el-table>\r\n                </div>\r\n              </div>\r\n            </el-tab-pane>\r\n\r\n            <el-tab-pane label=\"库存报表\" name=\"inventory\">\r\n              <el-button type=\"primary\" @click=\"loadInventoryReport\">生成报表</el-button>\r\n              <el-button style=\"margin-left: 10px\" @click=\"exportReport('inventory')\">导出报表</el-button>\r\n\r\n              <div v-loading=\"loading.inventoryReport\" style=\"margin-top: 20px\">\r\n                <div v-if=\"reports.inventory\">\r\n                  <el-descriptions :column=\"2\" border>\r\n                    <el-descriptions-item label=\"总产品数\">\r\n                      {{ reports.inventory.totalProducts }}\r\n                    </el-descriptions-item>\r\n                    <el-descriptions-item label=\"总库存价值\">\r\n                      {{ formatCurrency(reports.inventory.totalInventoryValue) }}\r\n                    </el-descriptions-item>\r\n                  </el-descriptions>\r\n\r\n                  <div ref=\"inventoryStatusChart\" style=\"height: 250px; margin-top: 20px\"></div>\r\n\r\n                  <el-table :data=\"reports.inventory.inventoryDetails\" style=\"width: 100%; margin-top: 20px\">\r\n                    <el-table-column prop=\"productName\" label=\"产品名称\" />\r\n                    <el-table-column prop=\"stockQuantity\" label=\"库存数量\" />\r\n                    <el-table-column prop=\"price\" label=\"单价\">\r\n                      <template #default=\"scope\">\r\n                        {{ formatCurrency(scope.row.price) }}\r\n                      </template>\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"daysOfSupply\" label=\"可持续天数\" />\r\n                    <el-table-column prop=\"stockStatus\" label=\"库存状态\">\r\n                      <template #default=\"scope\">\r\n                        <el-tag :type=\"getStatusType(scope.row.stockStatus)\">\r\n                          {{ scope.row.stockStatus }}\r\n                        </el-tag>\r\n                      </template>\r\n                    </el-table-column>\r\n                  </el-table>\r\n                </div>\r\n              </div>\r\n            </el-tab-pane>\r\n\r\n            <el-tab-pane label=\"区域销售报表\" name=\"regionalSales\">\r\n              <el-date-picker\r\n                  v-model=\"dateRange.regionalSales\"\r\n                  type=\"daterange\"\r\n                  range-separator=\"至\"\r\n                  start-placeholder=\"开始日期\"\r\n                  end-placeholder=\"结束日期\"\r\n                  value-format=\"YYYY-MM-DDTHH:mm:ss\"\r\n                  @change=\"loadRegionalSalesReport\"\r\n              />\r\n              <el-button type=\"primary\" style=\"margin-left: 10px\" @click=\"loadRegionalSalesReport\">生成报表</el-button>\r\n              <el-button style=\"margin-left: 10px\" @click=\"exportReport('regionalSales')\">导出报表</el-button>\r\n\r\n              <div v-loading=\"loading.regionalSalesReport\" style=\"margin-top: 20px\">\r\n                <div v-if=\"reports.regionalSales\">\r\n                  <el-descriptions :column=\"2\" border>\r\n                    <el-descriptions-item label=\"总销售额\">\r\n                      {{ formatCurrency(reports.regionalSales.totalSales) }}\r\n                    </el-descriptions-item>\r\n                    <el-descriptions-item label=\"区域数量\">\r\n                      {{ reports.regionalSales.regionCount }}\r\n                    </el-descriptions-item>\r\n                  </el-descriptions>\r\n\r\n                  <div ref=\"regionalSalesChart\" style=\"height: 300px; margin-top: 20px\"></div>\r\n\r\n                  <el-table :data=\"reports.regionalSales.regionalSalesDetails\" style=\"width: 100%; margin-top: 20px\">\r\n                    <el-table-column prop=\"region\" label=\"区域\" />\r\n                    <el-table-column prop=\"sales\" label=\"销售额\">\r\n                      <template #default=\"scope\">\r\n                        {{ formatCurrency(scope.row.sales) }}\r\n                      </template>\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"orderCount\" label=\"订单数\" />\r\n                    <el-table-column prop=\"salesPercentage\" label=\"销售占比\">\r\n                      <template #default=\"scope\">\r\n                        {{ formatPercentage(scope.row.salesPercentage) }}\r\n                      </template>\r\n                    </el-table-column>\r\n                  </el-table>\r\n                </div>\r\n              </div>\r\n            </el-tab-pane>\r\n\r\n            <el-tab-pane label=\"预测对比报表\" name=\"forecastComparison\">\r\n              <el-button type=\"primary\" @click=\"loadForecastComparisonReport\">生成报表</el-button>\r\n              <el-button style=\"margin-left: 10px\" @click=\"exportReport('forecastComparison')\">导出报表</el-button>\r\n\r\n              <div v-loading=\"loading.forecastComparisonReport\" style=\"margin-top: 20px\">\r\n                <div v-if=\"reports.forecastComparison\">\r\n                  <el-alert\r\n                      v-if=\"reports.forecastComparison.message\"\r\n                      :title=\"reports.forecastComparison.message\"\r\n                      type=\"info\"\r\n                      :closable=\"false\"\r\n                  />\r\n\r\n                  <template v-else>\r\n                    <el-descriptions :column=\"2\" border>\r\n                      <el-descriptions-item label=\"预测数据数量\">\r\n                        {{ reports.forecastComparison.forecasts }}\r\n                      </el-descriptions-item>\r\n                      <el-descriptions-item label=\"平均预测准确度\">\r\n                        {{ formatPercentage(reports.forecastComparison.avgAccuracy) }}\r\n                      </el-descriptions-item>\r\n                    </el-descriptions>\r\n\r\n                    <div ref=\"forecastComparisonChart\" style=\"height: 300px; margin-top: 20px\"></div>\r\n\r\n                    <el-table :data=\"reports.forecastComparison.comparisonDetails\" style=\"width: 100%; margin-top: 20px\">\r\n                      <el-table-column prop=\"productName\" label=\"产品名称\" />\r\n                      <el-table-column prop=\"predictedSales\" label=\"预测销售额\">\r\n                        <template #default=\"scope\">\r\n                          {{ formatCurrency(scope.row.predictedSales) }}\r\n                        </template>\r\n                      </el-table-column>\r\n                      <el-table-column prop=\"actualSales\" label=\"实际销售额\">\r\n                        <template #default=\"scope\">\r\n                          {{ formatCurrency(scope.row.actualSales) }}\r\n                        </template>\r\n                      </el-table-column>\r\n                      <el-table-column prop=\"accuracy\" label=\"准确度\">\r\n                        <template #default=\"scope\">\r\n                          {{ formatPercentage(scope.row.accuracy) }}\r\n                        </template>\r\n                      </el-table-column>\r\n                      <el-table-column prop=\"forecastQuality\" label=\"预测质量\">\r\n                        <template #default=\"scope\">\r\n                          <el-tag :type=\"getForecastQualityType(scope.row.forecastQuality)\">\r\n                            {{ scope.row.forecastQuality }}\r\n                          </el-tag>\r\n                        </template>\r\n                      </el-table-column>\r\n                    </el-table>\r\n                  </template>\r\n                </div>\r\n              </div>\r\n            </el-tab-pane>\r\n          </el-tabs>\r\n        </el-card>\r\n      </el-tab-pane>\r\n\r\n      <!-- 高级搜索 -->\r\n      <el-tab-pane label=\"高级搜索\" name=\"search\">\r\n        <el-tabs v-model=\"activeSearchTab\">\r\n          <el-tab-pane label=\"订单搜索\" name=\"orders\">\r\n            <el-form :model=\"searchParams.orders\" label-width=\"100px\">\r\n              <el-row :gutter=\"20\">\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"客户ID\">\r\n                    <el-input v-model=\"searchParams.orders.customerId\" />\r\n                  </el-form-item>\r\n                </el-col>\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"产品ID\">\r\n                    <el-input v-model=\"searchParams.orders.productId\" />\r\n                  </el-form-item>\r\n                </el-col>\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"订单状态\">\r\n                    <el-select v-model=\"searchParams.orders.orderStatus\" placeholder=\"请选择\">\r\n                      <el-option label=\"待处理\" value=\"pending\" />\r\n                      <el-option label=\"已发货\" value=\"shipped\" />\r\n                      <el-option label=\"已完成\" value=\"completed\" />\r\n                      <el-option label=\"已退款\" value=\"refunded\" />\r\n                    </el-select>\r\n                  </el-form-item>\r\n                </el-col>\r\n              </el-row>\r\n\r\n              <el-row :gutter=\"20\">\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"订单号\">\r\n                    <el-input v-model=\"searchParams.orders.orderNumber\" />\r\n                  </el-form-item>\r\n                </el-col>\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"区域\">\r\n                    <el-input v-model=\"searchParams.orders.region\" />\r\n                  </el-form-item>\r\n                </el-col>\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"金额范围\">\r\n                    <el-input-number v-model=\"searchParams.orders.minAmount\" :min=\"0\" :step=\"100\" style=\"width: 120px\" />\r\n                    至\r\n                    <el-input-number v-model=\"searchParams.orders.maxAmount\" :min=\"0\" :step=\"100\" style=\"width: 120px\" />\r\n                  </el-form-item>\r\n                </el-col>\r\n              </el-row>\r\n\r\n              <el-row :gutter=\"20\">\r\n                <el-col :span=\"12\">\r\n                  <el-form-item label=\"日期范围\">\r\n                    <el-date-picker\r\n                        v-model=\"dateRange.orderSearch\"\r\n                        type=\"daterange\"\r\n                        range-separator=\"至\"\r\n                        start-placeholder=\"开始日期\"\r\n                        end-placeholder=\"结束日期\"\r\n                        value-format=\"YYYY-MM-DDTHH:mm:ss\"\r\n                    />\r\n                  </el-form-item>\r\n                </el-col>\r\n              </el-row>\r\n\r\n              <el-form-item>\r\n                <el-button type=\"primary\" @click=\"searchOrders\">搜索</el-button>\r\n                <el-button @click=\"resetOrderSearch\">重置</el-button>\r\n              </el-form-item>\r\n            </el-form>\r\n\r\n            <div class=\"table-actions\" v-if=\"searchResults.orders.length > 0\">\r\n              <el-select v-model=\"bulkOperation.orders.operation\" placeholder=\"批量操作\" style=\"width: 150px\">\r\n                <el-option label=\"更新状态\" value=\"updateStatus\" />\r\n                <el-option label=\"更新金额\" value=\"updateAmount\" />\r\n                <el-option label=\"删除订单\" value=\"delete\" />\r\n              </el-select>\r\n\r\n              <template v-if=\"bulkOperation.orders.operation === 'updateStatus'\">\r\n                <el-select v-model=\"bulkOperation.orders.newValues.status\" placeholder=\"选择状态\" style=\"width: 150px; margin-left: 10px\">\r\n                  <el-option label=\"待处理\" value=\"pending\" />\r\n                  <el-option label=\"已发货\" value=\"shipped\" />\r\n                  <el-option label=\"已完成\" value=\"completed\" />\r\n                  <el-option label=\"已退款\" value=\"refunded\" />\r\n                </el-select>\r\n              </template>\r\n\r\n              <template v-if=\"bulkOperation.orders.operation === 'updateAmount'\">\r\n                <el-input-number v-model=\"bulkOperation.orders.newValues.amount\" :min=\"0\" :step=\"100\" style=\"width: 150px; margin-left: 10px\" placeholder=\"新金额\" />\r\n              </template>\r\n\r\n              <el-button type=\"primary\" style=\"margin-left: 10px\" @click=\"executeBulkOperation('orders')\">执行</el-button>\r\n            </div>\r\n\r\n            <el-table\r\n                v-loading=\"loading.orderSearch\"\r\n                :data=\"searchResults.orders\"\r\n                style=\"width: 100%\"\r\n                @selection-change=\"handleOrderSelectionChange\"\r\n            >\r\n              <el-table-column type=\"selection\" width=\"55\" />\r\n              <el-table-column prop=\"orderId\" label=\"订单ID\" width=\"80\" />\r\n              <el-table-column prop=\"orderNumber\" label=\"订单号\" />\r\n              <el-table-column prop=\"customerId\" label=\"客户ID\" width=\"80\" />\r\n              <el-table-column prop=\"productId\" label=\"产品ID\" width=\"80\" />\r\n              <el-table-column prop=\"totalAmount\" label=\"金额\" width=\"120\">\r\n                <template #default=\"scope\">\r\n                  {{ formatCurrency(scope.row.totalAmount) }}\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"orderStatus\" label=\"状态\" width=\"100\">\r\n                <template #default=\"scope\">\r\n                  <el-tag :type=\"getOrderStatusType(scope.row.orderStatus)\">\r\n                    {{ scope.row.orderStatus }}\r\n                  </el-tag>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"region\" label=\"区域\" width=\"100\" />\r\n              <el-table-column prop=\"createdAt\" label=\"创建时间\" width=\"180\">\r\n                <template #default=\"scope\">\r\n                  {{ formatDate(scope.row.createdAt) }}\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n\r\n            <div class=\"pagination\" style=\"margin-top: 20px; text-align: right;\">\r\n              <el-pagination\r\n                  v-model:current-page=\"pagination.orders.page\"\r\n                  v-model:page-size=\"pagination.orders.size\"\r\n                  :page-sizes=\"[10, 20, 50, 100]\"\r\n                  layout=\"total, sizes, prev, pager, next, jumper\"\r\n                  :total=\"pagination.orders.total\"\r\n                  @size-change=\"searchOrders\"\r\n                  @current-change=\"searchOrders\"\r\n              />\r\n            </div>\r\n          </el-tab-pane>\r\n\r\n          <el-tab-pane label=\"产品搜索\" name=\"products\">\r\n            <el-form :model=\"searchParams.products\" label-width=\"100px\">\r\n              <el-row :gutter=\"20\">\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"产品名称\">\r\n                    <el-input v-model=\"searchParams.products.productName\" />\r\n                  </el-form-item>\r\n                </el-col>\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"产品描述\">\r\n                    <el-input v-model=\"searchParams.products.description\" />\r\n                  </el-form-item>\r\n                </el-col>\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"状态\">\r\n                    <el-select v-model=\"searchParams.products.status\" placeholder=\"请选择\">\r\n                      <el-option label=\"活跃\" value=\"active\" />\r\n                      <el-option label=\"停用\" value=\"inactive\" />\r\n                    </el-select>\r\n                  </el-form-item>\r\n                </el-col>\r\n              </el-row>\r\n\r\n              <el-row :gutter=\"20\">\r\n                <el-col :span=\"12\">\r\n                  <el-form-item label=\"价格范围\">\r\n                    <el-input-number v-model=\"searchParams.products.minPrice\" :min=\"0\" :step=\"10\" style=\"width: 120px\" />\r\n                    至\r\n                    <el-input-number v-model=\"searchParams.products.maxPrice\" :min=\"0\" :step=\"10\" style=\"width: 120px\" />\r\n                  </el-form-item>\r\n                </el-col>\r\n                <el-col :span=\"12\">\r\n                  <el-form-item label=\"库存范围\">\r\n                    <el-input-number v-model=\"searchParams.products.minStock\" :min=\"0\" :step=\"10\" style=\"width: 120px\" />\r\n                    至\r\n                    <el-input-number v-model=\"searchParams.products.maxStock\" :min=\"0\" :step=\"10\" style=\"width: 120px\" />\r\n                  </el-form-item>\r\n                </el-col>\r\n              </el-row>\r\n\r\n              <el-row :gutter=\"20\">\r\n                <el-col :span=\"12\">\r\n                  <el-form-item label=\"日期范围\">\r\n                    <el-date-picker\r\n                        v-model=\"dateRange.productSearch\"\r\n                        type=\"daterange\"\r\n                        range-separator=\"至\"\r\n                        start-placeholder=\"开始日期\"\r\n                        end-placeholder=\"结束日期\"\r\n                        value-format=\"YYYY-MM-DDTHH:mm:ss\"\r\n                    />\r\n                  </el-form-item>\r\n                </el-col>\r\n              </el-row>\r\n\r\n              <el-form-item>\r\n                <el-button type=\"primary\" @click=\"searchProducts\">搜索</el-button>\r\n                <el-button @click=\"resetProductSearch\">重置</el-button>\r\n              </el-form-item>\r\n            </el-form>\r\n\r\n            <div class=\"table-actions\" v-if=\"searchResults.products.length > 0\">\r\n              <el-select v-model=\"bulkOperation.products.operation\" placeholder=\"批量操作\" style=\"width: 150px\">\r\n                <el-option label=\"更新价格\" value=\"updatePrice\" />\r\n                <el-option label=\"更新库存\" value=\"updateStock\" />\r\n                <el-option label=\"更新状态\" value=\"updateStatus\" />\r\n                <el-option label=\"删除产品\" value=\"delete\" />\r\n              </el-select>\r\n\r\n              <template v-if=\"bulkOperation.products.operation === 'updatePrice'\">\r\n                <el-input-number v-model=\"bulkOperation.products.newValues.price\" :min=\"0\" :step=\"10\" style=\"width: 150px; margin-left: 10px\" placeholder=\"新价格\" />\r\n              </template>\r\n\r\n              <template v-if=\"bulkOperation.products.operation === 'updateStock'\">\r\n                <el-input-number v-model=\"bulkOperation.products.newValues.stockQuantity\" :min=\"0\" :step=\"10\" style=\"width: 150px; margin-left: 10px\" placeholder=\"新库存\" />\r\n              </template>\r\n\r\n              <template v-if=\"bulkOperation.products.operation === 'updateStatus'\">\r\n                <el-select v-model=\"bulkOperation.products.newValues.status\" placeholder=\"选择状态\" style=\"width: 150px; margin-left: 10px\">\r\n                  <el-option label=\"活跃\" value=\"active\" />\r\n                  <el-option label=\"停用\" value=\"inactive\" />\r\n                </el-select>\r\n              </template>\r\n\r\n              <el-button type=\"primary\" style=\"margin-left: 10px\" @click=\"executeBulkOperation('products')\">执行</el-button>\r\n            </div>\r\n\r\n            <el-table\r\n                v-loading=\"loading.productSearch\"\r\n                :data=\"searchResults.products\"\r\n                style=\"width: 100%\"\r\n                @selection-change=\"handleProductSelectionChange\"\r\n            >\r\n              <el-table-column type=\"selection\" width=\"55\" />\r\n              <el-table-column prop=\"productId\" label=\"产品ID\" width=\"80\" />\r\n              <el-table-column prop=\"productName\" label=\"产品名称\" />\r\n              <el-table-column prop=\"description\" label=\"描述\" show-overflow-tooltip />\r\n              <el-table-column prop=\"price\" label=\"价格\" width=\"120\">\r\n                <template #default=\"scope\">\r\n                  {{ formatCurrency(scope.row.price) }}\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"stockQuantity\" label=\"库存\" width=\"80\" />\r\n              <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n                <template #default=\"scope\">\r\n                  <el-tag :type=\"scope.row.status === 'active' ? 'success' : 'danger'\">\r\n                    {{ scope.row.status }}\r\n                  </el-tag>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"createdAt\" label=\"创建时间\" width=\"180\">\r\n                <template #default=\"scope\">\r\n                  {{ formatDate(scope.row.createdAt) }}\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n\r\n            <div class=\"pagination\" style=\"margin-top: 20px; text-align: right;\">\r\n              <el-pagination\r\n                  v-model:current-page=\"pagination.products.page\"\r\n                  v-model:page-size=\"pagination.products.size\"\r\n                  :page-sizes=\"[10, 20, 50, 100]\"\r\n                  layout=\"total, sizes, prev, pager, next, jumper\"\r\n                  :total=\"pagination.products.total\"\r\n                  @size-change=\"searchProducts\"\r\n                  @current-change=\"searchProducts\"\r\n              />\r\n            </div>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </el-tab-pane>\r\n\r\n      <!-- 数据可视化 -->\r\n      <el-tab-pane label=\"数据可视化\" name=\"visualization\">\r\n        <el-card class=\"box-card\">\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <span>数据可视化</span>\r\n            </div>\r\n          </template>\r\n\r\n          <div class=\"data-filters\">\r\n            <el-radio-group v-model=\"visualizationPeriod\" @change=\"loadVisualizationData\">\r\n              <el-radio-button label=\"daily\">日</el-radio-button>\r\n              <el-radio-button label=\"weekly\">周</el-radio-button>\r\n              <el-radio-button label=\"monthly\">月</el-radio-button>\r\n            </el-radio-group>\r\n          </div>\r\n\r\n          <div class=\"visualization-tabs\">\r\n            <el-tabs v-model=\"activeVisualizationTab\" @tab-click=\"loadVisualizationData\">\r\n              <el-tab-pane label=\"销售趋势\" name=\"salesTrend\">\r\n                <div v-loading=\"loading.visualizationSalesTrend\">\r\n                  <div ref=\"visualizationSalesChart\" style=\"height: 400px\"></div>\r\n                </div>\r\n              </el-tab-pane>\r\n\r\n              <el-tab-pane label=\"产品销售分布\" name=\"productSales\">\r\n                <div v-loading=\"loading.visualizationProductSales\">\r\n                  <div ref=\"visualizationProductChart\" style=\"height: 400px\"></div>\r\n                </div>\r\n              </el-tab-pane>\r\n\r\n              <el-tab-pane label=\"区域销售分布\" name=\"regionalSales\">\r\n                <div v-loading=\"loading.visualizationRegionalSales\">\r\n                  <div ref=\"visualizationRegionalChart\" style=\"height: 400px\"></div>\r\n                </div>\r\n              </el-tab-pane>\r\n\r\n              <el-tab-pane label=\"订单状态分布\" name=\"orderStatus\">\r\n                <div v-loading=\"loading.visualizationOrderStatus\">\r\n                  <div ref=\"visualizationOrderStatusChart\" style=\"height: 400px\"></div>\r\n                </div>\r\n              </el-tab-pane>\r\n\r\n              <el-tab-pane label=\"销售概览\" name=\"salesOverview\">\r\n                <div v-loading=\"loading.visualizationSalesOverview\">\r\n                  <el-row :gutter=\"20\">\r\n                    <el-col :span=\"6\" v-for=\"(item, key) in visualizationData.salesOverview\" :key=\"key\">\r\n                      <el-card shadow=\"hover\" class=\"box-card\">\r\n                        <div class=\"kpi-card\">\r\n                          <div class=\"kpi-value\">\r\n                            <template v-if=\"key.includes('Sales') || key.includes('OrderValue')\">\r\n                              {{ formatCurrency(item) }}\r\n                            </template>\r\n                            <template v-else>\r\n                              {{ item }}\r\n                            </template>\r\n                          </div>\r\n                          <div class=\"kpi-label\">{{ getKpiLabel(key) }}</div>\r\n                        </div>\r\n                      </el-card>\r\n                    </el-col>\r\n                  </el-row>\r\n                </div>\r\n              </el-tab-pane>\r\n            </el-tabs>\r\n          </div>\r\n        </el-card>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\nimport axios from 'axios'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'MerchantDashboard',\r\n  data() {\r\n    return {\r\n      merchantId: '',\r\n      activeTab: 'dashboard',\r\n      activeReportTab: 'dailySales',\r\n      activeSearchTab: 'orders',\r\n      activeVisualizationTab: 'salesTrend',\r\n      visualizationPeriod: 'monthly',\r\n\r\n      loading: {\r\n        salesTrend: false,\r\n        inventoryAlerts: false,\r\n        customerBehavior: false,\r\n        dailySalesReport: false,\r\n        monthlySalesReport: false,\r\n        productSalesReport: false,\r\n        inventoryReport: false,\r\n        regionalSalesReport: false,\r\n        forecastComparisonReport: false,\r\n        orderSearch: false,\r\n        productSearch: false,\r\n        visualizationSalesTrend: false,\r\n        visualizationProductSales: false,\r\n        visualizationRegionalSales: false,\r\n        visualizationOrderStatus: false,\r\n        visualizationSalesOverview: false\r\n      },\r\n\r\n      salesTrend: null,\r\n      inventoryAlerts: null,\r\n      customerBehavior: null,\r\n\r\n      reports: {\r\n        dailySales: null,\r\n        monthlySales: null,\r\n        productSales: null,\r\n        inventory: null,\r\n        regionalSales: null,\r\n        forecastComparison: null\r\n      },\r\n\r\n      searchResults: {\r\n        orders: [],\r\n        products: []\r\n      },\r\n\r\n      visualizationData: {\r\n        salesTrend: null,\r\n        productSales: null,\r\n        regionalSales: null,\r\n        orderStatus: null,\r\n        salesOverview: null\r\n      },\r\n\r\n      dateRange: {\r\n        dailySales: [],\r\n        productSales: [],\r\n        regionalSales: [],\r\n        orderSearch: null,\r\n        productSearch: null\r\n      },\r\n\r\n      selectedYear: new Date(),\r\n\r\n      searchParams: {\r\n        orders: {\r\n          customerId: '',\r\n          productId: '',\r\n          orderNumber: '',\r\n          orderStatus: '',\r\n          region: '',\r\n          minAmount: null,\r\n          maxAmount: null\r\n        },\r\n        products: {\r\n          productName: '',\r\n          description: '',\r\n          minPrice: null,\r\n          maxPrice: null,\r\n          minStock: null,\r\n          maxStock: null,\r\n          status: ''\r\n        }\r\n      },\r\n\r\n      pagination: {\r\n        orders: {\r\n          page: 1,\r\n          size: 10,\r\n          total: 0\r\n        },\r\n        products: {\r\n          page: 1,\r\n          size: 10,\r\n          total: 0\r\n        }\r\n      },\r\n\r\n      selectedOrders: [],\r\n      selectedProducts: [],\r\n\r\n      bulkOperation: {\r\n        orders: {\r\n          operation: '',\r\n          newValues: {}\r\n        },\r\n        products: {\r\n          operation: '',\r\n          newValues: {}\r\n        }\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    customerSegmentData() {\r\n      if (!this.customerBehavior?.segmentStats) return []\r\n      return Object.entries(this.customerBehavior.segmentStats).map(([segment, data]) => ({\r\n        segment,\r\n        count: data.count,\r\n        percentage: data.percentage\r\n      }))\r\n    }\r\n  },\r\n  mounted() {\r\n    // 设置默认日期范围\r\n    const today = new Date();\r\n    const thirtyDaysAgo = new Date();\r\n    thirtyDaysAgo.setDate(today.getDate() - 30);\r\n\r\n    this.dateRange.dailySales = [thirtyDaysAgo, today];\r\n    this.dateRange.productSales = [thirtyDaysAgo, today];\r\n    this.dateRange.regionalSales = [thirtyDaysAgo, today];\r\n  },\r\n  methods: {\r\n    async fetchData() {\r\n      if (!this.merchantId) {\r\n        ElMessage.error('请输入商家ID')\r\n        return\r\n      }\r\n\r\n      await this.loadDashboardData()\r\n    },\r\n\r\n    async loadDashboardData() {\r\n      await Promise.all([\r\n        this.loadSalesTrend(),\r\n        this.loadInventoryAlerts(),\r\n        this.loadCustomerBehavior()\r\n      ])\r\n    },\r\n\r\n    async loadSalesTrend() {\r\n      this.loading.salesTrend = true\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/api/data-analysis/sales-trend/${this.merchantId}`)\r\n        this.salesTrend = response.data\r\n        this.$nextTick(() => {\r\n          this.renderSalesChart()\r\n        })\r\n      } catch (error) {\r\n        ElMessage.error('获取销售趋势数据失败')\r\n      } finally {\r\n        this.loading.salesTrend = false\r\n      }\r\n    },\r\n\r\n    async loadInventoryAlerts() {\r\n      this.loading.inventoryAlerts = true\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/api/data-analysis/inventory-alerts/${this.merchantId}`)\r\n        this.inventoryAlerts = response.data\r\n      } catch (error) {\r\n        ElMessage.error('获取库存预警数据失败')\r\n      } finally {\r\n        this.loading.inventoryAlerts = false\r\n      }\r\n    },\r\n\r\n    async loadCustomerBehavior() {\r\n      this.loading.customerBehavior = true\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/api/data-analysis/customer-behavior/${this.merchantId}`)\r\n        this.customerBehavior = response.data\r\n        this.$nextTick(() => {\r\n          this.renderCustomerSegmentChart()\r\n        })\r\n      } catch (error) {\r\n        ElMessage.error('获取客户行为数据失败')\r\n      } finally {\r\n        this.loading.customerBehavior = false\r\n      }\r\n    },\r\n\r\n    async loadDailySalesReport() {\r\n      if (!this.dateRange.dailySales || this.dateRange.dailySales.length !== 2) {\r\n        ElMessage.warning('请选择日期范围')\r\n        return\r\n      }\r\n\r\n      this.loading.dailySalesReport = true\r\n      try {\r\n        const [startDate, endDate] = this.dateRange.dailySales\r\n        const response = await axios.get(`http://localhost:8080/api/reports/daily-sales/${this.merchantId}`, {\r\n          params: {\r\n            startDate,\r\n            endDate\r\n          }\r\n        })\r\n        this.reports.dailySales = response.data\r\n        this.$nextTick(() => {\r\n          this.renderDailySalesChart()\r\n        })\r\n      } catch (error) {\r\n        ElMessage.error('获取日销售报表失败')\r\n      } finally {\r\n        this.loading.dailySalesReport = false\r\n      }\r\n    },\r\n\r\n    async loadMonthlySalesReport() {\r\n      this.loading.monthlySalesReport = true\r\n      try {\r\n        const year = this.selectedYear instanceof Date\r\n            ? this.selectedYear.getFullYear()\r\n            : new Date(this.selectedYear).getFullYear()\r\n\r\n        const response = await axios.get(`http://localhost:8080/api/reports/monthly-sales/${this.merchantId}`, {\r\n          params: { year }\r\n        })\r\n        this.reports.monthlySales = response.data\r\n        this.$nextTick(() => {\r\n          this.renderMonthlySalesChart()\r\n        })\r\n      } catch (error) {\r\n        ElMessage.error('获取月销售报表失败')\r\n      } finally {\r\n        this.loading.monthlySalesReport = false\r\n      }\r\n    },\r\n\r\n    async loadProductSalesReport() {\r\n      if (!this.dateRange.productSales || this.dateRange.productSales.length !== 2) {\r\n        ElMessage.warning('请选择日期范围')\r\n        return\r\n      }\r\n\r\n      this.loading.productSalesReport = true\r\n      try {\r\n        const [startDate, endDate] = this.dateRange.productSales\r\n        const response = await axios.get(`http://localhost:8080/api/reports/product-sales/${this.merchantId}`, {\r\n          params: {\r\n            startDate,\r\n            endDate\r\n          }\r\n        })\r\n        this.reports.productSales = response.data\r\n        this.$nextTick(() => {\r\n          this.renderProductSalesChart()\r\n        })\r\n      } catch (error) {\r\n        ElMessage.error('获取产品销售报表失败')\r\n      } finally {\r\n        this.loading.productSalesReport = false\r\n      }\r\n    },\r\n\r\n    async loadInventoryReport() {\r\n      this.loading.inventoryReport = true\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/api/reports/inventory/${this.merchantId}`)\r\n        this.reports.inventory = response.data\r\n        this.$nextTick(() => {\r\n          this.renderInventoryStatusChart()\r\n        })\r\n      } catch (error) {\r\n        ElMessage.error('获取库存报表失败')\r\n      } finally {\r\n        this.loading.inventoryReport = false\r\n      }\r\n    },\r\n\r\n    async loadRegionalSalesReport() {\r\n      if (!this.dateRange.regionalSales || this.dateRange.regionalSales.length !== 2) {\r\n        ElMessage.warning('请选择日期范围')\r\n        return\r\n      }\r\n\r\n      this.loading.regionalSalesReport = true\r\n      try {\r\n        const [startDate, endDate] = this.dateRange.regionalSales\r\n        const response = await axios.get(`http://localhost:8080/api/reports/regional-sales/${this.merchantId}`, {\r\n          params: {\r\n            startDate,\r\n            endDate\r\n          }\r\n        })\r\n        this.reports.regionalSales = response.data\r\n        this.$nextTick(() => {\r\n          this.renderRegionalSalesChart()\r\n        })\r\n      } catch (error) {\r\n        ElMessage.error('获取区域销售报表失败')\r\n      } finally {\r\n        this.loading.regionalSalesReport = false\r\n      }\r\n    },\r\n\r\n    async loadForecastComparisonReport() {\r\n      this.loading.forecastComparisonReport = true\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/api/reports/forecast-comparison/${this.merchantId}`)\r\n        this.reports.forecastComparison = response.data\r\n        this.$nextTick(() => {\r\n          if (!this.reports.forecastComparison.message) {\r\n            this.renderForecastComparisonChart()\r\n          }\r\n        })\r\n      } catch (error) {\r\n        ElMessage.error('获取预测对比报表失败')\r\n      } finally {\r\n        this.loading.forecastComparisonReport = false\r\n      }\r\n    },\r\n\r\n    exportReport(reportType) {\r\n      if (!this.reports[reportType]) {\r\n        ElMessage.warning('请先生成报表')\r\n        return\r\n      }\r\n\r\n      // 构建导出参数\r\n      const reportId = reportType + '_' + Date.now()\r\n      const format = 'PDF' // 可以改为用户选择\r\n\r\n      axios.post(`http://localhost:8080/api/reports/export/${reportId}`, null, {\r\n        params: { format }\r\n      })\r\n          .then(response => {\r\n            ElMessage.success('报表导出成功')\r\n          })\r\n          .catch(error => {\r\n            ElMessage.error('报表导出失败')\r\n          })\r\n    },\r\n\r\n    async searchOrders() {\r\n      this.loading.orderSearch = true\r\n      try {\r\n        // 构建查询参数\r\n        const params = {\r\n          merchantId: this.merchantId,\r\n          page: this.pagination.orders.page - 1,\r\n          size: this.pagination.orders.size\r\n        }\r\n\r\n        // 添加其他搜索条件\r\n        if (this.searchParams.orders.customerId) params.customerId = this.searchParams.orders.customerId\r\n        if (this.searchParams.orders.productId) params.productId = this.searchParams.orders.productId\r\n        if (this.searchParams.orders.orderNumber) params.orderNumber = this.searchParams.orders.orderNumber\r\n        if (this.searchParams.orders.orderStatus) params.orderStatus = this.searchParams.orders.orderStatus\r\n        if (this.searchParams.orders.region) params.region = this.searchParams.orders.region\r\n        if (this.searchParams.orders.minAmount) params.minAmount = this.searchParams.orders.minAmount\r\n        if (this.searchParams.orders.maxAmount) params.maxAmount = this.searchParams.orders.maxAmount\r\n\r\n        // 添加日期范围\r\n        if (this.dateRange.orderSearch && this.dateRange.orderSearch.length === 2) {\r\n          params.startDate = this.dateRange.orderSearch[0]\r\n          params.endDate = this.dateRange.orderSearch[1]\r\n        }\r\n\r\n        const response = await axios.get('http://localhost:8080/api/advanced-search/orders', { params })\r\n        this.searchResults.orders = response.data.content\r\n        this.pagination.orders.total = response.data.totalElements\r\n      } catch (error) {\r\n        ElMessage.error('订单搜索失败')\r\n      } finally {\r\n        this.loading.orderSearch = false\r\n      }\r\n    },\r\n\r\n    async searchProducts() {\r\n      this.loading.productSearch = true\r\n      try {\r\n        // 构建查询参数\r\n        const params = {\r\n          merchantId: this.merchantId,\r\n          page: this.pagination.products.page - 1,\r\n          size: this.pagination.products.size\r\n        }\r\n\r\n        // 添加其他搜索条件\r\n        if (this.searchParams.products.productName) params.productName = this.searchParams.products.productName\r\n        if (this.searchParams.products.description) params.description = this.searchParams.products.description\r\n        if (this.searchParams.products.status) params.status = this.searchParams.products.status\r\n        if (this.searchParams.products.minPrice) params.minPrice = this.searchParams.products.minPrice\r\n        if (this.searchParams.products.maxPrice) params.maxPrice = this.searchParams.products.maxPrice\r\n        if (this.searchParams.products.minStock) params.minStock = this.searchParams.products.minStock\r\n        if (this.searchParams.products.maxStock) params.maxStock = this.searchParams.products.maxStock\r\n\r\n        // 添加日期范围\r\n        if (this.dateRange.productSearch && this.dateRange.productSearch.length === 2) {\r\n          params.startDate = this.dateRange.productSearch[0]\r\n          params.endDate = this.dateRange.productSearch[1]\r\n        }\r\n\r\n        const response = await axios.get('http://localhost:8080/api/advanced-search/products', { params })\r\n        this.searchResults.products = response.data.content\r\n        this.pagination.products.total = response.data.totalElements\r\n      } catch (error) {\r\n        ElMessage.error('产品搜索失败')\r\n      } finally {\r\n        this.loading.productSearch = false\r\n      }\r\n    },\r\n\r\n    resetOrderSearch() {\r\n      // 重置订单搜索条件\r\n      this.searchParams.orders = {\r\n        customerId: '',\r\n        productId: '',\r\n        orderNumber: '',\r\n        orderStatus: '',\r\n        region: '',\r\n        minAmount: null,\r\n        maxAmount: null\r\n      }\r\n      this.dateRange.orderSearch = null\r\n      this.pagination.orders.page = 1\r\n    },\r\n\r\n    resetProductSearch() {\r\n      // 重置产品搜索条件\r\n      this.searchParams.products = {\r\n        productName: '',\r\n        description: '',\r\n        minPrice: null,\r\n        maxPrice: null,\r\n        minStock: null,\r\n        maxStock: null,\r\n        status: ''\r\n      }\r\n      this.dateRange.productSearch = null\r\n      this.pagination.products.page = 1\r\n    },\r\n\r\n    handleOrderSelectionChange(selection) {\r\n      this.selectedOrders = selection\r\n    },\r\n\r\n    handleProductSelectionChange(selection) {\r\n      this.selectedProducts = selection\r\n    },\r\n\r\n    executeBulkOperation(entityType) {\r\n      const selection = entityType === 'orders' ? this.selectedOrders : this.selectedProducts\r\n\r\n      if (selection.length === 0) {\r\n        ElMessage.warning('请至少选择一项')\r\n        return\r\n      }\r\n\r\n      const operation = this.bulkOperation[entityType].operation\r\n      if (!operation) {\r\n        ElMessage.warning('请选择操作类型')\r\n        return\r\n      }\r\n\r\n      // 获取选中项ID\r\n      const ids = selection.map(item =>\r\n          entityType === 'orders' ? item.orderId : item.productId\r\n      )\r\n\r\n      axios.post(`http://localhost:8080/api/advanced-search/${entityType}/bulk-operation`,\r\n          this.bulkOperation[entityType].newValues, {\r\n            params: {\r\n              [`${entityType.slice(0, -1)}Ids`]: ids.join(','),\r\n              operation\r\n            }\r\n          }\r\n      )\r\n          .then(response => {\r\n            // 处理操作结果\r\n            if (response.data.successCount > 0) {\r\n              ElMessage.success(`成功处理 ${response.data.successCount} 项`)\r\n\r\n              // 刷新数据\r\n              if (entityType === 'orders') {\r\n                this.searchOrders()\r\n              } else {\r\n                this.searchProducts()\r\n              }\r\n            }\r\n\r\n            if (response.data.failCount > 0) {\r\n              ElMessage.warning(`${response.data.failCount} 项处理失败`)\r\n            }\r\n          })\r\n          .catch(error => {\r\n            ElMessage.error(`批量操作${entityType}失败`)\r\n          })\r\n    },\r\n\r\n    // 可视化方法\r\n    loadVisualizationData() {\r\n      switch (this.activeVisualizationTab) {\r\n        case 'salesTrend':\r\n          this.loadVisualizationSalesTrend()\r\n          break\r\n        case 'productSales':\r\n          this.loadVisualizationProductSales()\r\n          break\r\n        case 'regionalSales':\r\n          this.loadVisualizationRegionalSales()\r\n          break\r\n        case 'orderStatus':\r\n          this.loadVisualizationOrderStatus()\r\n          break\r\n        case 'salesOverview':\r\n          this.loadVisualizationSalesOverview()\r\n          break\r\n      }\r\n    },\r\n\r\n    async loadVisualizationSalesTrend() {\r\n      this.loading.visualizationSalesTrend = true\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/api/data-visualization/sales-trend/${this.merchantId}`, {\r\n          params: { period: this.visualizationPeriod }\r\n        })\r\n        this.visualizationData.salesTrend = response.data\r\n\r\n        this.$nextTick(() => {\r\n          this.renderVisualizationSalesChart()\r\n        })\r\n      } catch (error) {\r\n        ElMessage.error('获取销售趋势可视化数据失败')\r\n      } finally {\r\n        this.loading.visualizationSalesTrend = false\r\n      }\r\n    },\r\n\r\n    async loadVisualizationProductSales() {\r\n      this.loading.visualizationProductSales = true\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/api/data-visualization/product-sales-distribution/${this.merchantId}`)\r\n        this.visualizationData.productSales = response.data\r\n\r\n        this.$nextTick(() => {\r\n          this.renderVisualizationProductChart()\r\n        })\r\n      } catch (error) {\r\n        ElMessage.error('获取产品销售分布可视化数据失败')\r\n      } finally {\r\n        this.loading.visualizationProductSales = false\r\n      }\r\n    },\r\n\r\n    async loadVisualizationRegionalSales() {\r\n      this.loading.visualizationRegionalSales = true\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/api/data-visualization/regional-sales-distribution/${this.merchantId}`)\r\n        this.visualizationData.regionalSales = response.data\r\n\r\n        this.$nextTick(() => {\r\n          this.renderVisualizationRegionalChart()\r\n        })\r\n      } catch (error) {\r\n        ElMessage.error('获取区域销售分布可视化数据失败')\r\n      } finally {\r\n        this.loading.visualizationRegionalSales = false\r\n      }\r\n    },\r\n\r\n    async loadVisualizationOrderStatus() {\r\n      this.loading.visualizationOrderStatus = true\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/api/data-visualization/order-status-distribution/${this.merchantId}`)\r\n        this.visualizationData.orderStatus = response.data\r\n\r\n        this.$nextTick(() => {\r\n          this.renderVisualizationOrderStatusChart()\r\n        })\r\n      } catch (error) {\r\n        ElMessage.error('获取订单状态分布可视化数据失败')\r\n      } finally {\r\n        this.loading.visualizationOrderStatus = false\r\n      }\r\n    },\r\n\r\n    async loadVisualizationSalesOverview() {\r\n      this.loading.visualizationSalesOverview = true\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/api/data-visualization/sales-overview/${this.merchantId}`)\r\n        this.visualizationData.salesOverview = response.data\r\n      } catch (error) {\r\n        ElMessage.error('获取销售概览可视化数据失败')\r\n      } finally {\r\n        this.loading.visualizationSalesOverview = false\r\n      }\r\n    },\r\n\r\n    // 图表渲染方法\r\n    renderSalesChart() {\r\n      if (!this.salesTrend?.monthlySales) return\r\n\r\n      const chart = echarts.init(this.$refs.salesChart)\r\n      const data = Object.entries(this.salesTrend.monthlySales)\r\n\r\n      chart.setOption({\r\n        title: { text: '月销售趋势' },\r\n        tooltip: { trigger: 'axis' },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: data.map(([month]) => month)\r\n        },\r\n        yAxis: { type: 'value' },\r\n        series: [{\r\n          name: '销售额',\r\n          type: 'line',\r\n          data: data.map(([, amount]) => amount)\r\n        }]\r\n      })\r\n    },\r\n\r\n    renderCustomerSegmentChart() {\r\n      if (!this.customerBehavior?.segmentStats) return\r\n\r\n      const chart = echarts.init(this.$refs.customerSegmentChart)\r\n      const data = Object.entries(this.customerBehavior.segmentStats).map(([segment, data]) => ({\r\n        name: segment,\r\n        value: data.count\r\n      }))\r\n\r\n      chart.setOption({\r\n        title: { text: '客户细分分布' },\r\n        tooltip: { trigger: 'item', formatter: '{a} <br/>{b}: {c} ({d}%)' },\r\n        legend: { orient: 'vertical', left: 'left' },\r\n        series: [{\r\n          name: '客户细分',\r\n          type: 'pie',\r\n          radius: '70%',\r\n          data: data,\r\n          emphasis: {\r\n            itemStyle: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }]\r\n      })\r\n    },\r\n\r\n    renderDailySalesChart() {\r\n      if (!this.reports.dailySales?.dailySales) return\r\n\r\n      const chart = echarts.init(this.$refs.dailySalesChart)\r\n      const data = Object.entries(this.reports.dailySales.dailySales)\r\n\r\n      chart.setOption({\r\n        title: { text: '日销售趋势' },\r\n        tooltip: { trigger: 'axis' },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: data.map(([date]) => date)\r\n        },\r\n        yAxis: { type: 'value' },\r\n        series: [{\r\n          name: '销售额',\r\n          type: 'bar',\r\n          data: data.map(([, amount]) => amount)\r\n        }]\r\n      })\r\n    },\r\n\r\n    renderMonthlySalesChart() {\r\n      if (!this.reports.monthlySales?.monthlySales) return\r\n\r\n      const chart = echarts.init(this.$refs.monthlySalesChart)\r\n      const data = Object.entries(this.reports.monthlySales.monthlySales)\r\n\r\n      chart.setOption({\r\n        title: { text: '月销售趋势' },\r\n        tooltip: { trigger: 'axis' },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: data.map(([month]) => month)\r\n        },\r\n        yAxis: { type: 'value' },\r\n        series: [{\r\n          name: '销售额',\r\n          type: 'line',\r\n          data: data.map(([, amount]) => amount)\r\n        }]\r\n      })\r\n    },\r\n\r\n    renderProductSalesChart() {\r\n      if (!this.reports.productSales?.productSalesDetails) return\r\n\r\n      const chart = echarts.init(this.$refs.productSalesChart)\r\n      const data = this.reports.productSales.productSalesDetails.slice(0, 10) // 取前10个产品\r\n\r\n      chart.setOption({\r\n        title: { text: '产品销售分布' },\r\n        tooltip: { trigger: 'item', formatter: '{a} <br/>{b}: {c} ({d}%)' },\r\n        legend: { orient: 'vertical', left: 'left', type: 'scroll', height: 250 },\r\n        series: [{\r\n          name: '销售额',\r\n          type: 'pie',\r\n          radius: '70%',\r\n          data: data.map(item => ({\r\n            name: item.productName,\r\n            value: item.sales\r\n          })),\r\n          emphasis: {\r\n            itemStyle: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }]\r\n      })\r\n    },\r\n\r\n    renderInventoryStatusChart() {\r\n      if (!this.reports.inventory?.statusCounts) return\r\n\r\n      const chart = echarts.init(this.$refs.inventoryStatusChart)\r\n      const data = Object.entries(this.reports.inventory.statusCounts).map(([status, count]) => ({\r\n        name: status,\r\n        value: count\r\n      }))\r\n\r\n      chart.setOption({\r\n        title: { text: '库存状态分布' },\r\n        tooltip: { trigger: 'item', formatter: '{a} <br/>{b}: {c} ({d}%)' },\r\n        legend: { orient: 'vertical', left: 'left' },\r\n        series: [{\r\n          name: '库存状态',\r\n          type: 'pie',\r\n          radius: '70%',\r\n          data: data,\r\n          emphasis: {\r\n            itemStyle: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }]\r\n      })\r\n    },\r\n\r\n    renderRegionalSalesChart() {\r\n      if (!this.reports.regionalSales?.regionalSalesDetails) return\r\n\r\n      const chart = echarts.init(this.$refs.regionalSalesChart)\r\n      const data = this.reports.regionalSales.regionalSalesDetails\r\n\r\n      chart.setOption({\r\n        title: { text: '区域销售分布' },\r\n        tooltip: { trigger: 'axis' },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: data.map(item => item.region),\r\n          axisLabel: { rotate: 45 }\r\n        },\r\n        yAxis: { type: 'value' },\r\n        series: [{\r\n          name: '销售额',\r\n          type: 'bar',\r\n          data: data.map(item => item.sales)\r\n        }]\r\n      })\r\n    },\r\n\r\n    renderForecastComparisonChart() {\r\n      if (!this.reports.forecastComparison?.comparisonDetails) return\r\n\r\n      const chart = echarts.init(this.$refs.forecastComparisonChart)\r\n      const data = this.reports.forecastComparison.comparisonDetails\r\n\r\n      chart.setOption({\r\n        title: { text: '预测vs实际销售对比' },\r\n        tooltip: { trigger: 'axis' },\r\n        legend: { data: ['预测销售额', '实际销售额'] },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: data.map(item => item.productName),\r\n          axisLabel: { rotate: 45 }\r\n        },\r\n        yAxis: { type: 'value' },\r\n        series: [\r\n          {\r\n            name: '预测销售额',\r\n            type: 'bar',\r\n            data: data.map(item => item.predictedSales)\r\n          },\r\n          {\r\n            name: '实际销售额',\r\n            type: 'bar',\r\n            data: data.map(item => item.actualSales)\r\n          }\r\n        ]\r\n      })\r\n    },\r\n\r\n    renderVisualizationSalesChart() {\r\n      if (!this.visualizationData.salesTrend) return\r\n\r\n      const chart = echarts.init(this.$refs.visualizationSalesChart)\r\n      const chartConfig = this.visualizationData.salesTrend.chartConfig\r\n      const dataMap = this.visualizationData.salesTrend.dataMap\r\n\r\n      chart.setOption({\r\n        title: { text: chartConfig.title },\r\n        tooltip: { trigger: 'axis' },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: dataMap.xAxis\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          name: chartConfig.yAxis\r\n        },\r\n        series: [{\r\n          name: '销售额',\r\n          type: 'line',\r\n          data: dataMap.series\r\n        }]\r\n      })\r\n    },\r\n\r\n    renderVisualizationProductChart() {\r\n      if (!this.visualizationData.productSales) return\r\n\r\n      const chart = echarts.init(this.$refs.visualizationProductChart)\r\n      const chartConfig = this.visualizationData.productSales.chartConfig\r\n      const dataMap = this.visualizationData.productSales.dataMap\r\n\r\n      chart.setOption({\r\n        title: { text: chartConfig.title },\r\n        tooltip: { trigger: 'item', formatter: '{a} <br/>{b}: {c} ({d}%)' },\r\n        legend: { orient: 'vertical', left: 'left', type: 'scroll' },\r\n        series: [{\r\n          name: '销售额',\r\n          type: 'pie',\r\n          radius: chartConfig.radius || '70%',\r\n          data: dataMap.data,\r\n          emphasis: {\r\n            itemStyle: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }]\r\n      })\r\n    },\r\n\r\n    renderVisualizationRegionalChart() {\r\n      if (!this.visualizationData.regionalSales) return\r\n\r\n      const chart = echarts.init(this.$refs.visualizationRegionalChart)\r\n      const chartConfig = this.visualizationData.regionalSales.chartConfig\r\n      const dataMap = this.visualizationData.regionalSales.dataMap\r\n\r\n      chart.setOption({\r\n        title: { text: chartConfig.title },\r\n        tooltip: { trigger: 'axis' },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: dataMap.regions,\r\n          axisLabel: { rotate: 45 }\r\n        },\r\n        yAxis: { type: 'value' },\r\n        series: [{\r\n          name: '销售额',\r\n          type: 'bar',\r\n          data: dataMap.values\r\n        }]\r\n      })\r\n    },\r\n\r\n    renderVisualizationOrderStatusChart() {\r\n      if (!this.visualizationData.orderStatus) return\r\n\r\n      const chart = echarts.init(this.$refs.visualizationOrderStatusChart)\r\n      const chartConfig = this.visualizationData.orderStatus.chartConfig\r\n      const dataMap = this.visualizationData.orderStatus.dataMap\r\n\r\n      chart.setOption({\r\n        title: { text: chartConfig.title },\r\n        tooltip: { trigger: 'item', formatter: '{a} <br/>{b}: {c} ({d}%)' },\r\n        legend: { orient: 'vertical', left: 'left' },\r\n        series: [{\r\n          name: '订单状态',\r\n          type: 'pie',\r\n          radius: '70%',\r\n          data: dataMap.data,\r\n          emphasis: {\r\n            itemStyle: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }]\r\n      })\r\n    },\r\n\r\n    formatCurrency(value) {\r\n      return new Intl.NumberFormat('zh-CN', {\r\n        style: 'currency',\r\n        currency: 'CNY'\r\n      }).format(value || 0)\r\n    },\r\n\r\n    formatPercentage(value) {\r\n      return `${((value || 0)).toFixed(2)}%`\r\n    },\r\n\r\n    formatDate(date) {\r\n      if (!date) return ''\r\n      return new Date(date).toLocaleString('zh-CN')\r\n    },\r\n\r\n    getStatusType(status) {\r\n      const types = {\r\n        '无库存': 'danger',\r\n        '紧急': 'danger',\r\n        '警告': 'warning',\r\n        '注意': 'info',\r\n        '充足': 'success'\r\n      }\r\n      return types[status] || 'info'\r\n    },\r\n\r\n    getOrderStatusType(status) {\r\n      const types = {\r\n        'pending': 'warning',\r\n        'shipped': 'info',\r\n        'completed': 'success',\r\n        'refunded': 'danger'\r\n      }\r\n      return types[status] || 'info'\r\n    },\r\n\r\n    getInventoryStatusType(status) {\r\n      const types = {\r\n        'CRITICAL': 'danger',\r\n        'WARNING': 'warning',\r\n        'ATTENTION': 'info',\r\n        'HEALTHY': 'success',\r\n        'STABLE': 'success'\r\n      }\r\n      return types[status] || 'info'\r\n    },\r\n\r\n    getInventoryStatusLabel(status) {\r\n      const labels = {\r\n        'CRITICAL': '紧急',\r\n        'WARNING': '警告',\r\n        'ATTENTION': '注意',\r\n        'HEALTHY': '健康',\r\n        'STABLE': '稳定'\r\n      }\r\n      return labels[status] || status\r\n    },\r\n\r\n    getForecastQualityType(quality) {\r\n      const types = {\r\n        '优秀': 'success',\r\n        '良好': 'success',\r\n        '一般': 'warning',\r\n        '需要改进': 'danger'\r\n      }\r\n      return types[quality] || 'info'\r\n    },\r\n\r\n    getKpiLabel(key) {\r\n      const labels = {\r\n        'totalSales': '总销售额',\r\n        'totalOrders': '总订单数',\r\n        'avgOrderValue': '平均订单额',\r\n        'pendingOrders': '待处理订单',\r\n        'completedOrders': '已完成订单',\r\n        'recentSales': '近期销售额'\r\n      }\r\n      return labels[key] || key\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.merchant-dashboard {\r\n  padding: 20px;\r\n}\r\n\r\n.search-container {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.search-input {\r\n  max-width: 400px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.insights, .assessment {\r\n  margin-top: 20px;\r\n}\r\n\r\n.insights pre, .assessment pre {\r\n  white-space: pre-wrap;\r\n  font-family: inherit;\r\n  background-color: #f8f8f8;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.customer-segments {\r\n  margin-top: 20px;\r\n}\r\n\r\n.box-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chart-container {\r\n  margin-top: 20px;\r\n}\r\n\r\n.kpi-card {\r\n  text-align: center;\r\n  padding: 20px 0;\r\n}\r\n\r\n.kpi-value {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #409EFF;\r\n}\r\n\r\n.kpi-label {\r\n  font-size: 14px;\r\n  color: #606266;\r\n  margin-top: 5px;\r\n}\r\n\r\n.data-filters {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.sub-section {\r\n  margin-top: 20px;\r\n}\r\n\r\n.sub-section-title {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.visualization-tabs {\r\n  margin-top: 20px;\r\n}\r\n\r\n.table-actions {\r\n  margin-bottom: 15px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}