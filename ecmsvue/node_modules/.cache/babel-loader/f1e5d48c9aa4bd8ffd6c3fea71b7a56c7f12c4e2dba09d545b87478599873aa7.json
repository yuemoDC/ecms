{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nimport ProductsPage from './views/Products.vue';\nimport OrdersPage from './views/Orders.vue';\nimport HomePage from '../src/views/Home.vue';\nimport UserLoginPage from './views/UserLogin.vue';\nimport UserRegisterPage from './views/UserRegister.vue';\nimport MerchantApplicationList from './views/MerchantApplicationList.vue'; // 商家入驻申请管理\n\nconst routes = [{\n  path: '/products',\n  name: 'products',\n  component: ProductsPage,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/orders',\n  name: 'orders',\n  component: OrdersPage,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/home',\n  name: 'home',\n  component: HomePage,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/login',\n  name: 'login',\n  component: UserLoginPage\n}, {\n  path: '/register',\n  name: 'register',\n  component: UserRegisterPage\n}, {\n  path: '/',\n  redirect: '/login'\n}, {\n  path: '/merchant-applications',\n  name: 'merchant-applications',\n  component: MerchantApplicationList\n}, {\n  path: '/admin/data-visualization',\n  name: 'AdminDataVisualization',\n  component: () => import('./views/AdminDataVisualizationView.vue')\n}, {\n  path: '/admin/data-visualization',\n  name: 'AdminDataVisualization',\n  component: SalesPredictionView\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n  const token = localStorage.getItem('token');\n  if (requiresAuth && !token) {\n    next('/login');\n  } else if ((to.path === '/login' || to.path === '/register') && token) {\n    next('/home');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","ProductsPage","OrdersPage","HomePage","UserLoginPage","UserRegisterPage","MerchantApplicationList","routes","path","name","component","meta","requiresAuth","redirect","SalesPredictionView","router","history","beforeEach","to","from","next","matched","some","record","token","localStorage","getItem"],"sources":["E:/shixun/420/ecms/ecmsvue/src/router.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\nimport ProductsPage from './views/Products.vue';\nimport OrdersPage from './views/Orders.vue';\nimport HomePage from '../src/views/Home.vue';\nimport UserLoginPage from './views/UserLogin.vue';\nimport UserRegisterPage from './views/UserRegister.vue';\nimport MerchantApplicationList from './views/MerchantApplicationList.vue';  // 商家入驻申请管理\n\n\nconst routes = [\n    {\n        path: '/products',\n        name: 'products',\n        component: ProductsPage,\n        meta: { requiresAuth: true }\n    },\n    {\n        path: '/orders',\n        name: 'orders',\n        component: OrdersPage,\n        meta: { requiresAuth: true }\n    },\n    {\n        path: '/home',\n        name: 'home',\n        component: HomePage,\n        meta: { requiresAuth: true }\n    },\n    {\n        path: '/login',\n        name: 'login',\n        component: UserLoginPage\n    },\n    {\n        path: '/register',\n        name: 'register',\n        component: UserRegisterPage\n    },\n    {\n        path: '/',\n        redirect: '/login'\n    },\n    {\n        path: '/merchant-applications',\n        name: 'merchant-applications',\n        component: MerchantApplicationList,\n    },\n    {\n        path: '/admin/data-visualization',\n        name: 'AdminDataVisualization',\n        component: () => import('./views/AdminDataVisualizationView.vue'),\n\n    },\n\n    {\n        path: '/admin/data-visualization',\n        name: 'AdminDataVisualization',\n        component: SalesPredictionView,\n     \n    },\n];\n\nconst router = createRouter({\n    history: createWebHistory(),\n    routes\n});\n\nrouter.beforeEach((to, from, next) => {\n    const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n    const token = localStorage.getItem('token');\n\n    if (requiresAuth && !token) {\n        next('/login');\n    } else if ((to.path === '/login' || to.path === '/register') && token) {\n        next('/home');\n    } else {\n        next();\n    }\n});\n\nexport default router;\n"],"mappings":";;AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,gBAAgB,MAAM,0BAA0B;AACvD,OAAOC,uBAAuB,MAAM,qCAAqC,CAAC,CAAE;;AAG5E,MAAMC,MAAM,GAAG,CACX;EACIC,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAET,YAAY;EACvBU,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC/B,CAAC,EACD;EACIJ,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAER,UAAU;EACrBS,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC/B,CAAC,EACD;EACIJ,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEP,QAAQ;EACnBQ,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC/B,CAAC,EACD;EACIJ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEN;AACf,CAAC,EACD;EACII,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEL;AACf,CAAC,EACD;EACIG,IAAI,EAAE,GAAG;EACTK,QAAQ,EAAE;AACd,CAAC,EACD;EACIL,IAAI,EAAE,wBAAwB;EAC9BC,IAAI,EAAE,uBAAuB;EAC7BC,SAAS,EAAEJ;AACf,CAAC,EACD;EACIE,IAAI,EAAE,2BAA2B;EACjCC,IAAI,EAAE,wBAAwB;EAC9BC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,wCAAwC;AAEpE,CAAC,EAED;EACIF,IAAI,EAAE,2BAA2B;EACjCC,IAAI,EAAE,wBAAwB;EAC9BC,SAAS,EAAEI;AAEf,CAAC,CACJ;AAED,MAAMC,MAAM,GAAGhB,YAAY,CAAC;EACxBiB,OAAO,EAAEhB,gBAAgB,CAAC,CAAC;EAC3BO;AACJ,CAAC,CAAC;AAEFQ,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAClC,MAAMR,YAAY,GAAGM,EAAE,CAACG,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACZ,IAAI,CAACC,YAAY,CAAC;EACxE,MAAMY,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAId,YAAY,IAAI,CAACY,KAAK,EAAE;IACxBJ,IAAI,CAAC,QAAQ,CAAC;EAClB,CAAC,MAAM,IAAI,CAACF,EAAE,CAACV,IAAI,KAAK,QAAQ,IAAIU,EAAE,CAACV,IAAI,KAAK,WAAW,KAAKgB,KAAK,EAAE;IACnEJ,IAAI,CAAC,OAAO,CAAC;EACjB,CAAC,MAAM;IACHA,IAAI,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}