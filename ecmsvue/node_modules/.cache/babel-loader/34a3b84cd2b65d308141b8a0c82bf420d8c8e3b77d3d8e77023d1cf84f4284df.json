{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"sales-trend-analysis\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nconst _hoisted_3 = {\n  class: \"controls\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  class: \"card-header\"\n};\nconst _hoisted_6 = {\n  ref: \"salesChartRef\",\n  style: {\n    \"height\": \"400px\"\n  }\n};\nconst _hoisted_7 = {\n  class: \"card-header\"\n};\nconst _hoisted_8 = [\"innerHTML\"];\nconst _hoisted_9 = {\n  class: \"card-header\"\n};\nconst _hoisted_10 = [\"innerHTML\"];\nconst _hoisted_11 = {\n  ref: \"peakAnalysisRef\",\n  style: {\n    \"height\": \"300px\"\n  }\n};\nconst _hoisted_12 = {\n  class: \"loading-container\"\n};\nconst _hoisted_13 = {\n  style: {\n    \"text-align\": \"center\",\n    \"padding\": \"50px\"\n  }\n};\nconst _hoisted_14 = {\n  class: \"empty-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_statistic = _resolveComponent(\"el-statistic\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_radio_button = _resolveComponent(\"el-radio-button\");\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_descriptions_item = _resolveComponent(\"el-descriptions-item\");\n  const _component_el_descriptions = _resolveComponent(\"el-descriptions\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 头部控制区域 \"), _createVNode(_component_el_card, {\n    class: \"mb-4\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"h3\", null, \"销售趋势分析\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_select, {\n      modelValue: $setup.selectedMerchantId,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.selectedMerchantId = $event),\n      placeholder: \"选择商家\",\n      onChange: $setup.loadSalesTrendData,\n      style: {\n        \"width\": \"200px\",\n        \"margin-right\": \"10px\"\n      }\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.merchants, merchant => {\n        return _openBlock(), _createBlock(_component_el_option, {\n          key: merchant.id,\n          label: merchant.name,\n          value: merchant.id\n        }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.loadSalesTrendData,\n      loading: $setup.loading,\n      disabled: !$setup.selectedMerchantId\n    }, {\n      default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\" 分析数据 \")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"loading\", \"disabled\"]), _createVNode(_component_el_button, {\n      type: \"success\",\n      onClick: $setup.exportData,\n      disabled: !$setup.analysisData\n    }, {\n      default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\" 导出报告 \")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"disabled\"])])])]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 主要数据展示区域 \"), $setup.analysisData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createCommentVNode(\" 关键指标 \"), _createVNode(_component_el_row, {\n    gutter: 20,\n    class: \"metrics-row\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 6\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_statistic, {\n          title: \"总销售额\",\n          value: $setup.analysisData.totalSales,\n          prefix: \"￥\",\n          precision: 2\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 6\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_statistic, {\n          title: \"平均月销售额\",\n          value: $setup.analysisData.avgMonthlySales,\n          prefix: \"￥\",\n          precision: 2\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 6\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_statistic, {\n          title: $setup.latestGrowth.month + ' 环比增长',\n          value: $setup.latestGrowth.growthRate,\n          suffix: \"%\",\n          precision: 2,\n          \"value-style\": {\n            color: $setup.latestGrowth.growthRate > 0 ? '#67C23A' : '#F56C6C'\n          }\n        }, null, 8 /* PROPS */, [\"title\", \"value\", \"value-style\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 6\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_statistic, {\n          title: \"数据月份数\",\n          value: Object.keys($setup.analysisData.monthlySales).length\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 图表区域 \"), _createVNode(_component_el_row, {\n    gutter: 20\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 16\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, null, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_5, [_cache[10] || (_cache[10] = _createElementVNode(\"span\", null, \"销售趋势图表\", -1 /* HOISTED */)), _createVNode(_component_el_radio_group, {\n          modelValue: $setup.chartType,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.chartType = $event),\n          onChange: $setup.updateChart\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_radio_button, {\n            label: \"line\"\n          }, {\n            default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\"折线图\")])),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_radio_button, {\n            label: \"bar\"\n          }, {\n            default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\"柱状图\")])),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_radio_button, {\n            label: \"area\"\n          }, {\n            default: _withCtx(() => _cache[9] || (_cache[9] = [_createTextVNode(\"面积图\")])),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])])]),\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_6, null, 512 /* NEED_PATCH */)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 8\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, null, {\n        header: _withCtx(() => _cache[11] || (_cache[11] = [_createElementVNode(\"span\", null, \"月度增长率\", -1 /* HOISTED */)])),\n        default: _withCtx(() => [_createVNode(_component_el_table, {\n          data: $setup.analysisData.growthRates,\n          style: {\n            \"width\": \"100%\"\n          },\n          \"max-height\": \"400\",\n          \"highlight-current-row\": \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"month\",\n            label: \"月份\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"sales\",\n            label: \"销售额\"\n          }, {\n            default: _withCtx(scope => [_createTextVNode(\" ￥\" + _toDisplayString(scope.row.sales.toFixed(2)), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"growthRate\",\n            label: \"环比增长\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_tag, {\n              type: scope.row.growthRate > 0 ? 'success' : scope.row.growthRate < 0 ? 'danger' : 'info',\n              effect: \"dark\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(scope.row.growthRate > 0 ? '+' : '') + _toDisplayString(scope.row.growthRate) + \"% \", 1 /* TEXT */)]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"data\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 分析洞察与建议 \"), _createVNode(_component_el_row, {\n    gutter: 20,\n    class: \"mt-4\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 12\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, null, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_7, [_cache[13] || (_cache[13] = _createElementVNode(\"span\", null, \"销售趋势洞察\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n          type: \"text\",\n          onClick: _cache[2] || (_cache[2] = $event => $setup.copyText($setup.analysisData.insights)),\n          icon: \"CopyDocument\"\n        }, {\n          default: _withCtx(() => _cache[12] || (_cache[12] = [_createTextVNode(\"复制\")])),\n          _: 1 /* STABLE */\n        })])]),\n        default: _withCtx(() => [_createElementVNode(\"div\", {\n          class: \"insight-content\",\n          innerHTML: $setup.formatText($setup.analysisData.insights)\n        }, null, 8 /* PROPS */, _hoisted_8)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 12\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, null, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_9, [_cache[15] || (_cache[15] = _createElementVNode(\"span\", null, \"行动建议\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n          type: \"text\",\n          onClick: _cache[3] || (_cache[3] = $event => $setup.copyText($setup.analysisData.recommendations)),\n          icon: \"CopyDocument\"\n        }, {\n          default: _withCtx(() => _cache[14] || (_cache[14] = [_createTextVNode(\"复制\")])),\n          _: 1 /* STABLE */\n        })])]),\n        default: _withCtx(() => [_createElementVNode(\"div\", {\n          class: \"recommendation-content\",\n          innerHTML: $setup.formatText($setup.analysisData.recommendations)\n        }, null, 8 /* PROPS */, _hoisted_10)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 销售峰谷分析 \"), _createVNode(_component_el_card, {\n    class: \"mt-4\"\n  }, {\n    header: _withCtx(() => _cache[16] || (_cache[16] = [_createElementVNode(\"span\", null, \"销售峰谷分析\", -1 /* HOISTED */)])),\n    default: _withCtx(() => [_createVNode(_component_el_row, {\n      gutter: 20\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_col, {\n        span: 8\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_11, null, 512 /* NEED_PATCH */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_col, {\n        span: 16\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_descriptions, {\n          column: 2,\n          border: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_descriptions_item, {\n            label: \"销售高峰月份\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.getHighestSalesMonth().month), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"最高销售额\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\" ￥\" + _toDisplayString($setup.getHighestSalesMonth().sales.toFixed(2)), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"销售低谷月份\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.getLowestSalesMonth().month), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"最低销售额\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\" ￥\" + _toDisplayString($setup.getLowestSalesMonth().sales.toFixed(2)), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"总体趋势\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_tag, {\n              type: $setup.getOverallTrendType()\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.getOverallTrendText()), 1 /* TEXT */)]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"type\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"波动系数\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.calculateVolatility()) + \"% \", 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })])) : $setup.loading ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 加载状态 \"), _createElementVNode(\"div\", _hoisted_12, [_createVNode(_component_el_card, null, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_13, [_createVNode(_component_el_icon, {\n      class: \"is-loading\",\n      size: \"40px\",\n      color: \"#409EFF\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"Loading\"])]),\n      _: 1 /* STABLE */\n    }), _cache[17] || (_cache[17] = _createElementVNode(\"p\", null, \"正在分析销售数据...\", -1 /* HOISTED */))])]),\n    _: 1 /* STABLE */\n  })])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" 空状态 \"), _createElementVNode(\"div\", _hoisted_14, [_createVNode(_component_el_empty, {\n    description: \"请选择商家开始分析\"\n  })])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","ref","style","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_el_card","default","_withCtx","_createElementVNode","_hoisted_2","_hoisted_3","_component_el_select","modelValue","$setup","selectedMerchantId","_cache","$event","placeholder","onChange","loadSalesTrendData","_Fragment","_renderList","merchants","merchant","_createBlock","_component_el_option","id","label","name","value","_","_component_el_button","type","onClick","loading","disabled","_createTextVNode","exportData","analysisData","_hoisted_4","_component_el_row","gutter","_component_el_col","span","shadow","_component_el_statistic","title","totalSales","prefix","precision","avgMonthlySales","latestGrowth","month","growthRate","suffix","color","Object","keys","monthlySales","length","header","_hoisted_5","_component_el_radio_group","chartType","updateChart","_component_el_radio_button","_hoisted_6","_component_el_table","data","growthRates","_component_el_table_column","prop","width","scope","_toDisplayString","row","sales","toFixed","_component_el_tag","effect","_hoisted_7","copyText","insights","icon","innerHTML","formatText","_hoisted_8","_hoisted_9","recommendations","_hoisted_10","_hoisted_11","_component_el_descriptions","column","border","_component_el_descriptions_item","getHighestSalesMonth","getLowestSalesMonth","getOverallTrendType","getOverallTrendText","calculateVolatility","_hoisted_12","_hoisted_13","_component_el_icon","size","_hoisted_14","_component_el_empty","description"],"sources":["E:\\shixun\\420\\ecms\\ecmsvue\\src\\views\\SalesTrendAnalysis.vue"],"sourcesContent":["<template>\r\n  <div class=\"sales-trend-analysis\">\r\n    <!-- 头部控制区域 -->\r\n    <el-card class=\"mb-4\">\r\n      <div class=\"header\">\r\n        <h3>销售趋势分析</h3>\r\n        <div class=\"controls\">\r\n          <el-select\r\n              v-model=\"selectedMerchantId\"\r\n              placeholder=\"选择商家\"\r\n              @change=\"loadSalesTrendData\"\r\n              style=\"width: 200px; margin-right: 10px\"\r\n          >\r\n            <el-option\r\n                v-for=\"merchant in merchants\"\r\n                :key=\"merchant.id\"\r\n                :label=\"merchant.name\"\r\n                :value=\"merchant.id\"\r\n            />\r\n          </el-select>\r\n          <el-button\r\n              type=\"primary\"\r\n              @click=\"loadSalesTrendData\"\r\n              :loading=\"loading\"\r\n              :disabled=\"!selectedMerchantId\"\r\n          >\r\n            分析数据\r\n          </el-button>\r\n          <el-button\r\n              type=\"success\"\r\n              @click=\"exportData\"\r\n              :disabled=\"!analysisData\"\r\n          >\r\n            导出报告\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 主要数据展示区域 -->\r\n    <div v-if=\"analysisData\">\r\n      <!-- 关键指标 -->\r\n      <el-row :gutter=\"20\" class=\"metrics-row\">\r\n        <el-col :span=\"6\">\r\n          <el-card shadow=\"hover\">\r\n            <el-statistic title=\"总销售额\" :value=\"analysisData.totalSales\" prefix=\"￥\" :precision=\"2\" />\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-card shadow=\"hover\">\r\n            <el-statistic title=\"平均月销售额\" :value=\"analysisData.avgMonthlySales\" prefix=\"￥\" :precision=\"2\" />\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-card shadow=\"hover\">\r\n            <el-statistic\r\n                :title=\"latestGrowth.month + ' 环比增长'\"\r\n                :value=\"latestGrowth.growthRate\"\r\n                suffix=\"%\"\r\n                :precision=\"2\"\r\n                :value-style=\"{ color: latestGrowth.growthRate > 0 ? '#67C23A' : '#F56C6C' }\"\r\n            />\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-card shadow=\"hover\">\r\n            <el-statistic title=\"数据月份数\" :value=\"Object.keys(analysisData.monthlySales).length\" />\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 图表区域 -->\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"16\">\r\n          <el-card>\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>销售趋势图表</span>\r\n                <el-radio-group v-model=\"chartType\" @change=\"updateChart\">\r\n                  <el-radio-button label=\"line\">折线图</el-radio-button>\r\n                  <el-radio-button label=\"bar\">柱状图</el-radio-button>\r\n                  <el-radio-button label=\"area\">面积图</el-radio-button>\r\n                </el-radio-group>\r\n              </div>\r\n            </template>\r\n            <div ref=\"salesChartRef\" style=\"height: 400px;\"></div>\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"8\">\r\n          <el-card>\r\n            <template #header>\r\n              <span>月度增长率</span>\r\n            </template>\r\n            <el-table\r\n                :data=\"analysisData.growthRates\"\r\n                style=\"width: 100%\"\r\n                max-height=\"400\"\r\n                highlight-current-row\r\n            >\r\n              <el-table-column prop=\"month\" label=\"月份\" width=\"120\" />\r\n              <el-table-column prop=\"sales\" label=\"销售额\">\r\n                <template #default=\"scope\">\r\n                  ￥{{ scope.row.sales.toFixed(2) }}\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"growthRate\" label=\"环比增长\">\r\n                <template #default=\"scope\">\r\n                  <el-tag\r\n                      :type=\"scope.row.growthRate > 0 ? 'success' : (scope.row.growthRate < 0 ? 'danger' : 'info')\"\r\n                      effect=\"dark\"\r\n                  >\r\n                    {{ scope.row.growthRate > 0 ? '+' : '' }}{{ scope.row.growthRate }}%\r\n                  </el-tag>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 分析洞察与建议 -->\r\n      <el-row :gutter=\"20\" class=\"mt-4\">\r\n        <el-col :span=\"12\">\r\n          <el-card>\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>销售趋势洞察</span>\r\n                <el-button type=\"text\" @click=\"copyText(analysisData.insights)\" icon=\"CopyDocument\">复制</el-button>\r\n              </div>\r\n            </template>\r\n            <div class=\"insight-content\" v-html=\"formatText(analysisData.insights)\"></div>\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"12\">\r\n          <el-card>\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>行动建议</span>\r\n                <el-button type=\"text\" @click=\"copyText(analysisData.recommendations)\" icon=\"CopyDocument\">复制</el-button>\r\n              </div>\r\n            </template>\r\n            <div class=\"recommendation-content\" v-html=\"formatText(analysisData.recommendations)\"></div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 销售峰谷分析 -->\r\n      <el-card class=\"mt-4\">\r\n        <template #header>\r\n          <span>销售峰谷分析</span>\r\n        </template>\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"8\">\r\n            <div ref=\"peakAnalysisRef\" style=\"height: 300px;\"></div>\r\n          </el-col>\r\n          <el-col :span=\"16\">\r\n            <el-descriptions :column=\"2\" border>\r\n              <el-descriptions-item label=\"销售高峰月份\">\r\n                {{ getHighestSalesMonth().month }}\r\n              </el-descriptions-item>\r\n              <el-descriptions-item label=\"最高销售额\">\r\n                ￥{{ getHighestSalesMonth().sales.toFixed(2) }}\r\n              </el-descriptions-item>\r\n              <el-descriptions-item label=\"销售低谷月份\">\r\n                {{ getLowestSalesMonth().month }}\r\n              </el-descriptions-item>\r\n              <el-descriptions-item label=\"最低销售额\">\r\n                ￥{{ getLowestSalesMonth().sales.toFixed(2) }}\r\n              </el-descriptions-item>\r\n              <el-descriptions-item label=\"总体趋势\">\r\n                <el-tag :type=\"getOverallTrendType()\">\r\n                  {{ getOverallTrendText() }}\r\n                </el-tag>\r\n              </el-descriptions-item>\r\n              <el-descriptions-item label=\"波动系数\">\r\n                {{ calculateVolatility() }}%\r\n              </el-descriptions-item>\r\n            </el-descriptions>\r\n          </el-col>\r\n        </el-row>\r\n      </el-card>\r\n    </div>\r\n\r\n    <!-- 加载状态 -->\r\n    <div v-else-if=\"loading\" class=\"loading-container\">\r\n      <el-card>\r\n        <div style=\"text-align: center; padding: 50px;\">\r\n          <el-icon class=\"is-loading\" size=\"40px\" color=\"#409EFF\">\r\n            <Loading />\r\n          </el-icon>\r\n          <p>正在分析销售数据...</p>\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n\r\n    <!-- 空状态 -->\r\n    <div v-else class=\"empty-container\">\r\n      <el-empty description=\"请选择商家开始分析\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed,  nextTick } from 'vue';\r\nimport { ElMessage, ElMessageBox } from 'element-plus';\r\nimport { Loading } from '@element-plus/icons-vue';\r\nimport * as echarts from 'echarts';\r\nimport axios from 'axios';\r\n\r\n// 数据状态\r\nconst selectedMerchantId = ref(null);\r\nconst loading = ref(false);\r\nconst analysisData = ref(null);\r\nconst chartType = ref('line');\r\n\r\n// 商家列表（实际应用中应从API获取）\r\nconst merchants = ref([\r\n  { id: 1, name: '商家A' },\r\n  { id: 2, name: '商家B' },\r\n  { id: 3, name: '商家C' }\r\n]);\r\n\r\n// DOM引用\r\nconst salesChartRef = ref(null);\r\nconst peakAnalysisRef = ref(null);\r\nlet salesChart = null;\r\nlet peakChart = null;\r\n\r\n// 加载销售趋势数据\r\nconst loadSalesTrendData = async () => {\r\n  if (!selectedMerchantId.value) {\r\n    ElMessage.warning('请先选择商家');\r\n    return;\r\n  }\r\n\r\n  loading.value = true;\r\n  try {\r\n    const response = await axios.get(`/api/data-analysis/sales-trend/${selectedMerchantId.value}`);\r\n    analysisData.value = response.data;\r\n\r\n    nextTick(() => {\r\n      renderSalesChart();\r\n      renderPeakAnalysisChart();\r\n    });\r\n  } catch (error) {\r\n    console.error('加载数据失败:', error);\r\n    ElMessage.error('加载数据失败，请稍后重试');\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\n// 渲染销售趋势图表\r\nconst renderSalesChart = () => {\r\n  if (!salesChartRef.value) return;\r\n\r\n  if (salesChart) {\r\n    salesChart.dispose();\r\n  }\r\n\r\n  salesChart = echarts.init(salesChartRef.value);\r\n  const salesData = analysisData.value.monthlySales;\r\n\r\n  const option = {\r\n    title: {\r\n      text: '月度销售趋势',\r\n      left: 'center'\r\n    },\r\n    tooltip: {\r\n      trigger: 'axis',\r\n      formatter: (params) => {\r\n        const param = params[0];\r\n        const growthData = analysisData.value.growthRates.find(g => g.month === param.name);\r\n        let tooltip = `${param.name}<br/>销售额: ￥${param.value.toFixed(2)}`;\r\n        if (growthData) {\r\n          tooltip += `<br/>环比增长: ${growthData.growthRate}%`;\r\n        }\r\n        return tooltip;\r\n      }\r\n    },\r\n    toolbox: {\r\n      feature: {\r\n        dataZoom: { show: true },\r\n        restore: { show: true },\r\n        saveAsImage: { show: true }\r\n      }\r\n    },\r\n    xAxis: {\r\n      type: 'category',\r\n      data: Object.keys(salesData),\r\n      axisLabel: {\r\n        rotate: 45\r\n      }\r\n    },\r\n    yAxis: {\r\n      type: 'value',\r\n      axisLabel: {\r\n        formatter: '￥{value}'\r\n      }\r\n    },\r\n    series: [{\r\n      data: Object.values(salesData),\r\n      type: chartType.value,\r\n      smooth: true,\r\n      areaStyle: chartType.value === 'area' ? {\r\n        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n          { offset: 0, color: 'rgba(64, 158, 255, 0.3)' },\r\n          { offset: 1, color: 'rgba(64, 158, 255, 0.1)' }\r\n        ])\r\n      } : null,\r\n      itemStyle: {\r\n        color: '#409EFF'\r\n      },\r\n      label: {\r\n        show: chartType.value === 'bar',\r\n        position: 'top',\r\n        formatter: (params) => `￥${params.value.toFixed(0)}`\r\n      }\r\n    }]\r\n  };\r\n\r\n  salesChart.setOption(option);\r\n\r\n  // 监听窗口大小变化\r\n  window.addEventListener('resize', () => {\r\n    salesChart.resize();\r\n  });\r\n};\r\n\r\n// 渲染峰谷分析图表\r\nconst renderPeakAnalysisChart = () => {\r\n  if (!peakAnalysisRef.value) return;\r\n\r\n  if (peakChart) {\r\n    peakChart.dispose();\r\n  }\r\n\r\n  peakChart = echarts.init(peakAnalysisRef.value);\r\n  const highest = getHighestSalesMonth();\r\n  const lowest = getLowestSalesMonth();\r\n\r\n  const option = {\r\n    title: {\r\n      text: '销售峰谷对比',\r\n      left: 'center'\r\n    },\r\n    tooltip: {\r\n      trigger: 'item',\r\n      formatter: '{b}: ￥{c}'\r\n    },\r\n    legend: {\r\n      bottom: 0\r\n    },\r\n    series: [{\r\n      type: 'pie',\r\n      radius: ['40%', '70%'],\r\n      avoidLabelOverlap: false,\r\n      itemStyle: {\r\n        borderRadius: 10,\r\n        borderColor: '#fff',\r\n        borderWidth: 2\r\n      },\r\n      label: {\r\n        show: true,\r\n        formatter: '{b}: {d}%'\r\n      },\r\n      emphasis: {\r\n        label: {\r\n          show: true,\r\n          fontSize: '16',\r\n          fontWeight: 'bold'\r\n        }\r\n      },\r\n      data: [\r\n        {\r\n          value: highest.sales,\r\n          name: `最高(${highest.month})`,\r\n          itemStyle: { color: '#67C23A' }\r\n        },\r\n        {\r\n          value: lowest.sales,\r\n          name: `最低(${lowest.month})`,\r\n          itemStyle: { color: '#F56C6C' }\r\n        },\r\n        {\r\n          value: analysisData.value.avgMonthlySales,\r\n          name: '平均值',\r\n          itemStyle: { color: '#409EFF' }\r\n        }\r\n      ]\r\n    }]\r\n  };\r\n\r\n  peakChart.setOption(option);\r\n\r\n  window.addEventListener('resize', () => {\r\n    peakChart.resize();\r\n  });\r\n};\r\n\r\n// 更新图表类型\r\nconst updateChart = () => {\r\n  renderSalesChart();\r\n};\r\n\r\n// 获取最新增长率\r\nconst latestGrowth = computed(() => {\r\n  if (!analysisData.value || !analysisData.value.growthRates.length) {\r\n    return { month: '-', growthRate: 0 };\r\n  }\r\n  return analysisData.value.growthRates[analysisData.value.growthRates.length - 1];\r\n});\r\n\r\n// 获取最高销售月份\r\nconst getHighestSalesMonth = () => {\r\n  if (!analysisData.value) return { month: '-', sales: 0 };\r\n\r\n  const entries = Object.entries(analysisData.value.monthlySales);\r\n  const [month, sales] = entries.reduce((max, current) =>\r\n      current[1] > max[1] ? current : max\r\n  );\r\n\r\n  return { month, sales };\r\n};\r\n\r\n// 获取最低销售月份\r\nconst getLowestSalesMonth = () => {\r\n  if (!analysisData.value) return { month: '-', sales: 0 };\r\n\r\n  const entries = Object.entries(analysisData.value.monthlySales);\r\n  const [month, sales] = entries.reduce((min, current) =>\r\n      current[1] < min[1] ? current : min\r\n  );\r\n\r\n  return { month, sales };\r\n};\r\n\r\n// 获取总体趋势类型\r\nconst getOverallTrendType = () => {\r\n  if (!analysisData.value || !analysisData.value.growthRates.length) return 'info';\r\n\r\n  const avgGrowth = analysisData.value.growthRates\r\n      .reduce((sum, item) => sum + item.growthRate, 0) / analysisData.value.growthRates.length;\r\n\r\n  if (avgGrowth > 5) return 'success';\r\n  if (avgGrowth < -5) return 'danger';\r\n  return 'warning';\r\n};\r\n\r\n// 获取总体趋势文本\r\nconst getOverallTrendText = () => {\r\n  if (!analysisData.value || !analysisData.value.growthRates.length) return '无数据';\r\n\r\n  const avgGrowth = analysisData.value.growthRates\r\n      .reduce((sum, item) => sum + item.growthRate, 0) / analysisData.value.growthRates.length;\r\n\r\n  if (avgGrowth > 5) return '强势增长';\r\n  if (avgGrowth > 0) return '稳定增长';\r\n  if (avgGrowth > -5) return '略有下降';\r\n  return '明显下降';\r\n};\r\n\r\n// 计算波动系数\r\nconst calculateVolatility = () => {\r\n  if (!analysisData.value) return 0;\r\n\r\n  const salesValues = Object.values(analysisData.value.monthlySales);\r\n  const avg = salesValues.reduce((sum, val) => sum + val, 0) / salesValues.length;\r\n  const variance = salesValues.reduce((sum, val) => sum + Math.pow(val - avg, 2), 0) / salesValues.length;\r\n  const stdDev = Math.sqrt(variance);\r\n\r\n  return ((stdDev / avg) * 100).toFixed(2);\r\n};\r\n\r\n// 格式化文本\r\nconst formatText = (text) => {\r\n  return text.replace(/\\n/g, '<br>');\r\n};\r\n\r\n// 复制文本\r\nconst copyText = async (text) => {\r\n  try {\r\n    await navigator.clipboard.writeText(text);\r\n    ElMessage.success('复制成功');\r\n  } catch (err) {\r\n    console.error('复制失败:', err);\r\n    ElMessage.error('复制失败，请手动复制');\r\n  }\r\n};\r\n\r\n// 导出数据\r\nconst exportData = () => {\r\n  ElMessageBox.confirm(\r\n      '是否导出销售趋势分析报告？',\r\n      '导出确认',\r\n      {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'info'\r\n      }\r\n  ).then(() => {\r\n    // 准备导出数据\r\n    const exportContent = {\r\n      merchantId: selectedMerchantId.value,\r\n      date: new Date().toLocaleDateString(),\r\n      data: analysisData.value\r\n    };\r\n\r\n    // 创建下载链接\r\n    const blob = new Blob([JSON.stringify(exportContent, null, 2)], { type: 'application/json' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = `销售趋势分析报告_${selectedMerchantId.value}_${new Date().toISOString().split('T')[0]}.json`;\r\n    link.click();\r\n    window.URL.revokeObjectURL(url);\r\n\r\n    ElMessage.success('导出成功');\r\n  }).catch(() => {\r\n    // 取消导出\r\n  });\r\n};\r\n\r\n// 组件卸载时清理\r\nonUnmounted(() => {\r\n  if (salesChart) {\r\n    salesChart.dispose();\r\n  }\r\n  if (peakChart) {\r\n    peakChart.dispose();\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.sales-trend-analysis {\r\n  padding: 20px;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.controls {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.metrics-row {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.mb-4 {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.mt-4 {\r\n  margin-top: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.insight-content,\r\n.recommendation-content {\r\n  line-height: 1.6;\r\n  white-space: pre-line;\r\n  color: #606266;\r\n}\r\n\r\n.loading-container,\r\n.empty-container {\r\n  margin-top: 20px;\r\n}\r\n\r\n:deep(.el-statistic__content) {\r\n  font-size: 28px;\r\n}\r\n\r\n:deep(.el-table .cell) {\r\n  padding: 8px;\r\n}\r\n\r\n:deep(.el-descriptions__label) {\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}