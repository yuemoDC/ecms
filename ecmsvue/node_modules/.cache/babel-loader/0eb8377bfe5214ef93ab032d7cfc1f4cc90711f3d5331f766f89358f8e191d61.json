{"ast":null,"code":"import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home-container\"\n};\nconst _hoisted_2 = {\n  class: \"welcome-msg\"\n};\nconst _hoisted_3 = {\n  class: \"time-msg\"\n};\nconst _hoisted_4 = {\n  class: \"user-info\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(), _createBlock(_resolveDynamicComponent($options.navbarComponent))), _createCommentVNode(\" 根据用户角色动态加载导航栏 \"), _createElementVNode(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", null, \"欢迎来到首页!\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_2, \" 欢迎回来，\" + _toDisplayString($data.currentUser?.username || '用户') + \"！ \", 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_3, \"当前时间：\" + _toDisplayString($data.currentTime), 1 /* TEXT */), _createCommentVNode(\" 公告栏 \"), _createVNode(_component_el_card, {\n    class: \"notice-board\",\n    shadow: \"hover\"\n  }, {\n    default: _withCtx(() => _cache[0] || (_cache[0] = [_createElementVNode(\"h3\", null, \"📢 系统公告\", -1 /* HOISTED */), _createElementVNode(\"ul\", {\n      class: \"notice-list\"\n    }, [_createElementVNode(\"li\", null, \"🛠 系统维护时间：每周日凌晨 2:00 - 4:00\"), _createElementVNode(\"li\", null, \"📊 数据将在每天晚上自动备份\"), _createElementVNode(\"li\", null, \"📌 如遇页面问题，请刷新或重新登录\")], -1 /* HOISTED */)])),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"div\", _hoisted_4, [$data.currentUser ? (_openBlock(), _createBlock(_component_el_tag, {\n    key: 0,\n    type: \"success\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" 你好，你的\" + _toDisplayString($data.currentUser.role) + \"ID为: \" + _toDisplayString($data.currentUser.id), 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  })) : (_openBlock(), _createBlock(_component_el_tag, {\n    key: 1,\n    type: \"info\"\n  }, {\n    default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\" 未登录 \")])),\n    _: 1 /* STABLE */\n  }))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createBlock","_resolveDynamicComponent","$options","navbarComponent","_createCommentVNode","_createElementVNode","_hoisted_1","_hoisted_2","_toDisplayString","$data","currentUser","username","_hoisted_3","currentTime","_createVNode","_component_el_card","shadow","default","_withCtx","_cache","_","_hoisted_4","_component_el_tag","key","type","_createTextVNode","role","id"],"sources":["D:\\code_new\\ecms\\ecmsvue\\src\\views\\Home.vue"],"sourcesContent":["<template>\n  <div>\n    <component :is=\"navbarComponent\" /> <!-- 根据用户角色动态加载导航栏 -->\n    <div class=\"home-container\">\n      <h1>欢迎来到首页!</h1>\n      <p class=\"welcome-msg\">\n        欢迎回来，{{ currentUser?.username || '用户' }}！\n      </p>\n      <p class=\"time-msg\">当前时间：{{ currentTime }}</p>\n\n      <!-- 公告栏 -->\n      <el-card class=\"notice-board\" shadow=\"hover\">\n        <h3>📢 系统公告</h3>\n        <ul class=\"notice-list\">\n          <li>🛠 系统维护时间：每周日凌晨 2:00 - 4:00</li>\n          <li>📊 数据将在每天晚上自动备份</li>\n          <li>📌 如遇页面问题，请刷新或重新登录</li>\n        </ul>\n      </el-card>\n\n      <div class=\"user-info\">\n        <el-tag type=\"success\" v-if=\"currentUser\">\n          你好，你的{{ currentUser.role }}ID为: {{ currentUser.id }}\n        </el-tag>\n        <el-tag type=\"info\" v-else>\n          未登录\n        </el-tag>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport AppMerchantNavbar from '../components/MerchantNavbar.vue';\nimport AppAdminNavbar from '../components/AdminNavbar.vue'; // 引入管理员导航栏\nimport {gsap} from \"gsap\"\n\nexport default {\n  name: 'HomePage',\n  components: {\n    AppMerchantNavbar,\n    AppAdminNavbar\n  },\n  data() {\n    return {\n      currentUser: null,\n      currentTime: ''\n    }\n  },\n  mounted() {\n    this.initAnimations();\n  },\n  computed: {\n    navbarComponent() {\n      // 根据用户角色返回相应的导航栏组件\n      if (this.currentUser && this.currentUser.role === 'admin') {\n        return 'AppAdminNavbar'; // 如果是管理员，返回管理员导航栏\n      }\n      return 'AppMerchantNavbar'; // 默认返回商家导航栏\n    }\n  },\n  created() {\n    this.getCurrentUser();\n    this.updateTime();\n    setInterval(this.updateTime, 1000);\n  },\n  methods: {\n    initAnimations() {\n      // 标题动画\n      gsap.fromTo(\".home-container h1\",\n          {opacity: 0, y: -50},\n          {\n            opacity: 1,\n            y: 0,\n            duration: 1,\n            ease: \"power4.out\"\n          }\n      );\n\n      // 欢迎信息动画\n      gsap.fromTo(\".welcome-msg\",\n          {opacity: 0, x: -50},\n          {\n            opacity: 1,\n            x: 0,\n            delay: 0.3,\n            duration: 0.8,\n            ease: \"back.out(1.7)\"\n          }\n      );\n\n      // 公告栏动画\n      gsap.fromTo(\".notice-board\",\n          {\n            scale: 0.6,\n            opacity: 0\n          },\n          {\n            scale: 1,\n            rotation: 0,\n            opacity: 1,\n            delay: 0.5,\n            duration: 0.1,\n            ease: \"elastic.out(1, 0.5)\"\n          }\n      );\n\n      // 列表项动画\n      gsap.fromTo(\".notice-list li\",\n          {x: 100, opacity: 0},\n          {\n            x: 0,\n            opacity: 1,\n            stagger: 0.2,\n            delay: 0.8,\n            duration: 0.6,\n            ease: \"power2.out\"\n          }\n      );\n\n      // 用户标签浮动动画\n      gsap.to(\".user-info .el-tag\", {\n        y: -5,\n        duration: 1,\n        yoyo: true,\n        repeat: -1,\n        ease: \"power1.inOut\"\n      });\n\n      // 时间显示动画\n      gsap.fromTo(\".time-msg\",\n          {\n            opacity: 0,\n            x: 300,\n            textShadow: \"0 0 0px rgba(0,0,0,0)\"\n          },\n          {\n            opacity: 1,\n            x: 0,\n            duration: 1.5,\n            delay: 0.4,\n            textShadow: \"0 0 10px rgba(64,158,255,0.5)\",\n            ease: \"power4.out\"\n          }\n      );\n    },\n    getCurrentUser() {\n      // 从 localStorage 获取用户信息\n      const userData = localStorage.getItem('user');\n      if (userData) {\n        try {\n          const parsedUserData = JSON.parse(userData);\n          if (parsedUserData.success) {\n            this.currentUser = {\n              role: parsedUserData.role,\n              id: parsedUserData.userid, // 使用 userid 作为 id\n              token: parsedUserData.token,\n              username: parsedUserData.username\n            };\n          } else {\n            console.error('用户信息不正确:', parsedUserData);\n          }\n        } catch (e) {\n          console.error('解析用户信息失败:', e);\n        }\n      }\n    },\n    updateTime() {\n      const now = new Date();\n      this.currentTime = now.toLocaleString();\n    }\n  }\n};\n</script>\n\n<style scoped>\n.home-container {\n  position: relative;\n  padding: 20px;\n  text-align: center;\n}\n\n.home-container h1 {\n  font-size: 36px;\n  color: #409EFF;\n}\n\n.welcome-msg {\n  font-size: 20px;\n  margin: 10px 0;\n}\n\n.time-msg {\n  font-size: 16px;\n  color: #888;\n  margin-bottom: 30px;\n}\n\n.user-info {\n  position: absolute;\n  top: 20px;\n  right: 20px;\n}\n\n.notice-board {\n  max-width: 600px;\n  margin: 0 auto;\n  text-align: left;\n  padding: 20px;\n  border-left: 5px solid #409EFF;\n  width: 90%;\n  opacity: 0;\n}\n\n.notice-list {\n  list-style: none;\n  padding-left: 0;\n  margin-top: 10px;\n}\n\n.notice-list li {\n  margin-bottom: 10px;\n  font-size: 16px;\n  color: #333;\n}\n\n/* 响应式优化 */\n@media (max-width: 768px) {\n  .user-info {\n    position: static;\n    margin-top: 20px;\n    text-align: center;\n  }\n}\n</style>"],"mappings":";;EAGSA,KAAK,EAAC;AAAgB;;EAEtBA,KAAK,EAAC;AAAa;;EAGnBA,KAAK,EAAC;AAAU;;EAYdA,KAAK,EAAC;AAAW;;;;uBAnB1BC,mBAAA,CA6BM,e,cA5BJC,YAAA,CAAmCC,wBAFvC,CAEoBC,QAAA,CAAAC,eAAe,KAAKC,mBAAA,mBAAsB,EAC1DC,mBAAA,CA0BM,OA1BNC,UA0BM,G,0BAzBJD,mBAAA,CAAgB,YAAZ,SAAO,sBACXA,mBAAA,CAEI,KAFJE,UAEI,EAFmB,QAChB,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,WAAW,EAAEC,QAAQ,YAAW,IAC1C,iBACAN,mBAAA,CAA8C,KAA9CO,UAA8C,EAA1B,OAAK,GAAAJ,gBAAA,CAAGC,KAAA,CAAAI,WAAW,kBAEvCT,mBAAA,SAAY,EACZU,YAAA,CAOUC,kBAAA;IAPDjB,KAAK,EAAC,cAAc;IAACkB,MAAM,EAAC;;IAX3CC,OAAA,EAAAC,QAAA,CAYQ,MAAgBC,MAAA,QAAAA,MAAA,OAAhBd,mBAAA,CAAgB,YAAZ,SAAO,qBACXA,mBAAA,CAIK;MAJDP,KAAK,EAAC;IAAa,IACrBO,mBAAA,CAAoC,YAAhC,6BAA2B,GAC/BA,mBAAA,CAAwB,YAApB,iBAAe,GACnBA,mBAAA,CAA2B,YAAvB,oBAAkB,E;IAhBhCe,CAAA;MAoBMf,mBAAA,CAOM,OAPNgB,UAOM,GANyBZ,KAAA,CAAAC,WAAW,I,cAAxCV,YAAA,CAESsB,iBAAA;IAvBjBC,GAAA;IAqBgBC,IAAI,EAAC;;IArBrBP,OAAA,EAAAC,QAAA,CAqBkD,MACnC,CAtBfO,gBAAA,CAqBkD,QACnC,GAAAjB,gBAAA,CAAGC,KAAA,CAAAC,WAAW,CAACgB,IAAI,IAAG,OAAK,GAAAlB,gBAAA,CAAGC,KAAA,CAAAC,WAAW,CAACiB,EAAE,iB;IAtB3DP,CAAA;uBAwBQpB,YAAA,CAESsB,iBAAA;IA1BjBC,GAAA;IAwBgBC,IAAI,EAAC;;IAxBrBP,OAAA,EAAAC,QAAA,CAwBmC,MAE3BC,MAAA,QAAAA,MAAA,OA1BRM,gBAAA,CAwBmC,OAE3B,E;IA1BRL,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}