{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"navbar\"\n};\nconst _hoisted_2 = {\n  class: \"logout-wrapper\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_menu_item = _resolveComponent(\"el-menu-item\");\n  const _component_el_menu = _resolveComponent(\"el-menu\");\n  const _component_el_header = _resolveComponent(\"el-header\");\n  return _openBlock(), _createBlock(_component_el_header, null, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" 导航栏容器 \"), _createVNode(_component_el_menu, {\n      \"default-active\": $data.activeIndex,\n      class: \"menu\",\n      onSelect: $options.handleSelect,\n      mode: \"horizontal\"\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" 设置默认选中的菜单项 \"), _createCommentVNode(\" 处理菜单项选择事件 \"), _createCommentVNode(\" 设置菜单模式为水平 \"), _createVNode(_component_el_menu_item, {\n        index: \"home\"\n      }, {\n        default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"首页\")])),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 首页菜单项 \"), _createVNode(_component_el_menu_item, {\n        index: \"products\"\n      }, {\n        default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"产品管理\")])),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 产品管理菜单项 \"), _createVNode(_component_el_menu_item, {\n        index: \"orders\"\n      }, {\n        default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"订单管理\")])),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 订单管理菜单项 \"), _createVNode(_component_el_menu_item, {\n        index: \"merchantApplication\"\n      }, {\n        default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"商家入驻申请\")])),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 订单管理菜单项 \"), _createCommentVNode(\" 登出按钮放在最右边 \"), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 日夜模式按钮 \"), _createElementVNode(\"div\", {\n        class: \"theme-toggle\",\n        onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleTheme && $options.toggleTheme(...args))\n      }, _toDisplayString($data.isDark ? '☀️ 日间模式' : '🌙 夜间模式'), 1 /* TEXT */), _createCommentVNode(\" 登出按钮 \"), _createVNode(_component_el_menu_item, {\n        index: \"logout\",\n        onClick: $options.handleLogout\n      }, {\n        default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"登出\")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"default-active\", \"onSelect\"])])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","_createBlock","_component_el_header","default","_withCtx","_createElementVNode","_hoisted_1","_createCommentVNode","_createVNode","_component_el_menu","$data","activeIndex","onSelect","$options","handleSelect","mode","_component_el_menu_item","index","_cache","_createTextVNode","_","_hoisted_2","onClick","args","toggleTheme","isDark","handleLogout"],"sources":["E:\\软件工程实训\\ecmsV1.2\\ecmsvue\\src\\components\\MerchantNavbar.vue"],"sourcesContent":["<template>\n  <el-header>\n    <div class=\"navbar\"> <!-- 导航栏容器 -->\n      <el-menu :default-active=\"activeIndex\"\n      class=\"menu\"\n      @select=\"handleSelect\"\n      mode=\"horizontal\"\n      >\n      <!-- 设置默认选中的菜单项 -->\n      <!-- 处理菜单项选择事件 --><!-- 设置菜单模式为水平 -->\n      <el-menu-item index=\"home\">首页</el-menu-item> <!-- 首页菜单项 -->\n      <el-menu-item index=\"products\">产品管理</el-menu-item> <!-- 产品管理菜单项 -->\n      <el-menu-item index=\"orders\">订单管理</el-menu-item> <!-- 订单管理菜单项 -->\n      <el-menu-item index=\"merchantApplication\">商家入驻申请</el-menu-item> <!-- 订单管理菜单项 -->\n\n\n\n      <!-- 登出按钮放在最右边 -->\n        <div class=\"logout-wrapper\">\n          <!-- 日夜模式按钮 -->\n          <div class=\"theme-toggle\" @click=\"toggleTheme\">\n            {{ isDark ? '☀️ 日间模式' : '🌙 夜间模式' }}\n          </div>\n          <!-- 登出按钮 -->\n          <el-menu-item index=\"logout\" @click=\"handleLogout\">登出</el-menu-item>\n        </div>\n\n\n      </el-menu>\n    </div>\n  </el-header>\n</template>\n\n<script>\nexport default {\n  name: 'AppMerchantNavbar', // 组件名称\n  data() {\n    return {\n      activeIndex: 'home', // 设定默认激活的菜单项为首页\n      isDark: false\n    };\n  },\n  methods: {\n    handleSelect(index) {\n      // 当选择菜单项时调用此方法\n      if (index === 'logout') return; // 防止重复执行登出逻辑\n      this.activeIndex = index; // 更新选中的菜单项\n      this.$router.push({ name: index }); // 根据选中项跳转到对应的路由\n    },\n    toggleTheme() {\n      this.isDark = !this.isDark;\n      localStorage.setItem('theme', this.isDark ? 'dark' : 'light');\n      this.applyTheme();\n    },\n    handleLogout() {\n      // 处理用户登出\n      localStorage.removeItem('token'); // 清除本地存储中的 token\n      this.$router.push('/login'); // 跳转到登录页面\n    },\n    applyTheme() {\n      document.body.classList.toggle('dark-mode', this.isDark);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.logout-wrapper {\n  margin-left: auto;\n  display: flex;\n  align-items: center;\n  gap: 20px; /* 添加间隔让按钮有点距离 */\n}\n\n.navbar {\n  background-color: #409eff;\n  color: #ffffff;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  border: none;\n}\n\n.menu {\n  line-height: 60px;\n  flex-grow: 1;\n  display: flex;\n  align-items: center;\n  border: none;\n}\n\n.theme-toggle {\n  padding: 0 20px;\n  height: 60px;\n  line-height: 60px;\n  cursor: pointer;\n  color: #000;\n  font-size: 14px;\n  transition: background-color 0.3s;\n  white-space: nowrap;\n  user-select: none;\n  border: none;\n  outline: none;\n}\n\n.theme-toggle:hover {\n  background-color: rgba(0, 0, 0, 0.1); /* 悬停效果 */\n}\n\n.theme-toggle:active {\n  background-color: transparent;\n  color: inherit;\n}\n\n.el-menu .el-menu-item {\n  outline: none;\n  border: none;\n  height: 60px;\n  line-height: 60px;\n}\n\n.el-menu .el-menu-item:focus {\n  outline: none;\n  border: none;\n}\n\n.el-menu {\n  border: none;\n  outline: none;\n}\n</style>\n\n<style>\n/* 暗黑模式全局背景 */\nbody.dark-mode {\n  background-color: #000000;\n  color: #ffffff;\n}\n</style>\n"],"mappings":";;EAESA,KAAK,EAAC;AAAQ;;EAgBVA,KAAK,EAAC;AAAgB;;;;;uBAjBjCC,YAAA,CA6BYC,oBAAA;IA9BdC,OAAA,EAAAC,QAAA,CAEI,MA2BM,CA3BNC,mBAAA,CA2BM,OA3BNC,UA2BM,GA3BeC,mBAAA,WAAc,EACjCC,YAAA,CAyBUC,kBAAA;MAzBA,gBAAc,EAAEC,KAAA,CAAAC,WAAW;MACrCX,KAAK,EAAC,MAAM;MACXY,QAAM,EAAEC,QAAA,CAAAC,YAAY;MACrBC,IAAI,EAAC;;MANXZ,OAAA,EAAAC,QAAA,CAQM,MAAmB,CAAnBG,mBAAA,gBAAmB,EACnBA,mBAAA,eAAkB,EAAAA,mBAAA,eAAkB,EACpCC,YAAA,CAA4CQ,uBAAA;QAA9BC,KAAK,EAAC;MAAM;QAVhCd,OAAA,EAAAC,QAAA,CAUiC,MAAEc,MAAA,QAAAA,MAAA,OAVnCC,gBAAA,CAUiC,IAAE,E;QAVnCC,CAAA;UAUmDb,mBAAA,WAAc,EAC3DC,YAAA,CAAkDQ,uBAAA;QAApCC,KAAK,EAAC;MAAU;QAXpCd,OAAA,EAAAC,QAAA,CAWqC,MAAIc,MAAA,QAAAA,MAAA,OAXzCC,gBAAA,CAWqC,MAAI,E;QAXzCC,CAAA;UAWyDb,mBAAA,aAAgB,EACnEC,YAAA,CAAgDQ,uBAAA;QAAlCC,KAAK,EAAC;MAAQ;QAZlCd,OAAA,EAAAC,QAAA,CAYmC,MAAIc,MAAA,QAAAA,MAAA,OAZvCC,gBAAA,CAYmC,MAAI,E;QAZvCC,CAAA;UAYuDb,mBAAA,aAAgB,EACjEC,YAAA,CAA+DQ,uBAAA;QAAjDC,KAAK,EAAC;MAAqB;QAb/Cd,OAAA,EAAAC,QAAA,CAagD,MAAMc,MAAA,QAAAA,MAAA,OAbtDC,gBAAA,CAagD,QAAM,E;QAbtDC,CAAA;UAasEb,mBAAA,aAAgB,EAIhFA,mBAAA,eAAkB,EAChBF,mBAAA,CAOM,OAPNgB,UAOM,GANJd,mBAAA,YAAe,EACfF,mBAAA,CAEM;QAFDL,KAAK,EAAC,cAAc;QAAEsB,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEV,QAAA,CAAAW,WAAA,IAAAX,QAAA,CAAAW,WAAA,IAAAD,IAAA,CAAW;0BACxCb,KAAA,CAAAe,MAAM,0CAEXlB,mBAAA,UAAa,EACbC,YAAA,CAAoEQ,uBAAA;QAAtDC,KAAK,EAAC,QAAQ;QAAEK,OAAK,EAAET,QAAA,CAAAa;;QAxB/CvB,OAAA,EAAAC,QAAA,CAwB6D,MAAEc,MAAA,QAAAA,MAAA,OAxB/DC,gBAAA,CAwB6D,IAAE,E;QAxB/DC,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}