{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"h1\", null, \"产品管理\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $options.showProductForm,\n    style: {\n      \"margin-bottom\": \"20px\"\n    }\n  }, {\n    default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"添加产品\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_table, {\n    data: $data.products,\n    style: {\n      \"width\": \"100%\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"productName\",\n      label: \"产品名称\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"price\",\n      label: \"价格\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"status\",\n      label: \"状态\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"操作\"\n    }, {\n      default: _withCtx(scope => [_createVNode(_component_el_button, {\n        size: \"small\",\n        onClick: $event => $options.editProduct(scope.row)\n      }, {\n        default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"编辑\")])),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        size: \"small\",\n        type: \"danger\",\n        onClick: $event => $options.deleteProduct(scope.row.productId)\n      }, {\n        default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"删除\")])),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"]), _createVNode(_component_el_dialog, {\n    visible: $data.isProductFormVisible,\n    title: \"产品表单\",\n    onClose: $options.handleProductFormClose,\n    width: \"600px\"\n  }, {\n    footer: _withCtx(() => [_createVNode(_component_el_button, {\n      onClick: $options.handleProductFormClose\n    }, {\n      default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\"取消\")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $options.saveProduct\n    }, {\n      default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\"保存\")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      model: $data.productForm,\n      \"label-width\": \"120px\",\n      size: \"medium\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"产品名称\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.productForm.productName,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.productForm.productName = $event),\n          placeholder: \"请输入产品名称\",\n          required: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"价格\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"number\",\n          modelValue: $data.productForm.price,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.productForm.price = $event),\n          placeholder: \"请输入产品价格\",\n          required: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"状态\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $data.productForm.status,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.productForm.status = $event),\n          placeholder: \"选择状态\",\n          required: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_option, {\n            label: \"可用\",\n            value: \"active\"\n          }), _createVNode(_component_el_option, {\n            label: \"不可用\",\n            value: \"inactive\"\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\", \"onClose\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_createVNode","_component_el_button","type","onClick","$options","showProductForm","style","default","_withCtx","_cache","_createTextVNode","_","_component_el_table","data","$data","products","_component_el_table_column","prop","label","scope","size","$event","editProduct","row","deleteProduct","productId","_component_el_dialog","visible","isProductFormVisible","title","onClose","handleProductFormClose","width","footer","saveProduct","_component_el_form","model","productForm","_component_el_form_item","_component_el_input","modelValue","productName","placeholder","required","price","_component_el_select","status","_component_el_option","value"],"sources":["E:\\ecms\\ecmsvue\\src\\views\\Products.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>产品管理</h1>\r\n    <el-button type=\"primary\" @click=\"showProductForm\" style=\"margin-bottom: 20px;\">添加产品</el-button>\r\n    <el-table :data=\"products\" style=\"width: 100%;\">\r\n      <el-table-column prop=\"productName\" label=\"产品名称\" />\r\n      <el-table-column prop=\"price\" label=\"价格\" />\r\n      <el-table-column prop=\"status\" label=\"状态\" />\r\n      <el-table-column label=\"操作\">\r\n        <template #default=\"scope\">\r\n          <el-button size=\"small\" @click=\"editProduct(scope.row)\">编辑</el-button>\r\n          <el-button size=\"small\" type=\"danger\" @click=\"deleteProduct(scope.row.productId)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <el-dialog :visible=\"isProductFormVisible\" title=\"产品表单\" @close=\"handleProductFormClose\" width=\"600px\">\r\n      <el-form :model=\"productForm\" label-width=\"120px\" size=\"medium\">\r\n        <el-form-item label=\"产品名称\">\r\n          <el-input v-model=\"productForm.productName\" placeholder=\"请输入产品名称\" required />\r\n        </el-form-item>\r\n        <el-form-item label=\"价格\">\r\n          <el-input type=\"number\" v-model=\"productForm.price\" placeholder=\"请输入产品价格\" required />\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\">\r\n          <el-select v-model=\"productForm.status\" placeholder=\"选择状态\" required>\r\n            <el-option label=\"可用\" value=\"active\" />\r\n            <el-option label=\"不可用\" value=\"inactive\" />\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"handleProductFormClose\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"saveProduct\">保存</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'ProductManagement',\r\n  data() {\r\n    return {\r\n      products: [],\r\n      isProductFormVisible: false,\r\n      productForm: {\r\n        productName: '',\r\n        price: 0,\r\n        status: 'active'\r\n      },\r\n      selectedProduct: null\r\n    };\r\n  },\r\n  methods: {\r\n    fetchProducts() {\r\n      console.log('Fetching products...'); // 调试信息\r\n      axios.get('http://localhost:8080/api/products')\r\n          .then(response => {\r\n            console.log('Products fetched successfully:', response.data); // 成功获取产品信息\r\n            this.products = response.data;\r\n          })\r\n          .catch(error => {\r\n            console.error('获取产品时出错:', error); // 错误信息\r\n          });\r\n    },\r\n    showProductForm() {\r\n      console.log('Showing product form...'); // 调试信息\r\n      this.selectedProduct = null; // Reset selected product for adding new product\r\n      this.productForm = {\r\n        productName: '',\r\n        price: 0,\r\n        status: 'active'\r\n      };\r\n      this.isProductFormVisible = true;\r\n    },\r\n    editProduct(product) {\r\n      console.log('Editing product:', product); // 调试信息\r\n      this.selectedProduct = product; // 记录选择的产品\r\n      this.productForm = {...product}; // 将选择的产品信息填入表单\r\n      this.isProductFormVisible = true;\r\n    },\r\n    handleProductFormClose() {\r\n      console.log('Closing product form...'); // 调试信息\r\n      this.isProductFormVisible = false;\r\n    },\r\n    saveProduct() {\r\n      const url = this.selectedProduct\r\n          ? `http://localhost:8080/api/products/${this.selectedProduct.productId}`\r\n          : 'http://localhost:8080/api/products';\r\n\r\n      const method = this.selectedProduct ? 'put' : 'post';\r\n\r\n      console.log(`Saving product... Method: ${method}, URL: ${url}, Data:`, this.productForm); // 调试信息\r\n\r\n      axios[method](url, this.productForm)\r\n          .then(() => {\r\n            console.log('Product saved successfully'); // 成功保存产品信息\r\n            this.fetchProducts(); // 刷新产品列表\r\n            this.handleProductFormClose(); // 关闭表单\r\n          })\r\n          .catch(error => {\r\n            console.error('保存产品时出错:', error); // 错误信息\r\n          });\r\n    },\r\n    deleteProduct(productId) {\r\n      console.log('Deleting product with ID:', productId); // 调试信息\r\n      axios.delete(`http://localhost:8080/api/products/${productId}`)\r\n          .then(() => {\r\n            console.log('Product deleted successfully'); // 成功删除产品信息\r\n            this.fetchProducts(); // 删除后刷新产品列表\r\n          })\r\n          .catch(error => {\r\n            console.error('删除产品时出错:', error); // 错误信息\r\n          });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchProducts(); // 组件加载时获取产品列表\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.el-table {\r\n  width: 100%; /* 确保表格占满父容器 */\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}