{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"h1\", null, \"用户注册\", -1 /* HOISTED */)), _createVNode(_component_el_form, {\n    model: $data.user,\n    \"status-icon\": \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"用户名\",\n      rules: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }]\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.user.username,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.user.username = $event),\n        placeholder: \"请输入用户名\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"密码\",\n      rules: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }]\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        type: \"password\",\n        modelValue: $data.user.password,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.user.password = $event),\n        placeholder: \"请输入密码\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"角色\",\n      rules: [{\n        required: true,\n        message: '请选择角色',\n        trigger: 'change'\n      }]\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_select, {\n        modelValue: $data.user.role,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.user.role = $event),\n        placeholder: \"选择角色\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_option, {\n          label: \"管理员\",\n          value: \"ADMIN\"\n        }), _createVNode(_component_el_option, {\n          label: \"商户\",\n          value: \"MERCHANT\"\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $options.registerUser\n    }, {\n      default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"注册\")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"]), _cache[8] || (_cache[8] = _createElementVNode(\"h1\", null, \"用户登录\", -1 /* HOISTED */)), _createVNode(_component_el_form, {\n    model: $options.loginUser,\n    \"status-icon\": \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"用户名\",\n      rules: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }]\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $options.loginUser.username,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $options.loginUser.username = $event),\n        placeholder: \"请输入用户名\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"密码\",\n      rules: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }]\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        type: \"password\",\n        modelValue: $options.loginUser.password,\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $options.loginUser.password = $event),\n        placeholder: \"请输入密码\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $options.loginUser\n    }, {\n      default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\"登录\")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_createVNode","_component_el_form","model","$data","user","default","_withCtx","_component_el_form_item","label","rules","required","message","trigger","_component_el_input","modelValue","username","_cache","$event","placeholder","_","type","password","_component_el_select","role","_component_el_option","value","_component_el_button","onClick","$options","registerUser","_createTextVNode","loginUser"],"sources":["E:\\ecms\\ecmsvue\\src\\views\\LoginComponent.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>用户注册</h1>\r\n    <el-form :model=\"user\" status-icon>\r\n      <el-form-item label=\"用户名\" :rules=\"[{ required: true, message: '请输入用户名', trigger: 'blur' }]\">\r\n        <el-input v-model=\"user.username\" placeholder=\"请输入用户名\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"密码\" :rules=\"[{ required: true, message: '请输入密码', trigger: 'blur' }]\">\r\n        <el-input type=\"password\" v-model=\"user.password\" placeholder=\"请输入密码\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"角色\" :rules=\"[{ required: true, message: '请选择角色', trigger: 'change' }]\">\r\n        <el-select v-model=\"user.role\" placeholder=\"选择角色\">\r\n          <el-option label=\"管理员\" value=\"ADMIN\"></el-option>\r\n          <el-option label=\"商户\" value=\"MERCHANT\"></el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-button type=\"primary\" @click=\"registerUser\">注册</el-button>\r\n    </el-form>\r\n\r\n    <h1>用户登录</h1>\r\n    <el-form :model=\"loginUser\" status-icon>\r\n      <el-form-item label=\"用户名\" :rules=\"[{ required: true, message: '请输入用户名', trigger: 'blur' }]\">\r\n        <el-input v-model=\"loginUser.username\" placeholder=\"请输入用户名\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"密码\" :rules=\"[{ required: true, message: '请输入密码', trigger: 'blur' }]\">\r\n        <el-input type=\"password\" v-model=\"loginUser.password\" placeholder=\"请输入密码\"></el-input>\r\n      </el-form-item>\r\n      <el-button type=\"primary\" @click=\"loginUser\">登录</el-button>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: {\r\n        username: '',\r\n        password: '',\r\n        role: 'ADMIN' // 默认角色\r\n      },\r\n      loginUser: {\r\n        username: '',\r\n        password: ''\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    registerUser() {\r\n      axios.post('http://localhost:8080/api/users/register', this.user)\r\n          .then(response => {\r\n            console.log('注册成功:', response.data);\r\n            this.resetForm(); // 清空表单\r\n          })\r\n          .catch(error => {\r\n            console.error('注册失败:', error.response.data);\r\n          });\r\n    },\r\n    loginUser() {\r\n      axios.post('http://localhost:8080/api/users/login', this.loginUser)\r\n          .then(response => {\r\n            console.log('登录成功:', response.data);\r\n            // 可以在此处进行进一步操作，例如存储用户信息或重定向\r\n          })\r\n          .catch(error => {\r\n            console.error('登录失败:', error.response.data);\r\n          });\r\n    },\r\n    resetForm() {\r\n      this.user = {\r\n        username: '',\r\n        password: '',\r\n        role: 'ADMIN'\r\n      };\r\n      this.loginUser = {\r\n        username: '',\r\n        password: ''\r\n      };\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh1 {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}