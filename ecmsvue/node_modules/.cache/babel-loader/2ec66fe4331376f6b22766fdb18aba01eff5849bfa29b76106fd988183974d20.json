{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"wrapper\"\n};\nconst _hoisted_2 = {\n  style: {\n    \"margin\": \"200px auto\",\n    \"background-color\": \"#fff\",\n    \"width\": \"350px\",\n    \"padding\": \"20px\",\n    \"border-radius\": \"10px\"\n  }\n};\nconst _hoisted_3 = {\n  style: {\n    \"margin\": \"20px 0\",\n    \"text-align\": \"center\",\n    \"font-size\": \"24px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"b\", null, _toDisplayString($data.isLogin ? '登录' : '注册'), 1 /* TEXT */)]), _createVNode(_component_el_form, {\n    model: $data.form,\n    rules: $data.isLogin ? $data.loginRules : $data.registerRules,\n    ref: \"userForm\"\n  }, {\n    default: _withCtx(() => [$data.isLogin ? (_openBlock(), _createBlock(_component_el_form_item, {\n      key: 0,\n      prop: \"username\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        size: \"medium\",\n        \"prefix-icon\": \"el-icon-user\",\n        modelValue: $data.form.username,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.username = $event),\n        placeholder: \"用户名\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), !$data.isLogin ? (_openBlock(), _createBlock(_component_el_form_item, {\n      key: 1,\n      prop: \"newUsername\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        size: \"medium\",\n        \"prefix-icon\": \"el-icon-user\",\n        modelValue: $data.form.newUsername,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.newUsername = $event),\n        placeholder: \"用户名\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), $data.isLogin ? (_openBlock(), _createBlock(_component_el_form_item, {\n      key: 2,\n      prop: \"password\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        size: \"medium\",\n        \"prefix-icon\": \"el-icon-lock\",\n        \"show-password\": \"\",\n        modelValue: $data.form.password,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.form.password = $event),\n        placeholder: \"密码\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), !$data.isLogin ? (_openBlock(), _createBlock(_component_el_form_item, {\n      key: 3,\n      prop: \"newPassword\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        size: \"medium\",\n        \"prefix-icon\": \"el-icon-lock\",\n        \"show-password\": \"\",\n        modelValue: $data.form.newPassword,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.form.newPassword = $event),\n        placeholder: \"密码\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), !$data.isLogin ? (_openBlock(), _createBlock(_component_el_form_item, {\n      key: 4,\n      prop: \"email\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        size: \"medium\",\n        \"prefix-icon\": \"el-icon-mail\",\n        modelValue: $data.form.email,\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.form.email = $event),\n        placeholder: \"邮箱\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_form_item, {\n      style: {\n        \"margin\": \"10px 0\",\n        \"text-align\": \"right\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"warning\",\n        size: \"small\",\n        onClick: $options.toggleForm\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($data.isLogin ? '切换到注册' : '切换到登录'), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: _cache[5] || (_cache[5] = $event => $data.isLogin ? $options.handleLogin() : $options.handleRegister())\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($data.isLogin ? '登录' : '注册'), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"])])]);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","$data","isLogin","_createVNode","_component_el_form","model","form","rules","loginRules","registerRules","ref","default","_withCtx","_createBlock","_component_el_form_item","key","prop","_component_el_input","size","modelValue","username","_cache","$event","placeholder","_","_createCommentVNode","newUsername","password","newPassword","email","_component_el_button","type","onClick","$options","toggleForm","_createTextVNode","handleLogin","handleRegister"],"sources":["E:\\ecms\\ecmsvue\\src\\views\\LoginComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"wrapper\">\r\n    <div style=\"margin: 200px auto; background-color: #fff; width: 350px; padding: 20px; border-radius: 10px\">\r\n      <div style=\"margin: 20px 0; text-align: center; font-size: 24px\"><b>{{ isLogin ? '登录' : '注册' }}</b></div>\r\n      <el-form :model=\"form\" :rules=\"isLogin ? loginRules : registerRules\" ref=\"userForm\">\r\n        <el-form-item prop=\"username\" v-if=\"isLogin\">\r\n          <el-input size=\"medium\" prefix-icon=\"el-icon-user\" v-model=\"form.username\" placeholder=\"用户名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"newUsername\" v-if=\"!isLogin\">\r\n          <el-input size=\"medium\" prefix-icon=\"el-icon-user\" v-model=\"form.newUsername\" placeholder=\"用户名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\" v-if=\"isLogin\">\r\n          <el-input size=\"medium\" prefix-icon=\"el-icon-lock\" show-password v-model=\"form.password\" placeholder=\"密码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"newPassword\" v-if=\"!isLogin\">\r\n          <el-input size=\"medium\" prefix-icon=\"el-icon-lock\" show-password v-model=\"form.newPassword\" placeholder=\"密码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"email\" v-if=\"!isLogin\">\r\n          <el-input size=\"medium\" prefix-icon=\"el-icon-mail\" v-model=\"form.email\" placeholder=\"邮箱\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item style=\"margin: 10px 0; text-align: right\">\r\n          <el-button type=\"warning\" size=\"small\" @click=\"toggleForm\">{{ isLogin ? '切换到注册' : '切换到登录' }}</el-button>\r\n          <el-button type=\"primary\" size=\"small\" @click=\"isLogin ? handleLogin() : handleRegister()\">{{ isLogin ? '登录' : '注册' }}</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'; // 引入 Axios\r\n\r\nexport default {\r\n  name: \"LoginComponent\", // 使用多单词组件名称\r\n  data() {\r\n    return {\r\n      isLogin: true, // 表示当前是否是登录模式\r\n      form: {\r\n        username: '',\r\n        password: '',\r\n        newUsername: '',\r\n        newPassword: '',\r\n        email: ''\r\n      },\r\n      loginRules: {\r\n        username: [\r\n          {required: true, message: '请输入用户名', trigger: 'blur'},\r\n          {min: 3, max: 10, message: '长度在 3 到 10 个字符', trigger: 'blur'}\r\n        ],\r\n        password: [\r\n          {required: true, message: '请输入密码', trigger: 'blur'},\r\n          {min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur'}\r\n        ],\r\n      },\r\n      registerRules: {\r\n        newUsername: [\r\n          {required: true, message: '请输入用户名', trigger: 'blur'},\r\n          {min: 3, max: 10, message: '长度在 3 到 10 个字符', trigger: 'blur'}\r\n        ],\r\n        newPassword: [\r\n          {required: true, message: '请输入密码', trigger: 'blur'},\r\n          {min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur'}\r\n        ],\r\n        email: [\r\n          {required: true, message: '请输入邮箱', trigger: 'blur'},\r\n          {type: 'email', message: '邮箱格式不正确', trigger: 'blur'}\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleLogin() { // 重命名方法以避免重复\r\n      this.$refs['userForm'].validate(valid => {\r\n        if (valid) {\r\n          console.log(\"Attempting to login with: \", this.form); // 调试输出\r\n          axios.post(\"http://localhost:8080/api/users/login\", {\r\n            username: this.form.username,\r\n            password: this.form.password\r\n          })\r\n              .then(res => {\r\n                console.log(\"Response data: \", res.data); // 调试输出完整响应数据\r\n                if (res.data.message === \"登录成功\") { // 检查登录成功信息\r\n                  const role = res.data.role; // 获取角色信息\r\n                  const userId = res.data.userId; // 获取用户 ID\r\n                  console.log(\"User ID: \", userId); // 检查是否成功获取 ID\r\n                  if (userId) {\r\n                    localStorage.setItem('userId', userId); // 存储用户 ID 到 localStorage\r\n                    localStorage.setItem('role', role); // 存储角色信息\r\n                    this.$message.success(\"登录成功，用户ID: \" + userId); // 显示提示信息\r\n                    if (role === \"ADMIN\") {\r\n                      this.$router.push('/products'); // 管理员跳转到主页\r\n                    } else {\r\n                      this.$router.push('/'); // 普通用户跳转到产品页面\r\n                    }\r\n                  } else {\r\n                    console.error(\"No userId returned from backend!\");\r\n                    this.$message.error(\"登录失败，缺少用户ID\");\r\n                  }\r\n                } else {\r\n                  this.$message.error(res.data.message); // 后端返回失败信息提示\r\n                }\r\n              })\r\n              .catch(error => {\r\n                // 检查错误响应\r\n                if (error.response) {\r\n                  this.$message.error(error.response.data || \"请求失败\"); // 显示后端返回的错误信息\r\n                } else {\r\n                  console.error(\"Login error: \", error);\r\n                  this.$message.error(\"网络请求失败\"); // 处理网络请求失败情况\r\n                }\r\n              });\r\n        }\r\n      });\r\n    },\r\n\r\n    handleRegister() { // 重命名方法以避免重复\r\n      this.$refs['userForm'].validate(valid => {\r\n        if (valid) {\r\n          console.log(\"Attempting to register with: \", this.form); // 调试输出\r\n          axios.post(\"http://localhost:8080/api/users/register\", {\r\n            username: this.form.newUsername,\r\n            password: this.form.newPassword,\r\n            email: this.form.email\r\n          })\r\n              .then(res => {\r\n                console.log(res.data); // 调试输出\r\n                if (res.data.message === \"注册成功\") {\r\n                  this.$message.success(res.data.message);\r\n                  this.toggleForm(); // 切换回登录界面\r\n                } else {\r\n                  this.$message.error(res.data.message); // 显示后端返回的错误信息\r\n                }\r\n              })\r\n              .catch(error => {\r\n                // 检查错误响应\r\n                if (error.response) {\r\n                  this.$message.error(error.response.data || \"请求失败\"); // 显示后端返回的错误信息\r\n                } else {\r\n                  console.error(\"Register error:\", error);\r\n                  this.$message.error(\"网络请求失败\"); // 处理网络请求失败情况\r\n                }\r\n              });\r\n        }\r\n      });\r\n    },\r\n\r\n    toggleForm() {\r\n      this.isLogin = !this.isLogin; // 切换登录/注册状态\r\n      // 清空表单数据\r\n      if (this.isLogin) {\r\n        this.form.username = '';\r\n        this.form.password = '';\r\n      } else {\r\n        this.form.newUsername = '';\r\n        this.form.newPassword = '';\r\n        this.form.email = '';\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.wrapper {\r\n  height: 100vh;\r\n  background-image: linear-gradient(to bottom right, #FC466B, #3F5EFB);\r\n  overflow: hidden;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}